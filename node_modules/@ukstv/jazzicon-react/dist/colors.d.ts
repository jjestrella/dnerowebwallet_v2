import Color from 'color';
import MersenneTwister from 'mersenne-twister';
export declare class Colors {
    private readonly generator;
    private readonly wobble;
    readonly colors: Color[];
    constructor(generator: MersenneTwister, wobble?: number);
    next(): Color<string | number | Color<string | number | Color<string | number | Color<string | number | Color<string | number | Color<string | number | Color<string | number | Color<string | number | Color<string | number | Color<string | number | Color<string | number | Color<string | number | any | ArrayLike<number> | {
        [key: string]: any;
    }> | ArrayLike<number> | {
        [key: string]: any;
    }> | ArrayLike<number> | {
        [key: string]: any;
    }> | ArrayLike<number> | {
        [key: string]: any;
    }> | ArrayLike<number> | {
        [key: string]: any;
    }> | ArrayLike<number> | {
        [key: string]: any;
    }> | ArrayLike<number> | {
        [key: string]: any;
    }> | ArrayLike<number> | {
        [key: string]: any;
    }> | ArrayLike<number> | {
        [key: string]: any;
    }> | ArrayLike<number> | {
        [key: string]: any;
    }> | ArrayLike<number> | {
        [key: string]: any;
    }> | ArrayLike<number> | {
        [key: string]: any;
    }>;
}
