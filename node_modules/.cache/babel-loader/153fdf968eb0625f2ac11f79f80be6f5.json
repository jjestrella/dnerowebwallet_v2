{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport Dnero from './services/Dnero';\nimport Networks, { canViewSmartContracts } from './constants/Networks';\nimport DneroJS from \"./libs/dnerojs.esm\";\nexport function isStakingAvailable() {\n  return true;\n}\nexport function canStakeFromHardwareWallet() {\n  return true;\n}\nexport function areSmartContractsAvailable() {\n  const network = Dnero.getChainID();\n  return canViewSmartContracts(network);\n}\nexport function getMinStakeAmount(purpose) {\n  if (purpose === DneroJS.StakePurposes.StakeForValidator) {\n    return 2000000.0;\n  } else if (purpose === DneroJS.StakePurposes.StakeForSentry) {\n    return 1000.0;\n  } else if (purpose === DneroJS.StakePurposes.StakeForEliteEdge) {\n    return 10000.0;\n  } //Unknown\n\n\n  return 0.0;\n}\nexport function getMaxStakeAmount(purpose) {\n  if (purpose === DneroJS.StakePurposes.StakeForEliteEdge) {\n    return 500000.0;\n  } //No max\n\n\n  return 100000000000.0;\n}\nexport function getMaxDelegatedStakeAmount(purpose) {\n  if (purpose === DneroJS.StakePurposes.StakeForSentry) {\n    return 10000.0;\n  } //Unknown\n\n\n  return 0.0;\n}\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(isStakingAvailable, \"isStakingAvailable\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/Flags.js\");\n  reactHotLoader.register(canStakeFromHardwareWallet, \"canStakeFromHardwareWallet\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/Flags.js\");\n  reactHotLoader.register(areSmartContractsAvailable, \"areSmartContractsAvailable\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/Flags.js\");\n  reactHotLoader.register(getMinStakeAmount, \"getMinStakeAmount\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/Flags.js\");\n  reactHotLoader.register(getMaxStakeAmount, \"getMaxStakeAmount\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/Flags.js\");\n  reactHotLoader.register(getMaxDelegatedStakeAmount, \"getMaxDelegatedStakeAmount\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/Flags.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"names":["Dnero","Networks","canViewSmartContracts","DneroJS","isStakingAvailable","canStakeFromHardwareWallet","areSmartContractsAvailable","network","getChainID","getMinStakeAmount","purpose","StakePurposes","StakeForValidator","StakeForSentry","StakeForEliteEdge","getMaxStakeAmount","getMaxDelegatedStakeAmount"],"sources":["/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/Flags.js"],"sourcesContent":["import Dnero from './services/Dnero';\nimport Networks, {canViewSmartContracts} from './constants/Networks';\nimport DneroJS from \"./libs/dnerojs.esm\";\n\nexport function isStakingAvailable(){\n    return true;\n}\n\nexport function canStakeFromHardwareWallet(){\n    return true;\n}\n\nexport function areSmartContractsAvailable(){\n    const network = Dnero.getChainID();\n\n    return canViewSmartContracts(network);\n}\n\nexport function getMinStakeAmount(purpose){\n    if(purpose === DneroJS.StakePurposes.StakeForValidator){\n        return 2000000.0;\n    }\n    else if(purpose === DneroJS.StakePurposes.StakeForSentry){\n        return 1000.0;\n    }\n    else if(purpose === DneroJS.StakePurposes.StakeForEliteEdge){\n        return 10000.0;\n    }\n\n    //Unknown\n    return 0.0;\n}\n\nexport function getMaxStakeAmount(purpose){\n    if(purpose === DneroJS.StakePurposes.StakeForEliteEdge){\n        return 500000.0;\n    }\n\n    //No max\n    return 100000000000.0;\n}\n\nexport function getMaxDelegatedStakeAmount(purpose){\n    if(purpose === DneroJS.StakePurposes.StakeForSentry){\n        return 10000.0;\n    }\n\n    //Unknown\n    return 0.0;\n}\n"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,OAAOC,QAAP,IAAkBC,qBAAlB,QAA8C,sBAA9C;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,OAAO,SAASC,kBAAT,GAA6B;EAChC,OAAO,IAAP;AACH;AAED,OAAO,SAASC,0BAAT,GAAqC;EACxC,OAAO,IAAP;AACH;AAED,OAAO,SAASC,0BAAT,GAAqC;EACxC,MAAMC,OAAO,GAAGP,KAAK,CAACQ,UAAN,EAAhB;EAEA,OAAON,qBAAqB,CAACK,OAAD,CAA5B;AACH;AAED,OAAO,SAASE,iBAAT,CAA2BC,OAA3B,EAAmC;EACtC,IAAGA,OAAO,KAAKP,OAAO,CAACQ,aAAR,CAAsBC,iBAArC,EAAuD;IACnD,OAAO,SAAP;EACH,CAFD,MAGK,IAAGF,OAAO,KAAKP,OAAO,CAACQ,aAAR,CAAsBE,cAArC,EAAoD;IACrD,OAAO,MAAP;EACH,CAFI,MAGA,IAAGH,OAAO,KAAKP,OAAO,CAACQ,aAAR,CAAsBG,iBAArC,EAAuD;IACxD,OAAO,OAAP;EACH,CATqC,CAWtC;;;EACA,OAAO,GAAP;AACH;AAED,OAAO,SAASC,iBAAT,CAA2BL,OAA3B,EAAmC;EACtC,IAAGA,OAAO,KAAKP,OAAO,CAACQ,aAAR,CAAsBG,iBAArC,EAAuD;IACnD,OAAO,QAAP;EACH,CAHqC,CAKtC;;;EACA,OAAO,cAAP;AACH;AAED,OAAO,SAASE,0BAAT,CAAoCN,OAApC,EAA4C;EAC/C,IAAGA,OAAO,KAAKP,OAAO,CAACQ,aAAR,CAAsBE,cAArC,EAAoD;IAChD,OAAO,OAAP;EACH,CAH8C,CAK/C;;;EACA,OAAO,GAAP;AACH;;;;;;;;;;0BA7CeT,kB;0BAIAC,0B;0BAIAC,0B;0BAMAG,iB;0BAeAM,iB;0BASAC,0B"},"metadata":{},"sourceType":"module"}