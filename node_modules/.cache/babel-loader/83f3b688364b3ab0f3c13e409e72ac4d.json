{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport DneroJS from '../libs/dnerojs.esm';\nimport TransportWebUSB from \"@ledgerhq/hw-transport-webusb\";\nimport TransportU2F from \"@ledgerhq/hw-transport-u2f\";\nimport Eth from \"@ledgerhq/hw-app-eth\";\nimport Wallet from './Wallet';\nimport Dnero from \"./Dnero.js\";\nimport { DneroDevDerivationPath } from './Wallet';\nexport default class Ledger {\n  static async signTransaction(ethApp, path, unsignedTx) {\n    let chainID = Dnero.getChainID();\n    let ethTxWrapper = unsignedTx.signBytes(chainID).slice(2); // remove the '0x' prefix\n\n    let sig = await ethApp.signTransaction(path, ethTxWrapper);\n    let signature = '0x' + sig.r + sig.s + (parseInt(sig.v, 16) - 27).toString().padStart(2, '0');\n    unsignedTx.setSignature(signature);\n    let signedRawTxBytes = DneroJS.TxSigner.serializeTx(unsignedTx);\n    let signedTxRaw = signedRawTxBytes.toString('hex'); //Remove the '0x' until the RPC endpoint supports '0x' prefixes\n\n    signedTxRaw = signedTxRaw.substring(2);\n\n    if (signedTxRaw) {\n      return signedTxRaw;\n    } else {\n      throw new Error(\"Failed to sign transaction.\");\n    }\n  }\n\n  static async signTransactionLegacy(unsignedTx) {\n    let chainID = Dnero.getChainID();\n    let ethTxWrapper = unsignedTx.signBytes(chainID).slice(2); // remove the '0x' prefix\n\n    let path = Wallet.getWalletPath();\n    let transport;\n\n    if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {\n      transport = await TransportU2F.create();\n    } else {\n      transport = await TransportWebUSB.create();\n    }\n\n    var eth = new Eth(transport);\n    let sig = await eth.signTransaction(Wallet.getWalletPath(), ethTxWrapper); // transport.close();\n\n    let signature = '0x' + sig.r + sig.s + (parseInt(sig.v, 16) - 27).toString().padStart(2, '0');\n    unsignedTx.setSignature(signature);\n    let signedRawTxBytes = DneroJS.TxSigner.serializeTx(unsignedTx);\n    let signedTxRaw = signedRawTxBytes.toString('hex'); //Remove the '0x' until the RPC endpoint supports '0x' prefixes\n\n    signedTxRaw = signedTxRaw.substring(2);\n\n    if (signedTxRaw) {\n      return signedTxRaw;\n    } else {\n      throw new Error(\"Failed to sign transaction.\");\n    }\n  }\n\n}\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Ledger, \"Ledger\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/services/Ledger.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"names":["DneroJS","TransportWebUSB","TransportU2F","Eth","Wallet","Dnero","DneroDevDerivationPath","Ledger","signTransaction","ethApp","path","unsignedTx","chainID","getChainID","ethTxWrapper","signBytes","slice","sig","signature","r","s","parseInt","v","toString","padStart","setSignature","signedRawTxBytes","TxSigner","serializeTx","signedTxRaw","substring","Error","signTransactionLegacy","getWalletPath","transport","navigator","userAgent","toLowerCase","indexOf","create","eth"],"sources":["/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/services/Ledger.js"],"sourcesContent":["import DneroJS from '../libs/dnerojs.esm';\nimport TransportWebUSB from \"@ledgerhq/hw-transport-webusb\";\nimport TransportU2F from \"@ledgerhq/hw-transport-u2f\";\nimport Eth from \"@ledgerhq/hw-app-eth\";\nimport Wallet from './Wallet';\nimport Dnero from \"./Dnero.js\";\nimport { DneroDevDerivationPath } from './Wallet';\n\nexport default class Ledger {\n    static async signTransaction(ethApp, path, unsignedTx){\n        let chainID = Dnero.getChainID();\n        let ethTxWrapper = unsignedTx.signBytes(chainID).slice(2); // remove the '0x' prefix\n        let sig = await ethApp.signTransaction(path, ethTxWrapper);\n\n        let signature = '0x' + sig.r + sig.s + (parseInt(sig.v, 16) - 27).toString().padStart(2, '0');\n        unsignedTx.setSignature(signature);\n\n        let signedRawTxBytes = DneroJS.TxSigner.serializeTx(unsignedTx);\n        let signedTxRaw = signedRawTxBytes.toString('hex');\n\n        //Remove the '0x' until the RPC endpoint supports '0x' prefixes\n        signedTxRaw = signedTxRaw.substring(2);\n\n        if(signedTxRaw){\n            return signedTxRaw;\n        }\n        else{\n            throw new Error(\"Failed to sign transaction.\");\n        }\n    }\n\n    static async signTransactionLegacy(unsignedTx){\n        let chainID = Dnero.getChainID();\n        let ethTxWrapper = unsignedTx.signBytes(chainID).slice(2); // remove the '0x' prefix\n        let path = Wallet.getWalletPath();\n        let transport;\n        if(navigator.userAgent.toLowerCase().indexOf('firefox') > -1){\n            transport = await TransportU2F.create();\n        }\n        else {\n            transport = await TransportWebUSB.create();\n        }\n        var eth = new Eth(transport);\n        let sig = await eth.signTransaction(Wallet.getWalletPath(), ethTxWrapper);\n        // transport.close();\n\n        let signature = '0x' + sig.r + sig.s + (parseInt(sig.v, 16) - 27).toString().padStart(2, '0');\n        unsignedTx.setSignature(signature);\n\n        let signedRawTxBytes = DneroJS.TxSigner.serializeTx(unsignedTx);\n        let signedTxRaw = signedRawTxBytes.toString('hex');\n\n        //Remove the '0x' until the RPC endpoint supports '0x' prefixes\n        signedTxRaw = signedTxRaw.substring(2);\n\n        if(signedTxRaw){\n            return signedTxRaw;\n        }\n        else{\n            throw new Error(\"Failed to sign transaction.\");\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}