{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport _ from 'lodash';\nimport Networks from '../constants/Networks';\nimport BigNumber from 'bignumber.js';\nimport { Ten18 } from '@dnerolabs/dnero-js/src/constants';\nimport { DefaultAssets, getAllAssets, tokenToAsset } from \"../constants/assets\";\nimport * as dnerojs from \"@dnerolabs/dnero-js\";\nimport { DDropStakingABI, DNC20ABI } from \"../constants/contracts\";\nimport { StakePurposeForDDROP, DDropAddressByChainId, DDropStakingAddressByChainId } from \"../constants\";\n/**\n * Returns a new object with vals mapped to keys\n * @param {Array} keys\n * @param {Array} vals\n * @return {Object}\n */\n\nexport function zipMap(keys, vals) {\n  return Object.assign({}, ...keys.map((key, index) => ({\n    [key]: vals[index]\n  })));\n}\nexport function trimWhitespaceAndNewlines(str) {\n  return str.trim().replace(new RegExp('\\s?\\r?\\n', 'g'), '');\n}\nexport function hasValidDecimalPlaces(str, maxDecimalPlaces) {\n  if (str === null) {\n    return true;\n  } //Ensure it is a string\n\n\n  var ensureStr = '' + str;\n  var decimalSplit = ensureStr.split('.');\n\n  if (decimalSplit.length > 0) {\n    var decimals = decimalSplit[decimalSplit.length - 1];\n    return decimals.length <= maxDecimalPlaces;\n  }\n\n  return true;\n}\nexport function downloadFile(filename, contents) {\n  let element = document.createElement('a');\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(contents));\n  element.setAttribute('download', filename);\n  element.style.display = 'none';\n  document.body.appendChild(element);\n  element.click();\n  document.body.removeChild(element);\n}\nexport function copyToClipboard(str) {\n  //https://gist.githubusercontent.com/Chalarangelo/4ff1e8c0ec03d9294628efbae49216db/raw/cbd2d8877d4c5f2678ae1e6bb7cb903205e5eacc/copyToClipboard.js\n  const el = document.createElement('textarea'); // Create a <textarea> element\n\n  el.value = str; // Set its value to the string that you want copied\n\n  el.setAttribute('readonly', ''); // Make it readonly to be tamper-proof\n\n  el.style.position = 'absolute';\n  el.style.left = '-9999px'; // Move outside the screen to make it invisible\n\n  document.body.appendChild(el); // Append the <textarea> element to the HTML document\n\n  const selected = document.getSelection().rangeCount > 0 // Check if there is any content selected previously\n  ? document.getSelection().getRangeAt(0) // Store selection if found\n  : false; // Mark as false to know no selection existed before\n\n  el.select(); // Select the <textarea> content\n\n  document.execCommand('copy'); // Copy - only works as a result of a user action (e.g. click events)\n\n  document.body.removeChild(el); // Remove the <textarea> element\n\n  if (selected) {\n    // If a selection existed before copying\n    document.getSelection().removeAllRanges(); // Unselect everything on the HTML document\n\n    document.getSelection().addRange(selected); // Restore the original selection\n  }\n}\nexport function onLine() {\n  let online = true;\n\n  try {\n    online = window.navigator.onLine;\n  } catch (e) {\n    online = true;\n  }\n\n  return online;\n}\nexport const truncate = function () {\n  let hash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;\n  return hash.slice(0, length + 2) + '...' + hash.slice(length * -1);\n};\nexport function legacyTruncate(fullStr, strLen, separator) {\n  if (!fullStr) {\n    return fullStr;\n  }\n\n  if (fullStr.length <= strLen) return fullStr;\n  separator = separator || '...';\n  var sepLen = separator.length,\n      charsToShow = strLen - sepLen,\n      frontChars = Math.ceil(charsToShow / 2),\n      backChars = Math.floor(charsToShow / 2);\n  return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);\n}\nexport function numberWithCommas(x) {\n  var parts = x.toString().split(\".\");\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  return parts.join(\".\");\n}\nexport function getQueryParameters(str) {\n  const searchStr = str || document.location.search;\n\n  if (_.isNil(searchStr) || searchStr.length === 0) {\n    return {};\n  } else {\n    return searchStr.replace(/(^\\?)/, '').split(\"&\").map(function (n) {\n      return n = n.split(\"=\"), this[n[0]] = n[1], this;\n    }.bind({}))[0];\n  }\n}\nexport function chainIDStringToNumber(chainIDstr) {\n  switch (chainIDstr) {\n    case Networks.DNERO_MAINNET:\n      return 361;\n\n    case Networks.DNERO_PRIVATENET:\n      return 366;\n\n    case Networks.DNERO_TESTNET:\n      return 365;\n  }\n\n  return 0;\n}\nexport const formatDNC20TokenAmountToLargestUnit = (number, decimals) => {\n  const bn = new BigNumber(number);\n  const DecimalsBN = new BigNumber(10).pow(decimals); // Round down\n\n  const fixed = bn.dividedBy(DecimalsBN).toString(10);\n  return numberWithCommas(fixed);\n};\nexport const formatNativeTokenAmountToLargestUnit = number => {\n  const bn = new BigNumber(number);\n  const fixed = bn.dividedBy(Ten18).toString(10);\n  return numberWithCommas(fixed);\n};\nexport const toDNC20TokenSmallestUnit = (number, decimals) => {\n  const bn = new BigNumber(number);\n  const DecimalsBN = new BigNumber(10).pow(decimals);\n  return bn.multipliedBy(DecimalsBN);\n};\nexport const toNativeTokenSmallestUnit = number => {\n  const bn = new BigNumber(number);\n  return bn.multipliedBy(Ten18);\n};\nexport const toDNC20TokenLargestUnit = (number, decimals) => {\n  const bn = new BigNumber(number);\n  const DecimalsBN = new BigNumber(10).pow(decimals);\n  return bn.dividedBy(DecimalsBN);\n};\nexport const toNativeTokenLargestUnit = number => {\n  const bn = new BigNumber(number);\n  return bn.dividedBy(Ten18);\n};\nexport const isValidAmount = (selectedAccount, asset, amount) => {\n  let amountBN = null;\n  let balanceBN = null;\n\n  if (_.isNil(asset)) {\n    // Return as valid so we don't show errors before asset is picked.\n    return true;\n  }\n\n  if (asset.name === 'Dnero') {\n    amountBN = toNativeTokenSmallestUnit('' + amount);\n    balanceBN = new BigNumber(selectedAccount.balances['dnerowei']);\n  } else if (asset.name === 'Dnero Token') {\n    amountBN = toNativeTokenSmallestUnit('' + amount);\n    balanceBN = new BigNumber(selectedAccount.balances['dtokenwei']);\n  } else {\n    // TNT-20 token\n    amountBN = toDNC20TokenSmallestUnit('' + amount, asset.decimals);\n    balanceBN = new BigNumber(selectedAccount.balances[asset.contractAddress]);\n  }\n\n  return amountBN.lte(balanceBN);\n};\nexport const getAssetBalance = (selectedAccount, asset) => {\n  if (asset.name === 'Dnero') {\n    return formatNativeTokenAmountToLargestUnit(selectedAccount.balances['dnerowei']);\n  }\n\n  if (asset.name === 'Dnero Token') {\n    return formatNativeTokenAmountToLargestUnit(selectedAccount.balances['dtokenwei']);\n  }\n\n  const balance = selectedAccount.balances[asset.contractAddress] || '0';\n  return formatDNC20TokenAmountToLargestUnit(balance, asset.decimals);\n};\nexport const formDataToTransaction = async (transactionType, txFormData, dneroWalletState) => {\n  const accounts = dneroWalletState.accounts;\n  const selectedAddress = dneroWalletState.selectedAddress;\n  const selectedAccount = accounts[selectedAddress];\n  const tokens = dneroWalletState.tokens;\n  const chainId = dneroWalletState.network.chainId;\n  const assets = getAllAssets(chainId, tokens);\n\n  if (transactionType === 'send') {\n    const {\n      to,\n      assetId,\n      amount\n    } = txFormData;\n\n    const asset = _.find(assets, function (a) {\n      return a.id === assetId;\n    });\n\n    if (asset.contractAddress) {\n      // DNC20 token\n      // TODO ensure they have the balance\n      const dnc20Contract = new dnerojs.Contract(asset.contractAddress, DNC20ABI, null);\n      const amountBN = toDNC20TokenSmallestUnit(amount, asset.decimals);\n      return await dnc20Contract.populateTransaction.transfer(to, amountBN.toString());\n    } else {\n      // Native token\n      const txData = {\n        from: selectedAddress,\n        outputs: [{\n          address: to,\n          dneroWei: assetId === 'dnero' ? dnerojs.utils.toWei(amount) : '0',\n          dtokenWei: assetId === 'dtoken' ? dnerojs.utils.toWei(amount) : '0'\n        }]\n      };\n      return new dnerojs.transactions.SendTransaction(txData);\n    }\n  }\n\n  if (transactionType === 'withdraw-stake') {\n    const {\n      holder,\n      purpose,\n      amount\n    } = txFormData;\n    const purposeInt = parseInt(purpose);\n\n    if (purposeInt === StakePurposeForDDROP) {\n      const dDropStakingAddress = DDropStakingAddressByChainId[chainId];\n      const ddropStakingContract = new dnerojs.Contract(dDropStakingAddress, DDropStakingABI, null);\n      const percentageToUnstake = parseFloat(amount) / 100;\n\n      const dnc20stakes = _.get(selectedAccount, ['dnc20Stakes'], {});\n\n      const balanceStr = _.get(dnc20stakes, 'ddrop.balance', '0');\n\n      const balanceBN = new BigNumber(balanceStr);\n      const amountBN = balanceBN.multipliedBy(percentageToUnstake).integerValue();\n      const unstakeTx = await ddropStakingContract.populateTransaction.unstake(amountBN.toString());\n      return unstakeTx;\n    } else {\n      const txData = {\n        holder: holder,\n        purpose: purpose\n      };\n      return new dnerojs.transactions.WithdrawStakeTransaction(txData);\n    }\n  }\n\n  if (transactionType === 'deposit-stake') {\n    const {\n      holder,\n      holderSummary,\n      purpose,\n      amount\n    } = txFormData;\n    const purposeInt = parseInt(purpose);\n\n    if (purposeInt === dnerojs.constants.StakePurpose.StakeForValidator) {\n      const txData = {\n        holder: holder,\n        purpose: purposeInt,\n        amount: dnerojs.utils.toWei(amount)\n      };\n      return new dnerojs.transactions.DepositStakeTransaction(txData);\n    } else if (purposeInt === dnerojs.constants.StakePurpose.StakeForSentry) {\n      const txData = {\n        holderSummary: holderSummary,\n        purpose: purposeInt,\n        amount: dnerojs.utils.toWei(amount)\n      };\n      return new dnerojs.transactions.DepositStakeV2Transaction(txData);\n    } else if (purposeInt === dnerojs.constants.StakePurpose.StakeForEliteEdge) {\n      const txData = {\n        holderSummary: holderSummary,\n        purpose: purposeInt,\n        amount: dnerojs.utils.toWei(amount)\n      };\n      return new dnerojs.transactions.DepositStakeV2Transaction(txData);\n    } else if (purposeInt === StakePurposeForDDROP) {\n      const dDropAddress = DDropAddressByChainId[chainId];\n      const dDropStakingAddress = DDropStakingAddressByChainId[chainId];\n      const ddropContract = new dnerojs.Contract(dDropAddress, DNC20ABI, null);\n      const ddropStakingContract = new dnerojs.Contract(dDropStakingAddress, DDropStakingABI, null);\n\n      const assetsById = _.keyBy(assets, 'id');\n\n      const dDropAsset = assetsById[dDropAddress];\n      const amountBN = toDNC20TokenSmallestUnit(amount, dDropAsset.decimals);\n      const approveTx = await ddropContract.populateTransaction.approve(dDropStakingAddress, amountBN.toString());\n      const stakeTx = await ddropStakingContract.populateTransaction.stake(amountBN.toString()); // We are sending the approve TX in the background which fails because the amount hasn't been approved yet...so we will hardcode this gas limit for now\n\n      stakeTx.gasLimit = 150000;\n      stakeTx.dependencies = [approveTx];\n      return stakeTx;\n    }\n  } else if (transactionType === 'delegate-ddrop-vote') {\n    const {\n      address\n    } = txFormData;\n    const dDropStakingAddress = DDropStakingAddressByChainId[chainId];\n    const ddropStakingContract = new dnerojs.Contract(dDropStakingAddress, DDropStakingABI, null);\n    const delegateTx = await ddropStakingContract.populateTransaction.delegate(address);\n    return delegateTx;\n  }\n};\nexport const transactionTypeToName = txType => {\n  if (_.isNil(txType)) {\n    return null;\n  }\n\n  switch (txType) {\n    case dnerojs.constants.TxType.Send:\n      return 'Send';\n\n    case dnerojs.constants.TxType.SmartContract:\n      return 'Call Contract';\n\n    case dnerojs.constants.TxType.DepositStake:\n      return 'Deposit Stake';\n\n    case dnerojs.constants.TxType.DepositStakeV2:\n      return 'Deposit Stake';\n\n    case dnerojs.constants.TxType.WithdrawStake:\n      return 'Withdraw Stake';\n\n    default:\n      return 'Unknown type';\n  }\n};\nexport const transactionRequestToTransactionType = transactionRequest => {\n  const txType = _.get(transactionRequest, 'txType');\n\n  const txData = _.get(transactionRequest, 'txData');\n\n  try {\n    if (txType === dnerojs.constants.TxType.SmartContract && _.isNil(_.get(txData, 'to'))) {\n      return 'Deploy Contract';\n    }\n\n    const contractData = _.get(txData, 'data');\n\n    const dnc20Contract = new dnerojs.Contract(null, DNC20ABI, null);\n    const data = dnc20Contract.interface.decodeFunctionData('transfer(address,uint256)', contractData);\n    return 'Transfer Token';\n  } catch (e) {}\n\n  return transactionTypeToName(txType);\n};\nexport const isHolderSummary = holderSummary => {\n  if (holderSummary) {\n    let expectedLen = 458;\n\n    if (holderSummary.startsWith('0x')) {\n      expectedLen = expectedLen + 2;\n    }\n\n    return holderSummary.length === expectedLen;\n  } else {\n    return false;\n  }\n};\nexport function trimDecimalPlaces(x, maxDecimals) {\n  let parts = x.split('.');\n  let newFractional = '';\n  let foundNonZero = false;\n\n  _.map(parts[1], (char, idx) => {\n    if (foundNonZero) {\n      return;\n    }\n\n    if (idx + 1 > maxDecimals) {\n      return;\n    }\n\n    if (char !== '0') {\n      foundNonZero = true;\n    }\n\n    newFractional = newFractional + char;\n  });\n\n  parts[1] = newFractional;\n  return parts.join('.');\n}\nexport const sleep = ms => {\n  return new Promise(r => setTimeout(r, ms));\n};\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(zipMap, \"zipMap\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/utils/Utils.js\");\n  reactHotLoader.register(trimWhitespaceAndNewlines, \"trimWhitespaceAndNewlines\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/utils/Utils.js\");\n  reactHotLoader.register(hasValidDecimalPlaces, \"hasValidDecimalPlaces\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/utils/Utils.js\");\n  reactHotLoader.register(downloadFile, \"downloadFile\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/utils/Utils.js\");\n  reactHotLoader.register(copyToClipboard, \"copyToClipboard\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/utils/Utils.js\");\n  reactHotLoader.register(onLine, \"onLine\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/utils/Utils.js\");\n  reactHotLoader.register(truncate, \"truncate\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/utils/Utils.js\");\n  reactHotLoader.register(legacyTruncate, \"legacyTruncate\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/utils/Utils.js\");\n  reactHotLoader.register(numberWithCommas, \"numberWithCommas\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/utils/Utils.js\");\n  reactHotLoader.register(getQueryParameters, \"getQueryParameters\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/utils/Utils.js\");\n  reactHotLoader.register(chainIDStringToNumber, \"chainIDStringToNumber\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/utils/Utils.js\");\n  reactHotLoader.register(formatDNC20TokenAmountToLargestUnit, \"formatDNC20TokenAmountToLargestUnit\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/utils/Utils.js\");\n  reactHotLoader.register(formatNativeTokenAmountToLargestUnit, \"formatNativeTokenAmountToLargestUnit\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/utils/Utils.js\");\n  reactHotLoader.register(toDNC20TokenSmallestUnit, \"toDNC20TokenSmallestUnit\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/utils/Utils.js\");\n  reactHotLoader.register(toNativeTokenSmallestUnit, \"toNativeTokenSmallestUnit\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/utils/Utils.js\");\n  reactHotLoader.register(toDNC20TokenLargestUnit, \"toDNC20TokenLargestUnit\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/utils/Utils.js\");\n  reactHotLoader.register(toNativeTokenLargestUnit, \"toNativeTokenLargestUnit\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/utils/Utils.js\");\n  reactHotLoader.register(isValidAmount, \"isValidAmount\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/utils/Utils.js\");\n  reactHotLoader.register(getAssetBalance, \"getAssetBalance\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/utils/Utils.js\");\n  reactHotLoader.register(formDataToTransaction, \"formDataToTransaction\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/utils/Utils.js\");\n  reactHotLoader.register(transactionTypeToName, \"transactionTypeToName\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/utils/Utils.js\");\n  reactHotLoader.register(transactionRequestToTransactionType, \"transactionRequestToTransactionType\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/utils/Utils.js\");\n  reactHotLoader.register(isHolderSummary, \"isHolderSummary\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/utils/Utils.js\");\n  reactHotLoader.register(trimDecimalPlaces, \"trimDecimalPlaces\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/utils/Utils.js\");\n  reactHotLoader.register(sleep, \"sleep\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/utils/Utils.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"names":["_","Networks","BigNumber","Ten18","DefaultAssets","getAllAssets","tokenToAsset","dnerojs","DDropStakingABI","DNC20ABI","StakePurposeForDDROP","DDropAddressByChainId","DDropStakingAddressByChainId","zipMap","keys","vals","Object","assign","map","key","index","trimWhitespaceAndNewlines","str","trim","replace","RegExp","hasValidDecimalPlaces","maxDecimalPlaces","ensureStr","decimalSplit","split","length","decimals","downloadFile","filename","contents","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","copyToClipboard","el","value","position","left","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeAllRanges","addRange","onLine","online","window","navigator","e","truncate","hash","slice","legacyTruncate","fullStr","strLen","separator","sepLen","charsToShow","frontChars","Math","ceil","backChars","floor","substr","numberWithCommas","x","parts","toString","join","getQueryParameters","searchStr","location","search","isNil","n","bind","chainIDStringToNumber","chainIDstr","DNERO_MAINNET","DNERO_PRIVATENET","DNERO_TESTNET","formatDNC20TokenAmountToLargestUnit","number","bn","DecimalsBN","pow","fixed","dividedBy","formatNativeTokenAmountToLargestUnit","toDNC20TokenSmallestUnit","multipliedBy","toNativeTokenSmallestUnit","toDNC20TokenLargestUnit","toNativeTokenLargestUnit","isValidAmount","selectedAccount","asset","amount","amountBN","balanceBN","name","balances","contractAddress","lte","getAssetBalance","balance","formDataToTransaction","transactionType","txFormData","dneroWalletState","accounts","selectedAddress","tokens","chainId","network","assets","to","assetId","find","a","id","dnc20Contract","Contract","populateTransaction","transfer","txData","from","outputs","address","dneroWei","utils","toWei","dtokenWei","transactions","SendTransaction","holder","purpose","purposeInt","parseInt","dDropStakingAddress","ddropStakingContract","percentageToUnstake","parseFloat","dnc20stakes","get","balanceStr","integerValue","unstakeTx","unstake","WithdrawStakeTransaction","holderSummary","constants","StakePurpose","StakeForValidator","DepositStakeTransaction","StakeForSentry","DepositStakeV2Transaction","StakeForEliteEdge","dDropAddress","ddropContract","assetsById","keyBy","dDropAsset","approveTx","approve","stakeTx","stake","gasLimit","dependencies","delegateTx","delegate","transactionTypeToName","txType","TxType","Send","SmartContract","DepositStake","DepositStakeV2","WithdrawStake","transactionRequestToTransactionType","transactionRequest","contractData","data","interface","decodeFunctionData","isHolderSummary","expectedLen","startsWith","trimDecimalPlaces","maxDecimals","newFractional","foundNonZero","char","idx","sleep","ms","Promise","r","setTimeout"],"sources":["/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/utils/Utils.js"],"sourcesContent":["import _ from 'lodash';\nimport Networks from '../constants/Networks'\nimport BigNumber from 'bignumber.js';\nimport {Ten18} from '@dnerolabs/dnero-js/src/constants';\nimport {DefaultAssets, getAllAssets, tokenToAsset} from \"../constants/assets\";\nimport * as dnerojs from \"@dnerolabs/dnero-js\";\nimport {DDropStakingABI, DNC20ABI} from \"../constants/contracts\";\nimport {StakePurposeForDDROP, DDropAddressByChainId, DDropStakingAddressByChainId} from \"../constants\";\n\n\n/**\n * Returns a new object with vals mapped to keys\n * @param {Array} keys\n * @param {Array} vals\n * @return {Object}\n */\nexport function zipMap(keys, vals){\n    return Object.assign({}, ...keys.map((key, index) => ({[key]: vals[index]})));\n}\n\nexport function trimWhitespaceAndNewlines(str){\n    return str.trim().replace(new RegExp('\\s?\\r?\\n','g'), '')\n}\n\nexport function hasValidDecimalPlaces(str, maxDecimalPlaces){\n    if(str === null){\n        return true;\n    }\n\n    //Ensure it is a string\n    var ensureStr = '' + str;\n\n    var decimalSplit = ensureStr.split('.');\n\n    if(decimalSplit.length > 0){\n        var decimals = decimalSplit[decimalSplit.length - 1];\n\n        return (decimals.length <= maxDecimalPlaces);\n    }\n    return true;\n}\n\nexport function downloadFile(filename, contents){\n    let element = document.createElement('a');\n\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(contents));\n    element.setAttribute('download', filename);\n    element.style.display = 'none';\n\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function copyToClipboard(str){\n    //https://gist.githubusercontent.com/Chalarangelo/4ff1e8c0ec03d9294628efbae49216db/raw/cbd2d8877d4c5f2678ae1e6bb7cb903205e5eacc/copyToClipboard.js\n\n    const el = document.createElement('textarea');  // Create a <textarea> element\n    el.value = str;                                 // Set its value to the string that you want copied\n    el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';                      // Move outside the screen to make it invisible\n    document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\n    const selected =\n        document.getSelection().rangeCount > 0        // Check if there is any content selected previously\n            ? document.getSelection().getRangeAt(0)     // Store selection if found\n            : false;                                    // Mark as false to know no selection existed before\n    el.select();                                    // Select the <textarea> content\n    document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\n    document.body.removeChild(el);                  // Remove the <textarea> element\n    if (selected) {                                 // If a selection existed before copying\n        document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\n        document.getSelection().addRange(selected);   // Restore the original selection\n    }\n}\n\nexport function onLine(){\n    let online = true;\n\n    try {\n        online = window.navigator.onLine;\n    }\n    catch (e) {\n        online = true;\n    }\n\n    return online;\n}\n\nexport const truncate = (hash = '', length= 4) => {\n    return hash.slice(0, (length + 2)) + '...' + hash.slice((length * -1));\n};\n\nexport function legacyTruncate(fullStr, strLen, separator) {\n    if(!fullStr){\n        return fullStr;\n    }\n\n    if (fullStr.length <= strLen) return fullStr;\n\n    separator = separator || '...';\n\n    var sepLen = separator.length,\n        charsToShow = strLen - sepLen,\n        frontChars = Math.ceil(charsToShow/2),\n        backChars = Math.floor(charsToShow/2);\n\n    return fullStr.substr(0, frontChars) +\n        separator +\n        fullStr.substr(fullStr.length - backChars);\n}\n\nexport function numberWithCommas(x) {\n    var parts = x.toString().split(\".\");\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return parts.join(\".\");\n}\n\nexport function getQueryParameters(str) {\n    const searchStr = (str || document.location.search);\n\n    if(_.isNil(searchStr) || searchStr.length === 0){\n        return {};\n    }\n    else{\n        return searchStr.replace(/(^\\?)/,'').split(\"&\").map(function(n){return n = n.split(\"=\"),this[n[0]] = n[1],this}.bind({}))[0];\n    }\n}\n\nexport function chainIDStringToNumber(chainIDstr) {\n    switch(chainIDstr) {\n        case Networks.DNERO_MAINNET:\n            return 361;\n        case Networks.DNERO_PRIVATENET:\n            return 366;\n        case Networks.DNERO_TESTNET:\n            return 365;\n    }\n    return 0;\n}\n\n\n\n\n\nexport const formatDNC20TokenAmountToLargestUnit = (number, decimals ) => {\n    const bn = new BigNumber(number);\n    const DecimalsBN = (new BigNumber(10)).pow(decimals);\n    // Round down\n    const fixed = bn.dividedBy(DecimalsBN).toString(10);\n\n    return numberWithCommas(fixed);\n};\n\nexport const formatNativeTokenAmountToLargestUnit = (number ) => {\n    const bn = new BigNumber(number);\n    const fixed = bn.dividedBy(Ten18).toString(10);\n\n    return numberWithCommas(fixed);\n};\n\nexport const toDNC20TokenSmallestUnit = (number, decimals ) => {\n    const bn = new BigNumber(number);\n    const DecimalsBN = (new BigNumber(10)).pow(decimals);\n    return bn.multipliedBy(DecimalsBN);\n};\n\nexport const toNativeTokenSmallestUnit = (number ) => {\n    const bn = new BigNumber(number);\n    return bn.multipliedBy(Ten18);\n};\n\nexport const toDNC20TokenLargestUnit = (number, decimals ) => {\n    const bn = new BigNumber(number);\n    const DecimalsBN = (new BigNumber(10)).pow(decimals);\n    return bn.dividedBy(DecimalsBN);\n};\n\nexport const toNativeTokenLargestUnit = (number ) => {\n    const bn = new BigNumber(number);\n    return bn.dividedBy(Ten18);\n};\n\nexport const isValidAmount = (selectedAccount, asset, amount) => {\n    let amountBN = null;\n    let balanceBN = null;\n\n    if(_.isNil(asset)){\n        // Return as valid so we don't show errors before asset is picked.\n        return true;\n    }\n\n    if(asset.name === 'Dnero'){\n        amountBN = toNativeTokenSmallestUnit('' + amount);\n        balanceBN = new BigNumber(selectedAccount.balances['dnerowei']);\n    }\n    else if(asset.name === 'Dnero Token'){\n        amountBN = toNativeTokenSmallestUnit('' + amount);\n        balanceBN = new BigNumber(selectedAccount.balances['dtokenwei']);\n    }\n    else{\n        // TNT-20 token\n        amountBN = toDNC20TokenSmallestUnit('' + amount, asset.decimals);\n        balanceBN = new BigNumber(selectedAccount.balances[asset.contractAddress]);\n    }\n\n    return amountBN.lte(balanceBN);\n};\n\nexport const getAssetBalance = (selectedAccount, asset) => {\n    if(asset.name === 'Dnero'){\n        return formatNativeTokenAmountToLargestUnit(selectedAccount.balances['dnerowei']);\n    }\n    if(asset.name === 'Dnero Token'){\n        return formatNativeTokenAmountToLargestUnit(selectedAccount.balances['dtokenwei']);\n    }\n\n    const balance = selectedAccount.balances[asset.contractAddress] || '0';\n    return formatDNC20TokenAmountToLargestUnit(balance, asset.decimals);\n};\n\n\nexport const formDataToTransaction = async (transactionType, txFormData, dneroWalletState) => {\n    const accounts = dneroWalletState.accounts;\n    const selectedAddress = dneroWalletState.selectedAddress;\n    const selectedAccount = accounts[selectedAddress];\n    const tokens = dneroWalletState.tokens;\n    const chainId = dneroWalletState.network.chainId;\n    const assets = getAllAssets(chainId, tokens);\n\n    if (transactionType === 'send') {\n        const {to, assetId, amount} = txFormData;\n        const asset = _.find(assets, function (a) {\n            return a.id === assetId;\n        });\n\n        if (asset.contractAddress) {\n            // DNC20 token\n            // TODO ensure they have the balance\n            const dnc20Contract = new dnerojs.Contract(asset.contractAddress, DNC20ABI, null);\n            const amountBN = toDNC20TokenSmallestUnit(amount, asset.decimals);\n            return await dnc20Contract.populateTransaction.transfer(to, amountBN.toString());\n        }\n        else {\n            // Native token\n            const txData = {\n                from: selectedAddress,\n                outputs: [\n                    {\n                        address: to,\n                        dneroWei: (assetId === 'dnero' ? dnerojs.utils.toWei(amount) : '0'),\n                        dtokenWei: (assetId === 'dtoken' ? dnerojs.utils.toWei(amount) : '0')\n                    }\n                ]\n            };\n\n            return new dnerojs.transactions.SendTransaction(txData);\n        }\n    }\n    if(transactionType === 'withdraw-stake'){\n        const {holder, purpose, amount} = txFormData;\n        const purposeInt = parseInt(purpose);\n\n        if(purposeInt === StakePurposeForDDROP){\n            const dDropStakingAddress = DDropStakingAddressByChainId[chainId];\n            const ddropStakingContract = new dnerojs.Contract(dDropStakingAddress, DDropStakingABI, null);\n            const percentageToUnstake = parseFloat(amount) / 100;\n            const dnc20stakes = _.get(selectedAccount, ['dnc20Stakes'], {});\n            const balanceStr = _.get(dnc20stakes, 'ddrop.balance', '0');\n            const balanceBN = new BigNumber(balanceStr);\n            const amountBN = balanceBN.multipliedBy(percentageToUnstake).integerValue();\n            const unstakeTx = await ddropStakingContract.populateTransaction.unstake(amountBN.toString());\n\n            return unstakeTx;\n        }\n        else{\n            const txData = {\n                holder: holder,\n                purpose: purpose\n            };\n\n            return new dnerojs.transactions.WithdrawStakeTransaction(txData);\n        }\n    }\n    if(transactionType === 'deposit-stake'){\n        const {holder, holderSummary, purpose, amount} = txFormData;\n        const purposeInt = parseInt(purpose);\n\n        if(purposeInt === dnerojs.constants.StakePurpose.StakeForValidator){\n            const txData = {\n                holder: holder,\n                purpose: purposeInt,\n                amount: dnerojs.utils.toWei(amount),\n            };\n\n            return new dnerojs.transactions.DepositStakeTransaction(txData);\n        }\n        else if(purposeInt === dnerojs.constants.StakePurpose.StakeForSentry){\n            const txData = {\n                holderSummary: holderSummary,\n                purpose: purposeInt,\n                amount: dnerojs.utils.toWei(amount),\n            };\n\n            return new dnerojs.transactions.DepositStakeV2Transaction(txData);\n        }\n        else if(purposeInt === dnerojs.constants.StakePurpose.StakeForEliteEdge){\n            const txData = {\n                holderSummary: holderSummary,\n                purpose: purposeInt,\n                amount: dnerojs.utils.toWei(amount),\n            };\n\n            return new dnerojs.transactions.DepositStakeV2Transaction(txData);\n        }\n        else if(purposeInt === StakePurposeForDDROP){\n            const dDropAddress = DDropAddressByChainId[chainId];\n            const dDropStakingAddress = DDropStakingAddressByChainId[chainId];\n            const ddropContract = new dnerojs.Contract(dDropAddress, DNC20ABI, null);\n            const ddropStakingContract = new dnerojs.Contract(dDropStakingAddress, DDropStakingABI, null);\n            const assetsById = _.keyBy(assets, 'id');\n            const dDropAsset = assetsById[dDropAddress];\n            const amountBN = toDNC20TokenSmallestUnit(amount, dDropAsset.decimals);\n            const approveTx = await ddropContract.populateTransaction.approve(dDropStakingAddress,amountBN.toString());\n            const stakeTx = await ddropStakingContract.populateTransaction.stake(amountBN.toString());\n            // We are sending the approve TX in the background which fails because the amount hasn't been approved yet...so we will hardcode this gas limit for now\n            stakeTx.gasLimit = 150000;\n            stakeTx.dependencies = [\n                approveTx\n            ];\n\n            return stakeTx;\n        }\n    }\n    else if(transactionType === 'delegate-ddrop-vote'){\n        const {address} = txFormData;\n        const dDropStakingAddress = DDropStakingAddressByChainId[chainId];\n        const ddropStakingContract = new dnerojs.Contract(dDropStakingAddress, DDropStakingABI, null);\n        const delegateTx = await ddropStakingContract.populateTransaction.delegate(address);\n\n        return delegateTx;\n    }\n};\n\nexport const transactionTypeToName = (txType) => {\n    if(_.isNil(txType)){\n        return  null;\n    }\n\n    switch (txType) {\n        case dnerojs.constants.TxType.Send:\n            return 'Send';\n        case dnerojs.constants.TxType.SmartContract:\n            return 'Call Contract';\n        case dnerojs.constants.TxType.DepositStake:\n            return 'Deposit Stake';\n        case dnerojs.constants.TxType.DepositStakeV2:\n            return 'Deposit Stake';\n        case dnerojs.constants.TxType.WithdrawStake:\n            return 'Withdraw Stake';\n        default:\n            return 'Unknown type';\n    }\n};\n\nexport const transactionRequestToTransactionType = (transactionRequest) => {\n    const txType = _.get(transactionRequest, 'txType');\n    const txData = _.get(transactionRequest, 'txData');\n\n    try {\n        if(txType === dnerojs.constants.TxType.SmartContract && _.isNil(_.get(txData, 'to'))){\n            return 'Deploy Contract';\n        }\n\n        const contractData = _.get(txData, 'data');\n        const dnc20Contract = new dnerojs.Contract(null, DNC20ABI, null);\n        const data = dnc20Contract.interface.decodeFunctionData('transfer(address,uint256)',contractData);\n        return 'Transfer Token';\n    }\n    catch (e) {\n\n    }\n\n    return transactionTypeToName(txType);\n};\n\nexport const isHolderSummary = (holderSummary) => {\n    if(holderSummary){\n        let expectedLen = 458;\n\n        if(holderSummary.startsWith('0x')){\n            expectedLen = expectedLen + 2;\n        }\n\n        return (holderSummary.length === expectedLen);\n    }\n    else{\n        return false;\n    }\n};\n\nexport function trimDecimalPlaces(x, maxDecimals) {\n    let parts = x.split('.');\n    let newFractional = '';\n    let foundNonZero = false;\n\n    _.map(parts[1], (char, idx) => {\n        if(foundNonZero){\n            return;\n        }\n        if((idx + 1) > maxDecimals){\n            return;\n        }\n\n        if(char !== '0'){\n            foundNonZero = true;\n        }\n        newFractional = newFractional + char;\n    });\n\n    parts[1] = newFractional;\n\n    return parts.join('.');\n}\n\nexport const sleep = (ms) => {\n    return new Promise(r => setTimeout(r, ms));\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}