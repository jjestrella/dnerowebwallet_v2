{"ast":null,"code":"var _jsxFileName = \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/modals/CreateTransactionModal.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport _ from 'lodash';\nimport React from 'react';\nimport connect from \"react-redux/es/connect/connect\";\nimport SendTxForm from '../components/transactions/SendTxForm';\nimport { formDataToTransaction } from \"../utils/Utils\";\nimport { createTransactionRequest } from \"../state/actions/Transactions\";\nimport GradientButton from \"../components/buttons/GradientButton\";\nimport { DefaultAssets, getAllAssets, tokenToAsset } from \"../constants/assets\";\nimport DepositStakeTxForm from \"../components/transactions/DepositStakeTxForm\";\nimport WithdrawStakeTxForm from \"../components/transactions/WithdrawStakeTxForm\";\nimport { updateAccountBalances } from \"../state/actions/Wallet\";\nimport { showModal } from \"../state/actions/ui\";\nimport ModalTypes from \"../constants/ModalTypes\";\nimport DelegateVoteTxForm from \"../components/transactions/DelegateVoteTxForm\";\nexport class CreateTransactionModal extends React.Component {\n  constructor() {\n    super();\n\n    this.onNextClick = () => {\n      this.formRef.current.dispatchEvent(new Event('submit', {\n        cancelable: true,\n        bubbles: true\n      }));\n    };\n\n    this.onSubmit = async data => {\n      const {\n        transactionType,\n        dneroWallet\n      } = this.props;\n      const tx = await formDataToTransaction(transactionType, data, dneroWallet);\n      const deps = tx.dependencies || [];\n      const depTx = deps[0];\n      const transactionRequest = tx.toJson();\n\n      if (depTx) {\n        transactionRequest.dependencies = [depTx.toJson()];\n      }\n\n      this.props.dispatch(createTransactionRequest(transactionRequest));\n    };\n\n    this.onShowDelegatedSentryNodes = onSelectNode => {\n      this.props.dispatch(showModal({\n        type: ModalTypes.DELEGATED_NODE_SELECTOR,\n        props: {\n          onSelectNode: onSelectNode\n        }\n      }));\n    };\n\n    this.formRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.props.dispatch(updateAccountBalances(false));\n  }\n\n  render() {\n    const {\n      selectedIdentity,\n      selectedAccount,\n      transactionType,\n      assets,\n      chainId\n    } = this.props;\n    const title = transactionType.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: 'CreateTransactionModal',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ModalTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, title), transactionType === 'send' && /*#__PURE__*/React.createElement(SendTxForm, {\n      formRef: this.formRef,\n      selectedAccount: selectedAccount,\n      assets: assets,\n      chainId: chainId,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }), transactionType === 'deposit-stake' && /*#__PURE__*/React.createElement(DepositStakeTxForm, {\n      formRef: this.formRef,\n      selectedAccount: selectedAccount,\n      assets: assets,\n      chainId: chainId,\n      onSubmit: this.onSubmit,\n      onShowDelegatedSentryNodes: this.onShowDelegatedSentryNodes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }), transactionType === 'withdraw-stake' && /*#__PURE__*/React.createElement(WithdrawStakeTxForm, {\n      formRef: this.formRef,\n      selectedAccount: selectedAccount,\n      assets: assets,\n      chainId: chainId,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }), transactionType === 'delegate-ddrop-vote' && /*#__PURE__*/React.createElement(DelegateVoteTxForm, {\n      formRef: this.formRef,\n      selectedAccount: selectedAccount,\n      chainId: chainId,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'CreateTransactionModal__footer',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(GradientButton, {\n      onClick: this.onNextClick,\n      title: 'Next',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {\n    // @ts-ignore\n    this[key] = eval(code);\n  }\n\n}\n\nconst mapStateToProps = (state, props) => {\n  const {\n    transactionType\n  } = props;\n  const {\n    dneroWallet\n  } = state;\n  const selectedAddress = dneroWallet.selectedAddress;\n  const identities = dneroWallet.identities;\n  const accounts = dneroWallet.accounts;\n  const tokens = dneroWallet.tokens;\n  const chainId = dneroWallet.network.chainId;\n  return {\n    transactionType: transactionType,\n    selectedAddress: selectedAddress,\n    selectedIdentity: identities[selectedAddress],\n    selectedAccount: accounts[selectedAddress],\n    chainId: chainId,\n    // Not ideal to pass this whole state but helps with the form data -> tx\n    dneroWallet: dneroWallet,\n    assets: getAllAssets(chainId, tokens)\n  };\n};\n\nconst _default = connect(mapStateToProps)(CreateTransactionModal);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(CreateTransactionModal, \"CreateTransactionModal\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/modals/CreateTransactionModal.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/modals/CreateTransactionModal.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/modals/CreateTransactionModal.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"names":["_","React","connect","SendTxForm","formDataToTransaction","createTransactionRequest","GradientButton","DefaultAssets","getAllAssets","tokenToAsset","DepositStakeTxForm","WithdrawStakeTxForm","updateAccountBalances","showModal","ModalTypes","DelegateVoteTxForm","CreateTransactionModal","Component","constructor","onNextClick","formRef","current","dispatchEvent","Event","cancelable","bubbles","onSubmit","data","transactionType","dneroWallet","props","tx","deps","dependencies","depTx","transactionRequest","toJson","dispatch","onShowDelegatedSentryNodes","onSelectNode","type","DELEGATED_NODE_SELECTOR","createRef","componentDidMount","render","selectedIdentity","selectedAccount","assets","chainId","title","replace","l","toUpperCase","mapStateToProps","state","selectedAddress","identities","accounts","tokens","network"],"sources":["/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/modals/CreateTransactionModal.js"],"sourcesContent":["import _ from 'lodash';\nimport React from 'react'\nimport connect from \"react-redux/es/connect/connect\";\nimport SendTxForm from '../components/transactions/SendTxForm';\nimport {formDataToTransaction} from \"../utils/Utils\";\nimport {createTransactionRequest} from \"../state/actions/Transactions\";\nimport GradientButton from \"../components/buttons/GradientButton\";\nimport {DefaultAssets, getAllAssets, tokenToAsset} from \"../constants/assets\";\nimport DepositStakeTxForm from \"../components/transactions/DepositStakeTxForm\";\nimport WithdrawStakeTxForm from \"../components/transactions/WithdrawStakeTxForm\";\nimport {updateAccountBalances} from \"../state/actions/Wallet\";\nimport {showModal} from \"../state/actions/ui\";\nimport ModalTypes from \"../constants/ModalTypes\";\nimport DelegateVoteTxForm from \"../components/transactions/DelegateVoteTxForm\";\n\nexport class CreateTransactionModal extends React.Component {\n    constructor() {\n        super();\n\n        this.formRef = React.createRef();\n    }\n\n    onNextClick = () => {\n        this.formRef.current.dispatchEvent(new Event('submit', {cancelable: true, bubbles: true}));\n    };\n\n    onSubmit = async (data) => {\n        const {transactionType, dneroWallet} = this.props;\n        const tx = await formDataToTransaction(transactionType, data, dneroWallet);\n        const deps = tx.dependencies || [];\n        const depTx = deps[0];\n        const transactionRequest = tx.toJson();\n        if(depTx){\n            transactionRequest.dependencies = [\n                depTx.toJson()\n            ];\n        }\n\n        this.props.dispatch(createTransactionRequest(transactionRequest));\n    };\n\n    onShowDelegatedSentryNodes = (onSelectNode) => {\n        this.props.dispatch(showModal({\n            type: ModalTypes.DELEGATED_NODE_SELECTOR,\n            props: {\n                onSelectNode: onSelectNode\n            }\n        }));\n    }\n\n    componentDidMount() {\n        this.props.dispatch(updateAccountBalances(false));\n    }\n\n    render() {\n        const {selectedIdentity, selectedAccount, transactionType, assets, chainId} = this.props;\n        const title = transactionType.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n\n        return (\n            <div className={'CreateTransactionModal'}>\n                <div className=\"ModalTitle\">\n                    {title}\n                </div>\n                {\n                    (transactionType === 'send') &&\n                    <SendTxForm formRef={this.formRef}\n                                selectedAccount={selectedAccount}\n                                assets={assets}\n                                chainId={chainId}\n                                onSubmit={this.onSubmit}/>\n                }\n                {\n                    (transactionType === 'deposit-stake') &&\n                    <DepositStakeTxForm formRef={this.formRef}\n                                        selectedAccount={selectedAccount}\n                                        assets={assets}\n                                        chainId={chainId}\n                                        onSubmit={this.onSubmit}\n                                        onShowDelegatedSentryNodes={this.onShowDelegatedSentryNodes}\n                    />\n                }\n                {\n                    (transactionType === 'withdraw-stake') &&\n                    <WithdrawStakeTxForm formRef={this.formRef}\n                                         selectedAccount={selectedAccount}\n                                         assets={assets}\n                                         chainId={chainId}\n                                         onSubmit={this.onSubmit}/>\n                }\n                {\n                    (transactionType === 'delegate-ddrop-vote') &&\n                    <DelegateVoteTxForm formRef={this.formRef}\n                                        selectedAccount={selectedAccount}\n                                        chainId={chainId}\n                                        onSubmit={this.onSubmit}/>\n                }\n                <div className={'CreateTransactionModal__footer'}>\n                    <GradientButton onClick={this.onNextClick}\n                                    title={'Next'}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    const {transactionType} = props;\n    const {dneroWallet} = state;\n    const selectedAddress = dneroWallet.selectedAddress;\n    const identities = dneroWallet.identities;\n    const accounts = dneroWallet.accounts;\n    const tokens = dneroWallet.tokens;\n    const chainId = dneroWallet.network.chainId;\n\n    return {\n        transactionType: transactionType,\n\n        selectedAddress: selectedAddress,\n        selectedIdentity: identities[selectedAddress],\n        selectedAccount: accounts[selectedAddress],\n        chainId: chainId,\n\n        // Not ideal to pass this whole state but helps with the form data -> tx\n        dneroWallet: dneroWallet,\n\n        assets: getAllAssets(chainId, tokens),\n    };\n};\n\nexport default connect(mapStateToProps)(CreateTransactionModal);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}