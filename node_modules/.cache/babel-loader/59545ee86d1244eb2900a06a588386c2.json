{"ast":null,"code":"var _jsxFileName = \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/pages/ContractPage.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { BigNumber } from 'bignumber.js';\nimport _ from 'lodash';\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport './ContractPage.css';\nimport GradientButton from \"../components/buttons/GradientButton\";\nimport TabBarItem from \"../components/TabBarItem\";\nimport TabBar from \"../components/TabBar\";\nimport ContractModes from \"../constants/ContractModes\";\nimport Web3 from \"web3\";\nimport { useForm } from 'react-hook-form';\nimport Dnero from \"../services/Dnero\";\nimport Wallet from \"../services/Wallet\";\nimport DneroJS from \"../libs/dnerojs.esm\";\nimport { store } from \"../state\";\nimport PageHeader from \"../components/PageHeader\";\nimport { getQueryParameters, zipMap } from \"../utils/Utils\";\nimport Api from \"../services/Api\";\nimport { createSmartContractTransaction } from \"../state/actions/Transactions\";\nconst web3 = new Web3(\"http://localhost\");\n\nfunction isReadFunction(functionData) {\n  const constant = _.get(functionData, ['constant'], null);\n\n  const stateMutability = _.get(functionData, ['stateMutability'], null);\n\n  return stateMutability === \"view\" || stateMutability === \"pure\" || constant === true;\n}\n\nfunction initContract(abiStr, address) {\n  try {\n    const abiJSON = parseJSON(abiStr);\n    return new web3.eth.Contract(abiJSON, address);\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction parseJSON(value) {\n  try {\n    const json = JSON.parse(value);\n    return json;\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction isValidByteCode(value) {\n  const json = parseJSON(value);\n  return _.isNil(json && json['object']) === false;\n}\n\nfunction validateByteCode(value) {\n  return isValidByteCode(value) || \"Invalid byte code\";\n}\n\nfunction isValidABI(value) {\n  const json = parseJSON(value);\n\n  try {\n    return _.isNil(json && new web3.eth.Contract(json, null)) === false;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction validateAddress(value) {\n  return web3.utils.isAddress(value) || \"Invalid address\";\n}\n\nfunction validateABI(value) {\n  return isValidABI(value) || \"Invalid ABI/JSON interface\";\n}\n\nfunction validateFunctionName(value) {\n  if (_.isNil(value) || value.length === 0) {\n    return \"Function is required\";\n  } else {\n    return true;\n  }\n}\n\nfunction validateInput(type, value) {\n  return true;\n\n  try {\n    return _.isNil(web3.eth.abi.encodeParameter(type, JSON.parse(value))) === false;\n  } catch (e) {\n    return \"Invalid value for type of \" + type;\n  }\n}\n\nfunction getFunctions(jsonInterface) {\n  const functions = _.filter(jsonInterface, function (o) {\n    return o.type === \"function\";\n  });\n\n  return functions;\n}\n\nfunction getConstructor(jsonInterface) {\n  const constructors = _.filter(jsonInterface, function (o) {\n    return o.type === \"constructor\";\n  });\n\n  return _.first(constructors);\n}\n\nfunction Inputs(title, inputs, formHook) {\n  const {\n    register,\n    errors\n  } = formHook;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, inputs.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FormSectionTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FormColumns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, inputs.map((value, index) => {\n    const {\n      name,\n      type\n    } = value;\n    const argName = `arg${index}`;\n    const key = `inputs.${argName}`;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormColumn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"InputTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 45\n      }\n    }, name + \" (\" + type + \")\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"RoundedInput\",\n      placeholder: \"Enter \" + name,\n      name: key,\n      ref: register({\n        required: \"Input \" + name + \" is required\",\n        validate: val => {\n          return validateInput(type, val);\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 45\n      }\n    }), _.get(errors, ['inputs', argName]) && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"InputError\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 84\n      }\n    }, _.get(errors, ['inputs', argName, 'message']))));\n  }))));\n}\n\nfunction DeployContractForm(props) {\n  const {\n    onSubmit\n  } = props;\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch\n  } = useForm({\n    mode: 'onChange'\n  });\n  const abi = watch(\"abi\");\n  const byteCode = watch(\"byteCode\");\n  const contract = initContract(abi, null);\n\n  const jsonInterface = _.get(contract, ['options', 'jsonInterface']);\n\n  const constructor = getConstructor(jsonInterface);\n\n  const constructorInputs = _.get(constructor, ['inputs'], []);\n\n  window.contract = contract;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FormColumns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FormColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FormSectionTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, \"ABI/JSON Interface\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"RoundedInput\",\n    placeholder: \"Paste ABI/JSON interface\",\n    name: \"abi\",\n    ref: register({\n      required: \"Contract ABI/JSON interface is required.\",\n      validate: validateABI\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }), errors.abi && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"InputError\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 36\n    }\n  }, errors.abi.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FormColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FormSectionTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }, \"Byte Code\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"RoundedInput\",\n    placeholder: \"Paste byte code\",\n    name: \"byteCode\",\n    ref: register({\n      required: \"Contract byte code is required.\",\n      validate: validateByteCode\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }), errors.byteCode && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"InputError\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 41\n    }\n  }, errors.byteCode.message))), Inputs(\"Constructor Inputs\", constructorInputs, {\n    register: register,\n    errors: errors\n  }), /*#__PURE__*/React.createElement(GradientButton, {\n    title: \"Deploy Contract\",\n    style: {\n      marginTop: 15\n    },\n    disabled: _.size(errors) > 0 || _.isNil(abi) || _.isNil(byteCode),\n    onClick: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }));\n}\n\n__signature__(DeployContractForm, \"useForm{{register, handleSubmit, errors, watch}}\", () => [useForm]);\n\nfunction InteractWithContractForm(props) {\n  const {\n    defaultFormValues,\n    disabled,\n    loading,\n    onSubmit,\n    onChange\n  } = props;\n\n  const defaultValues = _.merge({\n    functionName: \"\"\n  }, defaultFormValues);\n\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch,\n    setValue\n  } = useForm({\n    mode: 'onChange',\n    defaultValues: defaultValues\n  });\n  const [lastFormState, setLastFormState] = useState(defaultValues);\n  const formState = watch(); // watching every fields in the form\n\n  const isDirty = _.isEqual(lastFormState, formState) === false;\n  useEffect(() => {\n    if (isDirty) {\n      setLastFormState(formState);\n\n      if (onChange) {\n        onChange();\n      }\n    }\n  }, [isDirty, formState, onChange, setValue]);\n  const abi = watch(\"abi\");\n  const address = watch(\"address\");\n  const functionName = watch(\"functionName\");\n  const contract = initContract(abi, null);\n\n  const jsonInterface = _.get(contract, ['options', 'jsonInterface']);\n\n  const functions = getFunctions(jsonInterface) || [];\n  const functionsByName = zipMap(functions.map(_ref => {\n    let {\n      name\n    } = _ref;\n    return name;\n  }), functions);\n\n  const functionData = _.get(functionsByName, [functionName]);\n\n  const functionInputs = _.get(functionData, ['inputs'], []);\n\n  const isFunctionReadOnly = isReadFunction(functionData);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FormSectionTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, \"Contract Address\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"RoundedInput\",\n    placeholder: \"Enter contract address\",\n    name: \"address\",\n    ref: register({\n      required: \"Contract address is required.\",\n      validate: validateAddress\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  }), errors.address && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"InputError\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 32\n    }\n  }, errors.address.message), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FormColumns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FormColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FormSectionTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 21\n    }\n  }, \"ABI/JSON Interface\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"RoundedInput\",\n    placeholder: \"Paste ABI/JSON interface\",\n    name: \"abi\",\n    ref: register({\n      required: \"Contract ABI/JSON interface is required.\",\n      validate: validateABI\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 21\n    }\n  }), errors.abi && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"InputError\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 36\n    }\n  }, errors.abi.message)), functions.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FormColumn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FormSectionTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 25\n    }\n  }, \"Function\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"functionName\",\n    className: \"RoundedInput\",\n    placeholder: \"Choose function\",\n    ref: register({\n      required: \"Function is required.\",\n      validate: validateFunctionName\n    }),\n    onChange: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    key: \"__placeholder__\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 29\n    }\n  }, \"Choose function\"), functions.map((value, index) => {\n    const {\n      name,\n      type\n    } = value;\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: name,\n      key: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 41\n      }\n    }, name);\n  })), errors.functionName && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"InputError\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 49\n    }\n  }, errors.functionName.message))), Inputs(\"Function Inputs\", functionInputs, {\n    register: register,\n    errors: errors\n  }), /*#__PURE__*/React.createElement(GradientButton, {\n    title: isFunctionReadOnly ? \"Read\" : \"Write\",\n    style: {\n      marginTop: 15\n    },\n    disabled: disabled || _.size(errors) > 0 || _.isNil(abi) || _.isNil(address) || _.isNil(functionName),\n    loading: loading,\n    onClick: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }\n  }));\n}\n\n__signature__(InteractWithContractForm, \"useForm{{register, handleSubmit, errors, watch, setValue}}\\nuseState{[lastFormState, setLastFormState](defaultValues)}\\nuseEffect{}\", () => [useForm]);\n\nclass DeployContractContent extends React.Component {\n  constructor() {\n    super();\n\n    this.onSubmit = formData => {\n      const {\n        abi,\n        byteCode,\n        inputs\n      } = formData;\n      const byteCodeJson = parseJSON(byteCode);\n      const contract = initContract(abi, null);\n\n      const jsonInterface = _.get(contract, ['options', 'jsonInterface']);\n\n      const constructor = getConstructor(jsonInterface);\n\n      const constructorInputs = _.get(constructor, ['inputs'], []);\n\n      const constructorInputTypes = _.map(constructorInputs, _ref2 => {\n        let {\n          name,\n          type\n        } = _ref2;\n        return type;\n      });\n\n      const constructorInputValues = _.map(constructorInputs, (_ref3, index) => {\n        let {\n          name,\n          type\n        } = _ref3;\n        let val = inputs[`arg${index}`];\n\n        if (type.includes('[]')) {\n          return parseJSON(val);\n        } else if (type === \"boolean\" || type === \"bool\") {\n          return Boolean(parseJSON(val));\n        }\n\n        return val;\n      });\n\n      const encodedParameters = web3.eth.abi.encodeParameters(constructorInputTypes, constructorInputValues).slice(2);\n      const from = Wallet.getWalletAddress();\n      const data = byteCodeJson.object + encodedParameters;\n      const value = 0;\n      store.dispatch(createSmartContractTransaction(ContractModes.DEPLOY, abi, {\n        from: from,\n        to: null,\n        data: data,\n        value: value\n      }));\n    };\n\n    this.defaultState = {\n      loading: false\n    };\n    this.state = this.defaultState;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"DeployContractContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DeployContractForm, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {\n    // @ts-ignore\n    this[key] = eval(code);\n  }\n\n}\n\nclass InteractWithContractContent extends React.Component {\n  constructor() {\n    super();\n\n    this.onSubmit = async formData => {\n      const {\n        address,\n        abi,\n        functionName,\n        inputs\n      } = formData;\n      const contract = initContract(abi, address);\n\n      const jsonInterface = _.get(contract, ['options', 'jsonInterface']);\n\n      const functions = getFunctions(jsonInterface) || [];\n      const functionsByName = zipMap(functions.map(_ref4 => {\n        let {\n          name\n        } = _ref4;\n        return name;\n      }), functions);\n\n      const functionData = _.get(functionsByName, [functionName]);\n\n      const functionInputs = _.get(functionData, ['inputs'], []);\n\n      const functionOutputs = _.get(functionData, ['outputs'], []);\n\n      const functionSignature = _.get(functionData, ['signature']).slice(2);\n\n      const isFunctionReadOnly = isReadFunction(functionData);\n\n      const inputTypes = _.map(functionInputs, _ref5 => {\n        let {\n          name,\n          type\n        } = _ref5;\n        return type;\n      });\n\n      const inputValues = _.map(functionInputs, (_ref6, index) => {\n        let {\n          name,\n          type\n        } = _ref6;\n        let val = inputs[`arg${index}`];\n\n        if (type.includes('[]')) {\n          return parseJSON(val);\n        } else if (type === \"boolean\" || type === \"bool\") {\n          return Boolean(parseJSON(val));\n        }\n\n        return val;\n      });\n\n      const encodedParameters = web3.eth.abi.encodeParameters(inputTypes, inputValues).slice(2);\n      const feeInDTokenWei = new BigNumber(10).pow(12);\n      const from = Wallet.getWalletAddress();\n      const gasPrice = Dnero.getSmartContractGasPrice(); //feeInDTokenWei;\n\n      const gasLimit = 10000000;\n      const data = functionSignature + encodedParameters;\n      const value = 0;\n      const senderSequence = 1;\n\n      if (isFunctionReadOnly) {\n        this.setState({\n          isLoading: true,\n          callResult: null\n        }); //Call smart contract (no signing)\n\n        const senderSequence = 1;\n        const tx = Dnero.unsignedSmartContractTx({\n          from: from,\n          to: address,\n          data: data,\n          value: value,\n          transactionFee: gasPrice,\n          gasLimit: gasLimit\n        }, senderSequence);\n        const rawTxBytes = DneroJS.TxSigner.serializeTx(tx);\n\n        try {\n          const callResponse = await Api.callSmartContract({\n            data: rawTxBytes.toString('hex').slice(2)\n          }, {\n            network: Dnero.getChainID()\n          });\n          const callResponseJSON = await callResponse.json();\n\n          const result = _.get(callResponseJSON, 'result');\n\n          const errorMessage = _.get(result, 'vm_error');\n\n          this.setState({\n            callResult: _.merge(result, {\n              outputs: functionOutputs,\n              decodedParameters: web3.eth.abi.decodeParameters(functionOutputs, _.get(result, 'vm_return'))\n            }),\n            isLoading: false\n          });\n        } catch (e) {\n          //Stop loading and put the error message in the vm_error like it came fromm the blockchain.\n          this.setState({\n            isLoading: false,\n            callResult: {\n              vm_error: e.message\n            }\n          });\n        }\n      } else {\n        store.dispatch(createSmartContractTransaction(ContractModes.INTERACT, abi, {\n          from: from,\n          to: address,\n          data: data,\n          value: value\n        }));\n      }\n    };\n\n    this.onChange = () => {\n      this.setState({\n        callResult: null\n      });\n    };\n\n    this.defaultState = {\n      loading: false,\n      result: null\n    };\n    this.state = this.defaultState;\n  }\n\n  render() {\n    const {\n      defaultFormValues\n    } = this.props;\n    const {\n      isLoading,\n      callResult\n    } = this.state;\n\n    const error = _.get(callResult, 'vm_error');\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"InteractWithContractContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InteractWithContractForm, {\n      defaultFormValues: defaultFormValues,\n      onSubmit: this.onSubmit,\n      onChange: this.onChange,\n      loading: isLoading,\n      disabled: isLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 17\n      }\n    }), error && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"InputError\",\n      style: {\n        marginTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 21\n      }\n    }, error), callResult && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"InputTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 29\n      }\n    }, \"Raw Result\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"RoundedInput\",\n      name: \"vm_return\",\n      value: _.get(callResult, 'vm_return'),\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 29\n      }\n    }))), callResult && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"FormColumns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 21\n      }\n    }, _.get(callResult, 'outputs', []).map((value, index) => {\n      const {\n        name,\n        type\n      } = value;\n      return /*#__PURE__*/React.createElement(Fragment, {\n        key: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"FormColumn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"InputTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 45\n        }\n      }, name + \" (\" + type + \")\"), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"RoundedInput\",\n        value: _.get(callResult, ['decodedParameters', index]),\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 45\n        }\n      })));\n    })));\n  }\n\n  // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {\n    // @ts-ignore\n    this[key] = eval(code);\n  }\n\n}\n\nclass ContractPage extends React.Component {\n  render() {\n    let contractMode = this.props.match.params.contractMode;\n    let queryParams = getQueryParameters(this.props.history.location.search);\n\n    if (queryParams['abi']) {\n      queryParams['abi'] = atob(queryParams['abi']);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ContractPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ContractPage__detail-view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PageHeader, {\n      title: null,\n      sticky: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TabBar, {\n      centered: true,\n      condensed: false,\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TabBarItem, {\n      title: \"Deploy Contract\",\n      href: \"/wallet/contract/\" + ContractModes.DEPLOY,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(TabBarItem, {\n      title: \"Interact with Contract\",\n      href: \"/wallet/contract/\" + ContractModes.INTERACT,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 29\n      }\n    }))), contractMode === ContractModes.DEPLOY && /*#__PURE__*/React.createElement(DeployContractContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 25\n      }\n    }), contractMode === ContractModes.INTERACT && /*#__PURE__*/React.createElement(InteractWithContractContent, {\n      defaultFormValues: queryParams,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 25\n      }\n    })));\n  }\n\n  // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {\n    // @ts-ignore\n    this[key] = eval(code);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst _default = connect(mapStateToProps)(ContractPage);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(web3, \"web3\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/pages/ContractPage.js\");\n  reactHotLoader.register(isReadFunction, \"isReadFunction\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/pages/ContractPage.js\");\n  reactHotLoader.register(initContract, \"initContract\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/pages/ContractPage.js\");\n  reactHotLoader.register(parseJSON, \"parseJSON\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/pages/ContractPage.js\");\n  reactHotLoader.register(isValidByteCode, \"isValidByteCode\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/pages/ContractPage.js\");\n  reactHotLoader.register(validateByteCode, \"validateByteCode\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/pages/ContractPage.js\");\n  reactHotLoader.register(isValidABI, \"isValidABI\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/pages/ContractPage.js\");\n  reactHotLoader.register(validateAddress, \"validateAddress\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/pages/ContractPage.js\");\n  reactHotLoader.register(validateABI, \"validateABI\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/pages/ContractPage.js\");\n  reactHotLoader.register(validateFunctionName, \"validateFunctionName\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/pages/ContractPage.js\");\n  reactHotLoader.register(validateInput, \"validateInput\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/pages/ContractPage.js\");\n  reactHotLoader.register(getFunctions, \"getFunctions\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/pages/ContractPage.js\");\n  reactHotLoader.register(getConstructor, \"getConstructor\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/pages/ContractPage.js\");\n  reactHotLoader.register(Inputs, \"Inputs\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/pages/ContractPage.js\");\n  reactHotLoader.register(DeployContractForm, \"DeployContractForm\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/pages/ContractPage.js\");\n  reactHotLoader.register(InteractWithContractForm, \"InteractWithContractForm\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/pages/ContractPage.js\");\n  reactHotLoader.register(DeployContractContent, \"DeployContractContent\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/pages/ContractPage.js\");\n  reactHotLoader.register(InteractWithContractContent, \"InteractWithContractContent\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/pages/ContractPage.js\");\n  reactHotLoader.register(ContractPage, \"ContractPage\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/pages/ContractPage.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/pages/ContractPage.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/pages/ContractPage.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"names":["BigNumber","_","React","Fragment","useState","useEffect","connect","GradientButton","TabBarItem","TabBar","ContractModes","Web3","useForm","Dnero","Wallet","DneroJS","store","PageHeader","getQueryParameters","zipMap","Api","createSmartContractTransaction","web3","isReadFunction","functionData","constant","get","stateMutability","initContract","abiStr","address","abiJSON","parseJSON","eth","Contract","e","value","json","JSON","parse","isValidByteCode","isNil","validateByteCode","isValidABI","validateAddress","utils","isAddress","validateABI","validateFunctionName","length","validateInput","type","abi","encodeParameter","getFunctions","jsonInterface","functions","filter","o","getConstructor","constructors","first","Inputs","title","inputs","formHook","register","errors","map","index","name","argName","key","required","validate","val","DeployContractForm","props","onSubmit","handleSubmit","watch","mode","byteCode","contract","constructor","constructorInputs","window","message","marginTop","size","InteractWithContractForm","defaultFormValues","disabled","loading","onChange","defaultValues","merge","functionName","setValue","lastFormState","setLastFormState","formState","isDirty","isEqual","functionsByName","functionInputs","isFunctionReadOnly","DeployContractContent","Component","formData","byteCodeJson","constructorInputTypes","constructorInputValues","includes","Boolean","encodedParameters","encodeParameters","slice","from","getWalletAddress","data","object","dispatch","DEPLOY","to","defaultState","state","render","InteractWithContractContent","functionOutputs","functionSignature","inputTypes","inputValues","feeInDTokenWei","pow","gasPrice","getSmartContractGasPrice","gasLimit","senderSequence","setState","isLoading","callResult","tx","unsignedSmartContractTx","transactionFee","rawTxBytes","TxSigner","serializeTx","callResponse","callSmartContract","toString","network","getChainID","callResponseJSON","result","errorMessage","outputs","decodedParameters","decodeParameters","vm_error","INTERACT","error","ContractPage","contractMode","match","params","queryParams","history","location","search","atob","width","mapStateToProps"],"sources":["/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/pages/ContractPage.js"],"sourcesContent":["import {BigNumber} from 'bignumber.js';\nimport _ from 'lodash';\nimport React, {Fragment, useState, useEffect} from \"react\";\nimport {connect} from 'react-redux'\nimport './ContractPage.css';\nimport GradientButton from \"../components/buttons/GradientButton\";\nimport TabBarItem from \"../components/TabBarItem\";\nimport TabBar from \"../components/TabBar\";\nimport ContractModes from \"../constants/ContractModes\";\nimport Web3 from \"web3\";\nimport {useForm} from 'react-hook-form';\nimport Dnero from \"../services/Dnero\";\nimport Wallet from \"../services/Wallet\";\nimport DneroJS from \"../libs/dnerojs.esm\";\nimport {store} from \"../state\";\nimport PageHeader from \"../components/PageHeader\";\nimport {getQueryParameters, zipMap} from \"../utils/Utils\";\nimport Api from \"../services/Api\";\nimport {createSmartContractTransaction} from \"../state/actions/Transactions\";\n\nconst web3 = new Web3(\"http://localhost\");\n\nfunction isReadFunction(functionData){\n    const constant = _.get(functionData, ['constant'], null);\n    const stateMutability = _.get(functionData, ['stateMutability'], null);\n\n    return (stateMutability === \"view\" || stateMutability === \"pure\" || constant === true);\n}\n\nfunction initContract(abiStr, address) {\n    try {\n        const abiJSON = parseJSON(abiStr);\n\n        return new web3.eth.Contract(abiJSON, address);\n    } catch (e) {\n        return null;\n    }\n}\n\nfunction parseJSON(value) {\n    try {\n        const json = JSON.parse(value);\n\n        return json;\n    } catch (e) {\n        return null;\n    }\n}\n\nfunction isValidByteCode(value) {\n    const json = parseJSON(value);\n\n    return (_.isNil((json && json['object'])) === false);\n}\n\nfunction validateByteCode(value) {\n    return (isValidByteCode(value) || \"Invalid byte code\");\n}\n\nfunction isValidABI(value) {\n    const json = parseJSON(value);\n\n    try {\n        return (_.isNil((json && (new web3.eth.Contract(json, null)))) === false);\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction validateAddress(value) {\n    return (web3.utils.isAddress(value) || \"Invalid address\");\n}\n\nfunction validateABI(value) {\n    return (isValidABI(value) || \"Invalid ABI/JSON interface\");\n}\n\nfunction validateFunctionName(value) {\n    if (_.isNil(value) || value.length === 0) {\n        return \"Function is required\"\n    } else {\n        return true;\n    }\n}\n\nfunction validateInput(type, value) {\n    return true;\n\n    try {\n        return _.isNil(web3.eth.abi.encodeParameter(type, JSON.parse(value))) === false;\n    } catch (e) {\n        return \"Invalid value for type of \" + type;\n    }\n}\n\nfunction getFunctions(jsonInterface) {\n    const functions = _.filter(jsonInterface, function (o) {\n        return (o.type === \"function\");\n    });\n\n    return functions;\n}\n\nfunction getConstructor(jsonInterface) {\n    const constructors = _.filter(jsonInterface, function (o) {\n        return (o.type === \"constructor\");\n    });\n\n    return _.first(constructors);\n}\n\nfunction Inputs(title, inputs, formHook) {\n    const {register, errors} = formHook;\n\n    return (\n        <div>\n            {\n                inputs.length > 0 &&\n                <div>\n                    <div className=\"FormSectionTitle\">{ title }</div>\n                    <div className=\"FormColumns\">\n                        {\n                            inputs.map((value, index) => {\n                                const {name, type} = value;\n                                const argName = `arg${index}`;\n                                const key = `inputs.${argName}`;\n\n                                return (\n                                    <Fragment key={key}>\n                                        <div className=\"FormColumn\">\n                                            <div className=\"InputTitle\">{name + \" (\" + type + \")\"}</div>\n                                            <input className=\"RoundedInput\"\n                                                   placeholder={\"Enter \" + name}\n                                                   name={key}\n                                                   ref={register({\n                                                       required: \"Input \" + name + \" is required\",\n                                                       validate: (val) => {\n                                                           return validateInput(type, val)\n                                                       }\n                                                   })}\n                                            />\n                                            {_.get(errors, ['inputs', argName]) && <div\n                                                className=\"InputError\">{_.get(errors, ['inputs', argName, 'message'])}</div>}\n                                        </div>\n                                    </Fragment>\n                                );\n                            })\n                        }\n                    </div>\n                </div>\n            }\n        </div>\n    )\n}\n\nfunction DeployContractForm(props) {\n    const {onSubmit} = props;\n    const {register, handleSubmit, errors, watch} = useForm({\n        mode: 'onChange',\n    });\n    const abi = watch(\"abi\");\n    const byteCode = watch(\"byteCode\");\n    const contract = initContract(abi, null);\n    const jsonInterface = _.get(contract, ['options', 'jsonInterface']);\n    const constructor = getConstructor(jsonInterface);\n    const constructorInputs = _.get(constructor, ['inputs'], []);\n\n    window.contract = contract;\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n\n            <div className=\"FormColumns\">\n                {/*ABI/JSON Interface Section*/}\n                <div className=\"FormColumn\">\n                    <div className=\"FormSectionTitle\">ABI/JSON Interface</div>\n                    <textarea className=\"RoundedInput\"\n                              placeholder=\"Paste ABI/JSON interface\"\n                              name=\"abi\"\n                              ref={register({\n                                  required: \"Contract ABI/JSON interface is required.\",\n                                  validate: validateABI\n                              })}\n                    />\n                    {errors.abi && <div className=\"InputError\">{errors.abi.message}</div>}\n                </div>\n\n                {/*Byte Code Section*/}\n                <div className=\"FormColumn\">\n                    <div className=\"FormSectionTitle\">Byte Code</div>\n                    <textarea className=\"RoundedInput\"\n                              placeholder=\"Paste byte code\"\n                              name=\"byteCode\"\n                              ref={register({\n                                  required: \"Contract byte code is required.\",\n                                  validate: validateByteCode\n                              })}\n                    />\n                    {errors.byteCode && <div className=\"InputError\">{errors.byteCode.message}</div>}\n                </div>\n            </div>\n\n            {\n                Inputs(\"Constructor Inputs\", constructorInputs, {\n                    register: register,\n                    errors: errors\n                })\n            }\n\n            <GradientButton title=\"Deploy Contract\"\n                            style={{marginTop: 15}}\n                            disabled={(_.size(errors) > 0) || _.isNil(abi) || _.isNil(byteCode)}\n                            onClick={handleSubmit(onSubmit)}\n            />\n        </form>\n    );\n}\n\nfunction InteractWithContractForm(props) {\n    const {defaultFormValues, disabled, loading, onSubmit, onChange} = props;\n    const defaultValues = _.merge({\n        functionName: \"\"\n    }, defaultFormValues);\n\n    const {register, handleSubmit, errors, watch, setValue} = useForm({\n        mode: 'onChange',\n        defaultValues: defaultValues\n    });\n    const [lastFormState, setLastFormState] = useState(defaultValues);\n    const formState = watch(); // watching every fields in the form\n    const isDirty = (_.isEqual(lastFormState, formState) === false);\n\n    useEffect(() => {\n        if (isDirty) {\n            setLastFormState(formState);\n\n            if (onChange) {\n                onChange();\n            }\n        }\n    }, [isDirty, formState, onChange, setValue]);\n\n    const abi = watch(\"abi\");\n    const address = watch(\"address\");\n    const functionName = watch(\"functionName\");\n    const contract = initContract(abi, null);\n    const jsonInterface = _.get(contract, ['options', 'jsonInterface']);\n    const functions = getFunctions(jsonInterface) || [];\n    const functionsByName = zipMap(functions.map(({name}) => name), functions);\n    const functionData = _.get(functionsByName, [functionName]);\n    const functionInputs = _.get(functionData, ['inputs'], []);\n    const isFunctionReadOnly = isReadFunction(functionData);\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n\n            {/*Contract Name Section*/}\n            <div className=\"FormSectionTitle\">Contract Address</div>\n            <input className=\"RoundedInput\"\n                   placeholder=\"Enter contract address\"\n                   name=\"address\"\n                   ref={register({\n                       required: \"Contract address is required.\",\n                       validate: validateAddress\n                   })}\n            />\n            {errors.address && <div className=\"InputError\">{errors.address.message}</div>}\n\n\n            {/*ABI/JSON Interface Section*/}\n            <div className=\"FormColumns\">\n\n                <div className=\"FormColumn\">\n                    <div className=\"FormSectionTitle\">ABI/JSON Interface</div>\n                    <textarea className=\"RoundedInput\"\n                              placeholder=\"Paste ABI/JSON interface\"\n                              name=\"abi\"\n                              ref={register({\n                                  required: \"Contract ABI/JSON interface is required.\",\n                                  validate: validateABI\n                              })}\n                    />\n                    {errors.abi && <div className=\"InputError\">{errors.abi.message}</div>}\n                </div>\n\n                {\n                    functions.length > 0 &&\n                    <div className=\"FormColumn\">\n                        <div className=\"FormSectionTitle\">Function</div>\n                        <select name=\"functionName\"\n                                className=\"RoundedInput\"\n                                placeholder=\"Choose function\"\n                                ref={register({\n                                    required: \"Function is required.\",\n                                    validate: validateFunctionName\n                                })}\n                        onChange={() => {\n\n                        }}>\n                            <option value={\"\"}\n                                    key={\"__placeholder__\"}>\n                                Choose function\n                            </option>\n                            {\n                                functions.map((value, index) => {\n                                    const {name, type} = value;\n                                    return (\n                                        <option value={name}\n                                                key={name}\n                                        >{name}</option>\n                                    );\n                                })\n                            }\n                        </select>\n                        {errors.functionName && <div className=\"InputError\">{errors.functionName.message}</div>}\n                    </div>\n                }\n\n            </div>\n\n            {\n                Inputs(\"Function Inputs\", functionInputs, {\n                    register: register,\n                    errors: errors\n                })\n            }\n\n            <GradientButton title={isFunctionReadOnly ? \"Read\" : \"Write\"}\n                            style={{marginTop: 15}}\n                            disabled={disabled || (_.size(errors) > 0) || _.isNil(abi) || _.isNil(address) || _.isNil(functionName)}\n                            loading={loading}\n                            onClick={handleSubmit(onSubmit)}\n            />\n        </form>\n    );\n}\n\n\nclass DeployContractContent extends React.Component {\n    constructor() {\n        super();\n\n        this.defaultState = {\n            loading: false,\n        };\n\n        this.state = this.defaultState;\n    }\n\n    onSubmit = (formData) => {\n        const {abi, byteCode, inputs} = formData;\n        const byteCodeJson = parseJSON(byteCode);\n        const contract = initContract(abi, null);\n        const jsonInterface = _.get(contract, ['options', 'jsonInterface']);\n        const constructor = getConstructor(jsonInterface);\n        const constructorInputs = _.get(constructor, ['inputs'], []);\n\n        const constructorInputTypes = _.map(constructorInputs, ({name, type}) => {\n            return type;\n        });\n        const constructorInputValues = _.map(constructorInputs, ({name, type}, index) => {\n            let val = inputs[`arg${index}`];\n\n            if(type.includes('[]')){\n                return parseJSON(val);\n            }\n            else if(type === \"boolean\" || type === \"bool\"){\n                return Boolean(parseJSON(val));\n            }\n\n            return val;\n        });\n        const encodedParameters = web3.eth.abi.encodeParameters(constructorInputTypes, constructorInputValues).slice(2);\n        const from = Wallet.getWalletAddress();\n        const data = byteCodeJson.object + encodedParameters;\n        const value = 0;\n\n        store.dispatch(createSmartContractTransaction(ContractModes.DEPLOY, abi, {\n                from: from,\n                to: null,\n                data: data,\n                value: value,\n            }\n        ));\n    };\n\n    render() {\n        return (\n            <div className=\"DeployContractContent\">\n                <DeployContractForm onSubmit={this.onSubmit}/>\n            </div>\n        );\n    }\n}\n\nclass InteractWithContractContent extends React.Component {\n    constructor() {\n        super();\n\n        this.defaultState = {\n            loading: false,\n\n            result: null\n        };\n\n        this.state = this.defaultState;\n    }\n\n    onSubmit = async (formData) => {\n        const {address, abi, functionName, inputs} = formData;\n        const contract = initContract(abi, address);\n        const jsonInterface = _.get(contract, ['options', 'jsonInterface']);\n        const functions = getFunctions(jsonInterface) || [];\n        const functionsByName = zipMap(functions.map(({name}) => name), functions);\n        const functionData = _.get(functionsByName, [functionName]);\n        const functionInputs = _.get(functionData, ['inputs'], []);\n        const functionOutputs = _.get(functionData, ['outputs'], []);\n        const functionSignature = _.get(functionData, ['signature']).slice(2);\n        const isFunctionReadOnly = isReadFunction(functionData);\n\n        const inputTypes = _.map(functionInputs, ({name, type}) => {\n            return type;\n        });\n        const inputValues = _.map(functionInputs, ({name, type}, index) => {\n            let val = inputs[`arg${index}`];\n            if(type.includes('[]')){\n                return parseJSON(val);\n            }\n            else if(type === \"boolean\" || type === \"bool\"){\n                return Boolean(parseJSON(val));\n            }\n\n            return val;\n        });\n        const encodedParameters = web3.eth.abi.encodeParameters(inputTypes, inputValues).slice(2);\n\n        const feeInDTokenWei = (new BigNumber(10)).pow(12);\n        const from = Wallet.getWalletAddress();\n        const gasPrice = Dnero.getSmartContractGasPrice(); //feeInDTokenWei;\n        const gasLimit = 10000000;\n        const data = functionSignature + encodedParameters;\n        const value = 0;\n        const senderSequence = 1;\n\n        if (isFunctionReadOnly) {\n            this.setState({\n                isLoading: true,\n                callResult: null\n            });\n\n            //Call smart contract (no signing)\n            const senderSequence = 1;\n            const tx = Dnero.unsignedSmartContractTx({\n                from: from,\n                to: address,\n                data: data,\n                value: value,\n                transactionFee: gasPrice,\n                gasLimit: gasLimit\n            }, senderSequence);\n            const rawTxBytes = DneroJS.TxSigner.serializeTx(tx);\n\n            try{\n                const callResponse = await Api.callSmartContract({data: rawTxBytes.toString('hex').slice(2)}, {network: Dnero.getChainID()});\n                const callResponseJSON = await callResponse.json();\n                const result = _.get(callResponseJSON, 'result');\n                const errorMessage  = _.get(result, 'vm_error');\n\n                this.setState({\n                    callResult: _.merge(result, {\n                        outputs: functionOutputs,\n                        decodedParameters: web3.eth.abi.decodeParameters(functionOutputs, _.get(result, 'vm_return'))\n                    }),\n                    isLoading: false\n                });\n            }\n            catch (e) {\n                //Stop loading and put the error message in the vm_error like it came fromm the blockchain.\n                this.setState({\n                    isLoading: false,\n                    callResult: {\n                        vm_error: e.message\n                    }\n                });\n            }\n\n        } else {\n            store.dispatch(createSmartContractTransaction(ContractModes.INTERACT, abi, {\n                    from: from,\n                    to: address,\n                    data: data,\n                    value: value,\n                }\n            ));\n        }\n    };\n\n    onChange = () => {\n        this.setState({\n            callResult: null\n        });\n    };\n\n    render() {\n        const {defaultFormValues} = this.props;\n        const {isLoading, callResult} = this.state;\n        const error = _.get(callResult, 'vm_error');\n\n        return (\n            <div className=\"InteractWithContractContent\">\n                <InteractWithContractForm defaultFormValues={defaultFormValues}\n                                          onSubmit={this.onSubmit}\n                                          onChange={this.onChange}\n                                          loading={isLoading}\n                                          disabled={isLoading}\n                />\n                {\n                    error &&\n                    <div className=\"InputError\"\n                         style={{\n                             marginTop: 20\n                         }}>\n                        {error}\n                    </div>\n                }\n                {\n                    callResult &&\n                    <div style={{\n                        marginTop: 20\n                    }}>\n                        <div>\n                            <div className=\"InputTitle\">Raw Result</div>\n                            <input className=\"RoundedInput\"\n                                   name={\"vm_return\"}\n                                   value={_.get(callResult, 'vm_return')}\n                                   readOnly\n                            />\n                        </div>\n                    </div>\n                }\n                {\n                    callResult &&\n                    <div className=\"FormColumns\">\n                        {\n                            _.get(callResult, 'outputs', []).map((value, index) => {\n                                const {name, type} = value;\n                                return (\n                                    <Fragment key={name}>\n                                        <div className=\"FormColumn\">\n                                            <div className=\"InputTitle\">{name + \" (\" + type + \")\"}</div>\n                                            <input className=\"RoundedInput\"\n                                                   value={_.get(callResult, ['decodedParameters', index])}\n                                                   readOnly\n                                            />\n                                        </div>\n                                    </Fragment>\n                                );\n                            })\n                        }\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\n\nclass ContractPage extends React.Component {\n    render() {\n        let contractMode = this.props.match.params.contractMode;\n        let queryParams = getQueryParameters(this.props.history.location.search);\n        if (queryParams['abi']) {\n            queryParams['abi'] = atob(queryParams['abi']);\n        }\n\n        return (\n            <div className=\"ContractPage\">\n                <div className=\"ContractPage__detail-view\">\n                    <PageHeader title={null}\n                                sticky={true}>\n                        <TabBar centered={true}\n                                condensed={false}\n                                style={{width: \"100%\"}}\n                        >\n                            <TabBarItem\n                                title=\"Deploy Contract\"\n                                href={\"/wallet/contract/\" + ContractModes.DEPLOY}\n                            />\n                            <TabBarItem\n                                title=\"Interact with Contract\"\n                                href={\"/wallet/contract/\" + ContractModes.INTERACT}\n                            />\n                        </TabBar>\n                    </PageHeader>\n\n                    {\n                        (contractMode === ContractModes.DEPLOY) &&\n                        <DeployContractContent/>\n                    }\n                    {\n                        (contractMode === ContractModes.INTERACT) &&\n                        <InteractWithContractContent defaultFormValues={queryParams}/>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {};\n};\n\nexport default connect(mapStateToProps)(ContractPage);\n"],"mappings":";;;;;;;;;;;AAAA,SAAQA,SAAR,QAAwB,cAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,EAAmCC,SAAnC,QAAmD,OAAnD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,oBAAP;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAAQC,KAAR,QAAoB,UAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAAQC,kBAAR,EAA4BC,MAA5B,QAAyC,gBAAzC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAAQC,8BAAR,QAA6C,+BAA7C;AAEA,MAAMC,IAAI,GAAG,IAAIX,IAAJ,CAAS,kBAAT,CAAb;;AAEA,SAASY,cAAT,CAAwBC,YAAxB,EAAqC;EACjC,MAAMC,QAAQ,GAAGxB,CAAC,CAACyB,GAAF,CAAMF,YAAN,EAAoB,CAAC,UAAD,CAApB,EAAkC,IAAlC,CAAjB;;EACA,MAAMG,eAAe,GAAG1B,CAAC,CAACyB,GAAF,CAAMF,YAAN,EAAoB,CAAC,iBAAD,CAApB,EAAyC,IAAzC,CAAxB;;EAEA,OAAQG,eAAe,KAAK,MAApB,IAA8BA,eAAe,KAAK,MAAlD,IAA4DF,QAAQ,KAAK,IAAjF;AACH;;AAED,SAASG,YAAT,CAAsBC,MAAtB,EAA8BC,OAA9B,EAAuC;EACnC,IAAI;IACA,MAAMC,OAAO,GAAGC,SAAS,CAACH,MAAD,CAAzB;IAEA,OAAO,IAAIP,IAAI,CAACW,GAAL,CAASC,QAAb,CAAsBH,OAAtB,EAA+BD,OAA/B,CAAP;EACH,CAJD,CAIE,OAAOK,CAAP,EAAU;IACR,OAAO,IAAP;EACH;AACJ;;AAED,SAASH,SAAT,CAAmBI,KAAnB,EAA0B;EACtB,IAAI;IACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAX,CAAb;IAEA,OAAOC,IAAP;EACH,CAJD,CAIE,OAAOF,CAAP,EAAU;IACR,OAAO,IAAP;EACH;AACJ;;AAED,SAASK,eAAT,CAAyBJ,KAAzB,EAAgC;EAC5B,MAAMC,IAAI,GAAGL,SAAS,CAACI,KAAD,CAAtB;EAEA,OAAQnC,CAAC,CAACwC,KAAF,CAASJ,IAAI,IAAIA,IAAI,CAAC,QAAD,CAArB,MAAsC,KAA9C;AACH;;AAED,SAASK,gBAAT,CAA0BN,KAA1B,EAAiC;EAC7B,OAAQI,eAAe,CAACJ,KAAD,CAAf,IAA0B,mBAAlC;AACH;;AAED,SAASO,UAAT,CAAoBP,KAApB,EAA2B;EACvB,MAAMC,IAAI,GAAGL,SAAS,CAACI,KAAD,CAAtB;;EAEA,IAAI;IACA,OAAQnC,CAAC,CAACwC,KAAF,CAASJ,IAAI,IAAK,IAAIf,IAAI,CAACW,GAAL,CAASC,QAAb,CAAsBG,IAAtB,EAA4B,IAA5B,CAAlB,MAA2D,KAAnE;EACH,CAFD,CAEE,OAAOF,CAAP,EAAU;IACR,OAAO,KAAP;EACH;AACJ;;AAED,SAASS,eAAT,CAAyBR,KAAzB,EAAgC;EAC5B,OAAQd,IAAI,CAACuB,KAAL,CAAWC,SAAX,CAAqBV,KAArB,KAA+B,iBAAvC;AACH;;AAED,SAASW,WAAT,CAAqBX,KAArB,EAA4B;EACxB,OAAQO,UAAU,CAACP,KAAD,CAAV,IAAqB,4BAA7B;AACH;;AAED,SAASY,oBAAT,CAA8BZ,KAA9B,EAAqC;EACjC,IAAInC,CAAC,CAACwC,KAAF,CAAQL,KAAR,KAAkBA,KAAK,CAACa,MAAN,KAAiB,CAAvC,EAA0C;IACtC,OAAO,sBAAP;EACH,CAFD,MAEO;IACH,OAAO,IAAP;EACH;AACJ;;AAED,SAASC,aAAT,CAAuBC,IAAvB,EAA6Bf,KAA7B,EAAoC;EAChC,OAAO,IAAP;;EAEA,IAAI;IACA,OAAOnC,CAAC,CAACwC,KAAF,CAAQnB,IAAI,CAACW,GAAL,CAASmB,GAAT,CAAaC,eAAb,CAA6BF,IAA7B,EAAmCb,IAAI,CAACC,KAAL,CAAWH,KAAX,CAAnC,CAAR,MAAmE,KAA1E;EACH,CAFD,CAEE,OAAOD,CAAP,EAAU;IACR,OAAO,+BAA+BgB,IAAtC;EACH;AACJ;;AAED,SAASG,YAAT,CAAsBC,aAAtB,EAAqC;EACjC,MAAMC,SAAS,GAAGvD,CAAC,CAACwD,MAAF,CAASF,aAAT,EAAwB,UAAUG,CAAV,EAAa;IACnD,OAAQA,CAAC,CAACP,IAAF,KAAW,UAAnB;EACH,CAFiB,CAAlB;;EAIA,OAAOK,SAAP;AACH;;AAED,SAASG,cAAT,CAAwBJ,aAAxB,EAAuC;EACnC,MAAMK,YAAY,GAAG3D,CAAC,CAACwD,MAAF,CAASF,aAAT,EAAwB,UAAUG,CAAV,EAAa;IACtD,OAAQA,CAAC,CAACP,IAAF,KAAW,aAAnB;EACH,CAFoB,CAArB;;EAIA,OAAOlD,CAAC,CAAC4D,KAAF,CAAQD,YAAR,CAAP;AACH;;AAED,SAASE,MAAT,CAAgBC,KAAhB,EAAuBC,MAAvB,EAA+BC,QAA/B,EAAyC;EACrC,MAAM;IAACC,QAAD;IAAWC;EAAX,IAAqBF,QAA3B;EAEA,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEQD,MAAM,CAACf,MAAP,GAAgB,CAAhB,iBACA;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,kBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAoCc,KAApC,CADJ,eAEI;IAAK,SAAS,EAAC,aAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEQC,MAAM,CAACI,GAAP,CAAW,CAAChC,KAAD,EAAQiC,KAAR,KAAkB;IACzB,MAAM;MAACC,IAAD;MAAOnB;IAAP,IAAef,KAArB;IACA,MAAMmC,OAAO,GAAI,MAAKF,KAAM,EAA5B;IACA,MAAMG,GAAG,GAAI,UAASD,OAAQ,EAA9B;IAEA,oBACI,oBAAC,QAAD;MAAU,GAAG,EAAEC,GAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI;MAAK,SAAS,EAAC,YAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI;MAAK,SAAS,EAAC,YAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAA6BF,IAAI,GAAG,IAAP,GAAcnB,IAAd,GAAqB,GAAlD,CADJ,eAEI;MAAO,SAAS,EAAC,cAAjB;MACO,WAAW,EAAE,WAAWmB,IAD/B;MAEO,IAAI,EAAEE,GAFb;MAGO,GAAG,EAAEN,QAAQ,CAAC;QACVO,QAAQ,EAAE,WAAWH,IAAX,GAAkB,cADlB;QAEVI,QAAQ,EAAGC,GAAD,IAAS;UACf,OAAOzB,aAAa,CAACC,IAAD,EAAOwB,GAAP,CAApB;QACH;MAJS,CAAD,CAHpB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAFJ,EAYK1E,CAAC,CAACyB,GAAF,CAAMyC,MAAN,EAAc,CAAC,QAAD,EAAWI,OAAX,CAAd,kBAAsC;MACnC,SAAS,EAAC,YADyB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACXtE,CAAC,CAACyB,GAAF,CAAMyC,MAAN,EAAc,CAAC,QAAD,EAAWI,OAAX,EAAoB,SAApB,CAAd,CADW,CAZ3C,CADJ,CADJ;EAmBH,CAxBD,CAFR,CAFJ,CAHR,CADJ;AAuCH;;AAED,SAASK,kBAAT,CAA4BC,KAA5B,EAAmC;EAC/B,MAAM;IAACC;EAAD,IAAaD,KAAnB;EACA,MAAM;IAACX,QAAD;IAAWa,YAAX;IAAyBZ,MAAzB;IAAiCa;EAAjC,IAA0CpE,OAAO,CAAC;IACpDqE,IAAI,EAAE;EAD8C,CAAD,CAAvD;EAGA,MAAM7B,GAAG,GAAG4B,KAAK,CAAC,KAAD,CAAjB;EACA,MAAME,QAAQ,GAAGF,KAAK,CAAC,UAAD,CAAtB;EACA,MAAMG,QAAQ,GAAGvD,YAAY,CAACwB,GAAD,EAAM,IAAN,CAA7B;;EACA,MAAMG,aAAa,GAAGtD,CAAC,CAACyB,GAAF,CAAMyD,QAAN,EAAgB,CAAC,SAAD,EAAY,eAAZ,CAAhB,CAAtB;;EACA,MAAMC,WAAW,GAAGzB,cAAc,CAACJ,aAAD,CAAlC;;EACA,MAAM8B,iBAAiB,GAAGpF,CAAC,CAACyB,GAAF,CAAM0D,WAAN,EAAmB,CAAC,QAAD,CAAnB,EAA+B,EAA/B,CAA1B;;EAEAE,MAAM,CAACH,QAAP,GAAkBA,QAAlB;EAEA,oBACI;IAAM,QAAQ,EAAEJ,YAAY,CAACD,QAAD,CAA5B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEI;IAAK,SAAS,EAAC,aAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEI;IAAK,SAAS,EAAC,YAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,kBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,wBADJ,eAEI;IAAU,SAAS,EAAC,cAApB;IACU,WAAW,EAAC,0BADtB;IAEU,IAAI,EAAC,KAFf;IAGU,GAAG,EAAEZ,QAAQ,CAAC;MACVO,QAAQ,EAAE,0CADA;MAEVC,QAAQ,EAAE3B;IAFA,CAAD,CAHvB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,EAUKoB,MAAM,CAACf,GAAP,iBAAc;IAAK,SAAS,EAAC,YAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA6Be,MAAM,CAACf,GAAP,CAAWmC,OAAxC,CAVnB,CAFJ,eAgBI;IAAK,SAAS,EAAC,YAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,kBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eADJ,eAEI;IAAU,SAAS,EAAC,cAApB;IACU,WAAW,EAAC,iBADtB;IAEU,IAAI,EAAC,UAFf;IAGU,GAAG,EAAErB,QAAQ,CAAC;MACVO,QAAQ,EAAE,iCADA;MAEVC,QAAQ,EAAEhC;IAFA,CAAD,CAHvB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,EAUKyB,MAAM,CAACe,QAAP,iBAAmB;IAAK,SAAS,EAAC,YAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA6Bf,MAAM,CAACe,QAAP,CAAgBK,OAA7C,CAVxB,CAhBJ,CAFJ,EAiCQzB,MAAM,CAAC,oBAAD,EAAuBuB,iBAAvB,EAA0C;IAC5CnB,QAAQ,EAAEA,QADkC;IAE5CC,MAAM,EAAEA;EAFoC,CAA1C,CAjCd,eAuCI,oBAAC,cAAD;IAAgB,KAAK,EAAC,iBAAtB;IACgB,KAAK,EAAE;MAACqB,SAAS,EAAE;IAAZ,CADvB;IAEgB,QAAQ,EAAGvF,CAAC,CAACwF,IAAF,CAAOtB,MAAP,IAAiB,CAAlB,IAAwBlE,CAAC,CAACwC,KAAF,CAAQW,GAAR,CAAxB,IAAwCnD,CAAC,CAACwC,KAAF,CAAQyC,QAAR,CAFlE;IAGgB,OAAO,EAAEH,YAAY,CAACD,QAAD,CAHrC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAvCJ,CADJ;AA+CH;;cA7DQF,kB,6DAE2ChE,O;;AA6DpD,SAAS8E,wBAAT,CAAkCb,KAAlC,EAAyC;EACrC,MAAM;IAACc,iBAAD;IAAoBC,QAApB;IAA8BC,OAA9B;IAAuCf,QAAvC;IAAiDgB;EAAjD,IAA6DjB,KAAnE;;EACA,MAAMkB,aAAa,GAAG9F,CAAC,CAAC+F,KAAF,CAAQ;IAC1BC,YAAY,EAAE;EADY,CAAR,EAEnBN,iBAFmB,CAAtB;;EAIA,MAAM;IAACzB,QAAD;IAAWa,YAAX;IAAyBZ,MAAzB;IAAiCa,KAAjC;IAAwCkB;EAAxC,IAAoDtF,OAAO,CAAC;IAC9DqE,IAAI,EAAE,UADwD;IAE9Dc,aAAa,EAAEA;EAF+C,CAAD,CAAjE;EAIA,MAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoChG,QAAQ,CAAC2F,aAAD,CAAlD;EACA,MAAMM,SAAS,GAAGrB,KAAK,EAAvB,CAXqC,CAWV;;EAC3B,MAAMsB,OAAO,GAAIrG,CAAC,CAACsG,OAAF,CAAUJ,aAAV,EAAyBE,SAAzB,MAAwC,KAAzD;EAEAhG,SAAS,CAAC,MAAM;IACZ,IAAIiG,OAAJ,EAAa;MACTF,gBAAgB,CAACC,SAAD,CAAhB;;MAEA,IAAIP,QAAJ,EAAc;QACVA,QAAQ;MACX;IACJ;EACJ,CARQ,EAQN,CAACQ,OAAD,EAAUD,SAAV,EAAqBP,QAArB,EAA+BI,QAA/B,CARM,CAAT;EAUA,MAAM9C,GAAG,GAAG4B,KAAK,CAAC,KAAD,CAAjB;EACA,MAAMlD,OAAO,GAAGkD,KAAK,CAAC,SAAD,CAArB;EACA,MAAMiB,YAAY,GAAGjB,KAAK,CAAC,cAAD,CAA1B;EACA,MAAMG,QAAQ,GAAGvD,YAAY,CAACwB,GAAD,EAAM,IAAN,CAA7B;;EACA,MAAMG,aAAa,GAAGtD,CAAC,CAACyB,GAAF,CAAMyD,QAAN,EAAgB,CAAC,SAAD,EAAY,eAAZ,CAAhB,CAAtB;;EACA,MAAM3B,SAAS,GAAGF,YAAY,CAACC,aAAD,CAAZ,IAA+B,EAAjD;EACA,MAAMiD,eAAe,GAAGrF,MAAM,CAACqC,SAAS,CAACY,GAAV,CAAc;IAAA,IAAC;MAACE;IAAD,CAAD;IAAA,OAAYA,IAAZ;EAAA,CAAd,CAAD,EAAkCd,SAAlC,CAA9B;;EACA,MAAMhC,YAAY,GAAGvB,CAAC,CAACyB,GAAF,CAAM8E,eAAN,EAAuB,CAACP,YAAD,CAAvB,CAArB;;EACA,MAAMQ,cAAc,GAAGxG,CAAC,CAACyB,GAAF,CAAMF,YAAN,EAAoB,CAAC,QAAD,CAApB,EAAgC,EAAhC,CAAvB;;EACA,MAAMkF,kBAAkB,GAAGnF,cAAc,CAACC,YAAD,CAAzC;EAEA,oBACI;IAAM,QAAQ,EAAEuD,YAAY,CAACD,QAAD,CAA5B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAGI;IAAK,SAAS,EAAC,kBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,sBAHJ,eAII;IAAO,SAAS,EAAC,cAAjB;IACO,WAAW,EAAC,wBADnB;IAEO,IAAI,EAAC,SAFZ;IAGO,GAAG,EAAEZ,QAAQ,CAAC;MACVO,QAAQ,EAAE,+BADA;MAEVC,QAAQ,EAAE9B;IAFA,CAAD,CAHpB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAJJ,EAYKuB,MAAM,CAACrC,OAAP,iBAAkB;IAAK,SAAS,EAAC,YAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA6BqC,MAAM,CAACrC,OAAP,CAAeyD,OAA5C,CAZvB,eAgBI;IAAK,SAAS,EAAC,aAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEI;IAAK,SAAS,EAAC,YAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,kBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,wBADJ,eAEI;IAAU,SAAS,EAAC,cAApB;IACU,WAAW,EAAC,0BADtB;IAEU,IAAI,EAAC,KAFf;IAGU,GAAG,EAAErB,QAAQ,CAAC;MACVO,QAAQ,EAAE,0CADA;MAEVC,QAAQ,EAAE3B;IAFA,CAAD,CAHvB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,EAUKoB,MAAM,CAACf,GAAP,iBAAc;IAAK,SAAS,EAAC,YAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA6Be,MAAM,CAACf,GAAP,CAAWmC,OAAxC,CAVnB,CAFJ,EAgBQ/B,SAAS,CAACP,MAAV,GAAmB,CAAnB,iBACA;IAAK,SAAS,EAAC,YAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,kBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,cADJ,eAEI;IAAQ,IAAI,EAAC,cAAb;IACQ,SAAS,EAAC,cADlB;IAEQ,WAAW,EAAC,iBAFpB;IAGQ,GAAG,EAAEiB,QAAQ,CAAC;MACVO,QAAQ,EAAE,uBADA;MAEVC,QAAQ,EAAE1B;IAFA,CAAD,CAHrB;IAOA,QAAQ,EAAE,MAAM,CAEf,CATD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAUI;IAAQ,KAAK,EAAE,EAAf;IACQ,GAAG,EAAE,iBADb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,qBAVJ,EAeQQ,SAAS,CAACY,GAAV,CAAc,CAAChC,KAAD,EAAQiC,KAAR,KAAkB;IAC5B,MAAM;MAACC,IAAD;MAAOnB;IAAP,IAAef,KAArB;IACA,oBACI;MAAQ,KAAK,EAAEkC,IAAf;MACQ,GAAG,EAAEA,IADb;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAEEA,IAFF,CADJ;EAKH,CAPD,CAfR,CAFJ,EA2BKH,MAAM,CAAC8B,YAAP,iBAAuB;IAAK,SAAS,EAAC,YAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA6B9B,MAAM,CAAC8B,YAAP,CAAoBV,OAAjD,CA3B5B,CAjBR,CAhBJ,EAmEQzB,MAAM,CAAC,iBAAD,EAAoB2C,cAApB,EAAoC;IACtCvC,QAAQ,EAAEA,QAD4B;IAEtCC,MAAM,EAAEA;EAF8B,CAApC,CAnEd,eAyEI,oBAAC,cAAD;IAAgB,KAAK,EAAEuC,kBAAkB,GAAG,MAAH,GAAY,OAArD;IACgB,KAAK,EAAE;MAAClB,SAAS,EAAE;IAAZ,CADvB;IAEgB,QAAQ,EAAEI,QAAQ,IAAK3F,CAAC,CAACwF,IAAF,CAAOtB,MAAP,IAAiB,CAA9B,IAAoClE,CAAC,CAACwC,KAAF,CAAQW,GAAR,CAApC,IAAoDnD,CAAC,CAACwC,KAAF,CAAQX,OAAR,CAApD,IAAwE7B,CAAC,CAACwC,KAAF,CAAQwD,YAAR,CAFlG;IAGgB,OAAO,EAAEJ,OAHzB;IAIgB,OAAO,EAAEd,YAAY,CAACD,QAAD,CAJrC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAzEJ,CADJ;AAkFH;;cArHQY,wB,gJAMqD9E,O;;AAkH9D,MAAM+F,qBAAN,SAAoCzG,KAAK,CAAC0G,SAA1C,CAAoD;EAChDxB,WAAW,GAAG;IACV;;IADU,KAUdN,QAVc,GAUF+B,QAAD,IAAc;MACrB,MAAM;QAACzD,GAAD;QAAM8B,QAAN;QAAgBlB;MAAhB,IAA0B6C,QAAhC;MACA,MAAMC,YAAY,GAAG9E,SAAS,CAACkD,QAAD,CAA9B;MACA,MAAMC,QAAQ,GAAGvD,YAAY,CAACwB,GAAD,EAAM,IAAN,CAA7B;;MACA,MAAMG,aAAa,GAAGtD,CAAC,CAACyB,GAAF,CAAMyD,QAAN,EAAgB,CAAC,SAAD,EAAY,eAAZ,CAAhB,CAAtB;;MACA,MAAMC,WAAW,GAAGzB,cAAc,CAACJ,aAAD,CAAlC;;MACA,MAAM8B,iBAAiB,GAAGpF,CAAC,CAACyB,GAAF,CAAM0D,WAAN,EAAmB,CAAC,QAAD,CAAnB,EAA+B,EAA/B,CAA1B;;MAEA,MAAM2B,qBAAqB,GAAG9G,CAAC,CAACmE,GAAF,CAAMiB,iBAAN,EAAyB,SAAkB;QAAA,IAAjB;UAACf,IAAD;UAAOnB;QAAP,CAAiB;QACrE,OAAOA,IAAP;MACH,CAF6B,CAA9B;;MAGA,MAAM6D,sBAAsB,GAAG/G,CAAC,CAACmE,GAAF,CAAMiB,iBAAN,EAAyB,QAAehB,KAAf,KAAyB;QAAA,IAAxB;UAACC,IAAD;UAAOnB;QAAP,CAAwB;QAC7E,IAAIwB,GAAG,GAAGX,MAAM,CAAE,MAAKK,KAAM,EAAb,CAAhB;;QAEA,IAAGlB,IAAI,CAAC8D,QAAL,CAAc,IAAd,CAAH,EAAuB;UACnB,OAAOjF,SAAS,CAAC2C,GAAD,CAAhB;QACH,CAFD,MAGK,IAAGxB,IAAI,KAAK,SAAT,IAAsBA,IAAI,KAAK,MAAlC,EAAyC;UAC1C,OAAO+D,OAAO,CAAClF,SAAS,CAAC2C,GAAD,CAAV,CAAd;QACH;;QAED,OAAOA,GAAP;MACH,CAX8B,CAA/B;;MAYA,MAAMwC,iBAAiB,GAAG7F,IAAI,CAACW,GAAL,CAASmB,GAAT,CAAagE,gBAAb,CAA8BL,qBAA9B,EAAqDC,sBAArD,EAA6EK,KAA7E,CAAmF,CAAnF,CAA1B;MACA,MAAMC,IAAI,GAAGxG,MAAM,CAACyG,gBAAP,EAAb;MACA,MAAMC,IAAI,GAAGV,YAAY,CAACW,MAAb,GAAsBN,iBAAnC;MACA,MAAM/E,KAAK,GAAG,CAAd;MAEApB,KAAK,CAAC0G,QAAN,CAAerG,8BAA8B,CAACX,aAAa,CAACiH,MAAf,EAAuBvE,GAAvB,EAA4B;QACjEkE,IAAI,EAAEA,IAD2D;QAEjEM,EAAE,EAAE,IAF6D;QAGjEJ,IAAI,EAAEA,IAH2D;QAIjEpF,KAAK,EAAEA;MAJ0D,CAA5B,CAA7C;IAOH,CA7Ca;;IAGV,KAAKyF,YAAL,GAAoB;MAChBhC,OAAO,EAAE;IADO,CAApB;IAIA,KAAKiC,KAAL,GAAa,KAAKD,YAAlB;EACH;;EAuCDE,MAAM,GAAG;IACL,oBACI;MAAK,SAAS,EAAC,uBAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI,oBAAC,kBAAD;MAAoB,QAAQ,EAAE,KAAKjD,QAAnC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADJ,CADJ;EAKH;;EAtD+C;EAAA;IAAA;IAAA;EAAA;;AAAA;;AAyDpD,MAAMkD,2BAAN,SAA0C9H,KAAK,CAAC0G,SAAhD,CAA0D;EACtDxB,WAAW,GAAG;IACV;;IADU,KAYdN,QAZc,GAYH,MAAO+B,QAAP,IAAoB;MAC3B,MAAM;QAAC/E,OAAD;QAAUsB,GAAV;QAAe6C,YAAf;QAA6BjC;MAA7B,IAAuC6C,QAA7C;MACA,MAAM1B,QAAQ,GAAGvD,YAAY,CAACwB,GAAD,EAAMtB,OAAN,CAA7B;;MACA,MAAMyB,aAAa,GAAGtD,CAAC,CAACyB,GAAF,CAAMyD,QAAN,EAAgB,CAAC,SAAD,EAAY,eAAZ,CAAhB,CAAtB;;MACA,MAAM3B,SAAS,GAAGF,YAAY,CAACC,aAAD,CAAZ,IAA+B,EAAjD;MACA,MAAMiD,eAAe,GAAGrF,MAAM,CAACqC,SAAS,CAACY,GAAV,CAAc;QAAA,IAAC;UAACE;QAAD,CAAD;QAAA,OAAYA,IAAZ;MAAA,CAAd,CAAD,EAAkCd,SAAlC,CAA9B;;MACA,MAAMhC,YAAY,GAAGvB,CAAC,CAACyB,GAAF,CAAM8E,eAAN,EAAuB,CAACP,YAAD,CAAvB,CAArB;;MACA,MAAMQ,cAAc,GAAGxG,CAAC,CAACyB,GAAF,CAAMF,YAAN,EAAoB,CAAC,QAAD,CAApB,EAAgC,EAAhC,CAAvB;;MACA,MAAMyG,eAAe,GAAGhI,CAAC,CAACyB,GAAF,CAAMF,YAAN,EAAoB,CAAC,SAAD,CAApB,EAAiC,EAAjC,CAAxB;;MACA,MAAM0G,iBAAiB,GAAGjI,CAAC,CAACyB,GAAF,CAAMF,YAAN,EAAoB,CAAC,WAAD,CAApB,EAAmC6F,KAAnC,CAAyC,CAAzC,CAA1B;;MACA,MAAMX,kBAAkB,GAAGnF,cAAc,CAACC,YAAD,CAAzC;;MAEA,MAAM2G,UAAU,GAAGlI,CAAC,CAACmE,GAAF,CAAMqC,cAAN,EAAsB,SAAkB;QAAA,IAAjB;UAACnC,IAAD;UAAOnB;QAAP,CAAiB;QACvD,OAAOA,IAAP;MACH,CAFkB,CAAnB;;MAGA,MAAMiF,WAAW,GAAGnI,CAAC,CAACmE,GAAF,CAAMqC,cAAN,EAAsB,QAAepC,KAAf,KAAyB;QAAA,IAAxB;UAACC,IAAD;UAAOnB;QAAP,CAAwB;QAC/D,IAAIwB,GAAG,GAAGX,MAAM,CAAE,MAAKK,KAAM,EAAb,CAAhB;;QACA,IAAGlB,IAAI,CAAC8D,QAAL,CAAc,IAAd,CAAH,EAAuB;UACnB,OAAOjF,SAAS,CAAC2C,GAAD,CAAhB;QACH,CAFD,MAGK,IAAGxB,IAAI,KAAK,SAAT,IAAsBA,IAAI,KAAK,MAAlC,EAAyC;UAC1C,OAAO+D,OAAO,CAAClF,SAAS,CAAC2C,GAAD,CAAV,CAAd;QACH;;QAED,OAAOA,GAAP;MACH,CAVmB,CAApB;;MAWA,MAAMwC,iBAAiB,GAAG7F,IAAI,CAACW,GAAL,CAASmB,GAAT,CAAagE,gBAAb,CAA8Be,UAA9B,EAA0CC,WAA1C,EAAuDf,KAAvD,CAA6D,CAA7D,CAA1B;MAEA,MAAMgB,cAAc,GAAI,IAAIrI,SAAJ,CAAc,EAAd,CAAD,CAAoBsI,GAApB,CAAwB,EAAxB,CAAvB;MACA,MAAMhB,IAAI,GAAGxG,MAAM,CAACyG,gBAAP,EAAb;MACA,MAAMgB,QAAQ,GAAG1H,KAAK,CAAC2H,wBAAN,EAAjB,CA9B2B,CA8BwB;;MACnD,MAAMC,QAAQ,GAAG,QAAjB;MACA,MAAMjB,IAAI,GAAGU,iBAAiB,GAAGf,iBAAjC;MACA,MAAM/E,KAAK,GAAG,CAAd;MACA,MAAMsG,cAAc,GAAG,CAAvB;;MAEA,IAAIhC,kBAAJ,EAAwB;QACpB,KAAKiC,QAAL,CAAc;UACVC,SAAS,EAAE,IADD;UAEVC,UAAU,EAAE;QAFF,CAAd,EADoB,CAMpB;;QACA,MAAMH,cAAc,GAAG,CAAvB;QACA,MAAMI,EAAE,GAAGjI,KAAK,CAACkI,uBAAN,CAA8B;UACrCzB,IAAI,EAAEA,IAD+B;UAErCM,EAAE,EAAE9F,OAFiC;UAGrC0F,IAAI,EAAEA,IAH+B;UAIrCpF,KAAK,EAAEA,KAJ8B;UAKrC4G,cAAc,EAAET,QALqB;UAMrCE,QAAQ,EAAEA;QAN2B,CAA9B,EAORC,cAPQ,CAAX;QAQA,MAAMO,UAAU,GAAGlI,OAAO,CAACmI,QAAR,CAAiBC,WAAjB,CAA6BL,EAA7B,CAAnB;;QAEA,IAAG;UACC,MAAMM,YAAY,GAAG,MAAMhI,GAAG,CAACiI,iBAAJ,CAAsB;YAAC7B,IAAI,EAAEyB,UAAU,CAACK,QAAX,CAAoB,KAApB,EAA2BjC,KAA3B,CAAiC,CAAjC;UAAP,CAAtB,EAAmE;YAACkC,OAAO,EAAE1I,KAAK,CAAC2I,UAAN;UAAV,CAAnE,CAA3B;UACA,MAAMC,gBAAgB,GAAG,MAAML,YAAY,CAAC/G,IAAb,EAA/B;;UACA,MAAMqH,MAAM,GAAGzJ,CAAC,CAACyB,GAAF,CAAM+H,gBAAN,EAAwB,QAAxB,CAAf;;UACA,MAAME,YAAY,GAAI1J,CAAC,CAACyB,GAAF,CAAMgI,MAAN,EAAc,UAAd,CAAtB;;UAEA,KAAKf,QAAL,CAAc;YACVE,UAAU,EAAE5I,CAAC,CAAC+F,KAAF,CAAQ0D,MAAR,EAAgB;cACxBE,OAAO,EAAE3B,eADe;cAExB4B,iBAAiB,EAAEvI,IAAI,CAACW,GAAL,CAASmB,GAAT,CAAa0G,gBAAb,CAA8B7B,eAA9B,EAA+ChI,CAAC,CAACyB,GAAF,CAAMgI,MAAN,EAAc,WAAd,CAA/C;YAFK,CAAhB,CADF;YAKVd,SAAS,EAAE;UALD,CAAd;QAOH,CAbD,CAcA,OAAOzG,CAAP,EAAU;UACN;UACA,KAAKwG,QAAL,CAAc;YACVC,SAAS,EAAE,KADD;YAEVC,UAAU,EAAE;cACRkB,QAAQ,EAAE5H,CAAC,CAACoD;YADJ;UAFF,CAAd;QAMH;MAEJ,CA1CD,MA0CO;QACHvE,KAAK,CAAC0G,QAAN,CAAerG,8BAA8B,CAACX,aAAa,CAACsJ,QAAf,EAAyB5G,GAAzB,EAA8B;UACnEkE,IAAI,EAAEA,IAD6D;UAEnEM,EAAE,EAAE9F,OAF+D;UAGnE0F,IAAI,EAAEA,IAH6D;UAInEpF,KAAK,EAAEA;QAJ4D,CAA9B,CAA7C;MAOH;IACJ,CAnGa;;IAAA,KAqGd0D,QArGc,GAqGH,MAAM;MACb,KAAK6C,QAAL,CAAc;QACVE,UAAU,EAAE;MADF,CAAd;IAGH,CAzGa;;IAGV,KAAKhB,YAAL,GAAoB;MAChBhC,OAAO,EAAE,KADO;MAGhB6D,MAAM,EAAE;IAHQ,CAApB;IAMA,KAAK5B,KAAL,GAAa,KAAKD,YAAlB;EACH;;EAiGDE,MAAM,GAAG;IACL,MAAM;MAACpC;IAAD,IAAsB,KAAKd,KAAjC;IACA,MAAM;MAAC+D,SAAD;MAAYC;IAAZ,IAA0B,KAAKf,KAArC;;IACA,MAAMmC,KAAK,GAAGhK,CAAC,CAACyB,GAAF,CAAMmH,UAAN,EAAkB,UAAlB,CAAd;;IAEA,oBACI;MAAK,SAAS,EAAC,6BAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI,oBAAC,wBAAD;MAA0B,iBAAiB,EAAElD,iBAA7C;MAC0B,QAAQ,EAAE,KAAKb,QADzC;MAE0B,QAAQ,EAAE,KAAKgB,QAFzC;MAG0B,OAAO,EAAE8C,SAHnC;MAI0B,QAAQ,EAAEA,SAJpC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADJ,EAQQqB,KAAK,iBACL;MAAK,SAAS,EAAC,YAAf;MACK,KAAK,EAAE;QACHzE,SAAS,EAAE;MADR,CADZ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAIKyE,KAJL,CATR,EAiBQpB,UAAU,iBACV;MAAK,KAAK,EAAE;QACRrD,SAAS,EAAE;MADH,CAAZ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAGI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI;MAAK,SAAS,EAAC,YAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBADJ,eAEI;MAAO,SAAS,EAAC,cAAjB;MACO,IAAI,EAAE,WADb;MAEO,KAAK,EAAEvF,CAAC,CAACyB,GAAF,CAAMmH,UAAN,EAAkB,WAAlB,CAFd;MAGO,QAAQ,MAHf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAFJ,CAHJ,CAlBR,EAgCQA,UAAU,iBACV;MAAK,SAAS,EAAC,aAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAEQ5I,CAAC,CAACyB,GAAF,CAAMmH,UAAN,EAAkB,SAAlB,EAA6B,EAA7B,EAAiCzE,GAAjC,CAAqC,CAAChC,KAAD,EAAQiC,KAAR,KAAkB;MACnD,MAAM;QAACC,IAAD;QAAOnB;MAAP,IAAef,KAArB;MACA,oBACI,oBAAC,QAAD;QAAU,GAAG,EAAEkC,IAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACI;QAAK,SAAS,EAAC,YAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACI;QAAK,SAAS,EAAC,YAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAA6BA,IAAI,GAAG,IAAP,GAAcnB,IAAd,GAAqB,GAAlD,CADJ,eAEI;QAAO,SAAS,EAAC,cAAjB;QACO,KAAK,EAAElD,CAAC,CAACyB,GAAF,CAAMmH,UAAN,EAAkB,CAAC,mBAAD,EAAsBxE,KAAtB,CAAlB,CADd;QAEO,QAAQ,MAFf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAFJ,CADJ,CADJ;IAWH,CAbD,CAFR,CAjCR,CADJ;EAuDH;;EAxKqD;EAAA;IAAA;IAAA;EAAA;;AAAA;;AA4K1D,MAAM6F,YAAN,SAA2BhK,KAAK,CAAC0G,SAAjC,CAA2C;EACvCmB,MAAM,GAAG;IACL,IAAIoC,YAAY,GAAG,KAAKtF,KAAL,CAAWuF,KAAX,CAAiBC,MAAjB,CAAwBF,YAA3C;IACA,IAAIG,WAAW,GAAGpJ,kBAAkB,CAAC,KAAK2D,KAAL,CAAW0F,OAAX,CAAmBC,QAAnB,CAA4BC,MAA7B,CAApC;;IACA,IAAIH,WAAW,CAAC,KAAD,CAAf,EAAwB;MACpBA,WAAW,CAAC,KAAD,CAAX,GAAqBI,IAAI,CAACJ,WAAW,CAAC,KAAD,CAAZ,CAAzB;IACH;;IAED,oBACI;MAAK,SAAS,EAAC,cAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI;MAAK,SAAS,EAAC,2BAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI,oBAAC,UAAD;MAAY,KAAK,EAAE,IAAnB;MACY,MAAM,EAAE,IADpB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAEI,oBAAC,MAAD;MAAQ,QAAQ,EAAE,IAAlB;MACQ,SAAS,EAAE,KADnB;MAEQ,KAAK,EAAE;QAACK,KAAK,EAAE;MAAR,CAFf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAII,oBAAC,UAAD;MACI,KAAK,EAAC,iBADV;MAEI,IAAI,EAAE,sBAAsBjK,aAAa,CAACiH,MAF9C;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAJJ,eAQI,oBAAC,UAAD;MACI,KAAK,EAAC,wBADV;MAEI,IAAI,EAAE,sBAAsBjH,aAAa,CAACsJ,QAF9C;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EARJ,CAFJ,CADJ,EAmBSG,YAAY,KAAKzJ,aAAa,CAACiH,MAAhC,iBACA,oBAAC,qBAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EApBR,EAuBSwC,YAAY,KAAKzJ,aAAa,CAACsJ,QAAhC,iBACA,oBAAC,2BAAD;MAA6B,iBAAiB,EAAEM,WAAhD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAxBR,CADJ,CADJ;EA+BH;;EAvCsC;EAAA;IAAA;IAAA;EAAA;;AAAA;;AA0C3C,MAAMM,eAAe,GAAG9C,KAAK,IAAI;EAC7B,OAAO,EAAP;AACH,CAFD;;iBAIexH,OAAO,CAACsK,eAAD,CAAP,CAAyBV,YAAzB,C;;AAAf;;;;;;;;;;0BAjlBM5I,I;0BAEGC,c;0BAOAK,Y;0BAUAI,S;0BAUAQ,e;0BAMAE,gB;0BAIAC,U;0BAUAC,e;0BAIAG,W;0BAIAC,oB;0BAQAE,a;0BAUAI,Y;0BAQAK,c;0BAQAG,M;0BA4CAc,kB;0BA+DAc,wB;0BAwHHiB,qB;0BAyDAqB,2B;0BA4KAkC,Y;0BA0CAU,e"},"metadata":{},"sourceType":"module"}