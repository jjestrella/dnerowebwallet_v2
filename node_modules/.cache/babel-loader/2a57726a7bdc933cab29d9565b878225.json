{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport * as dnerojs from '@dnerolabs/dnero-js';\nimport DneroJS from \"../libs/dnerojs.esm\";\nexport const SingleCallTokenBalancesAddressByChainId = {\n  [dnerojs.networks.ChainIds.Mainnet]: '0xb6ecbc094abd0ff7cf030ec9e81f6ca8045b87f9',\n  [dnerojs.networks.ChainIds.Testnet]: '0xf0cfe34a7e053520f08bf0a982391810ece9c582',\n  [dnerojs.networks.ChainIds.Privatenet]: '0xedba30e32e11ae95ca9c000b8de97c7af087c7de'\n};\nexport const DDropStakingAddressByChainId = {\n  [dnerojs.networks.ChainIds.Mainnet]: '0xA89c744Db76266ecA60e2b0F62Afcd1f8581b7ed',\n  [dnerojs.networks.ChainIds.Testnet]: '0xA8bfA60203E55f86Dc7013CBf3d8fF85bb1d3cC7'\n};\nexport const DDropAddressByChainId = {\n  [dnerojs.networks.ChainIds.Mainnet]: '0x1336739B05C7Ab8a526D40DCC0d04a826b5f8B03',\n  [dnerojs.networks.ChainIds.Testnet]: '0x08a0c0e8EFd07A98db11d79165063B6Bc2469ADF'\n};\nexport const StakePurposeForDDROP = 1000;\nexport const Urls = {\n  PreventingLostTokens: 'https://docs.dnerochain.org/docs/preventing-lost-eth-erc20-tokens'\n};\nexport const FaucetAvailable = false;\nexport function getMinStakeAmount(purpose) {\n  if (purpose === dnerojs.constants.StakePurpose.StakeForValidator) {\n    return 200000.0;\n  } else if (purpose === dnerojs.constants.StakePurpose.StakeForSentry) {\n    return 1000.0;\n  } else if (purpose === dnerojs.constants.StakePurpose.StakeForEliteEdge) {\n    return 10000.0;\n  } //Unknown\n\n\n  return 0.0;\n}\nexport function getMaxStakeAmount(purpose) {\n  if (purpose === dnerojs.constants.StakePurpose.StakeForEliteEdge) {\n    return 500000.0;\n  } //No max\n\n\n  return 100000000000.0;\n}\nexport function getMaxDelegatedStakeAmount(purpose) {\n  if (purpose === dnerojs.constants.StakePurpose.StakeForSentry) {\n    //No max\n    return 100000000000.0;\n  } //Unknown\n\n\n  return 0.0;\n}\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(SingleCallTokenBalancesAddressByChainId, \"SingleCallTokenBalancesAddressByChainId\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/constants/index.js\");\n  reactHotLoader.register(DDropStakingAddressByChainId, \"DDropStakingAddressByChainId\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/constants/index.js\");\n  reactHotLoader.register(DDropAddressByChainId, \"DDropAddressByChainId\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/constants/index.js\");\n  reactHotLoader.register(StakePurposeForDDROP, \"StakePurposeForDDROP\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/constants/index.js\");\n  reactHotLoader.register(Urls, \"Urls\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/constants/index.js\");\n  reactHotLoader.register(FaucetAvailable, \"FaucetAvailable\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/constants/index.js\");\n  reactHotLoader.register(getMinStakeAmount, \"getMinStakeAmount\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/constants/index.js\");\n  reactHotLoader.register(getMaxStakeAmount, \"getMaxStakeAmount\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/constants/index.js\");\n  reactHotLoader.register(getMaxDelegatedStakeAmount, \"getMaxDelegatedStakeAmount\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/constants/index.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"names":["dnerojs","DneroJS","SingleCallTokenBalancesAddressByChainId","networks","ChainIds","Mainnet","Testnet","Privatenet","DDropStakingAddressByChainId","DDropAddressByChainId","StakePurposeForDDROP","Urls","PreventingLostTokens","FaucetAvailable","getMinStakeAmount","purpose","constants","StakePurpose","StakeForValidator","StakeForSentry","StakeForEliteEdge","getMaxStakeAmount","getMaxDelegatedStakeAmount"],"sources":["/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/constants/index.js"],"sourcesContent":["import * as dnerojs from '@dnerolabs/dnero-js';\nimport DneroJS from \"../libs/dnerojs.esm\";\n\nexport const SingleCallTokenBalancesAddressByChainId = {\n    [dnerojs.networks.ChainIds.Mainnet]: '0xb6ecbc094abd0ff7cf030ec9e81f6ca8045b87f9',\n    [dnerojs.networks.ChainIds.Testnet]: '0xf0cfe34a7e053520f08bf0a982391810ece9c582',\n    [dnerojs.networks.ChainIds.Privatenet]: '0xedba30e32e11ae95ca9c000b8de97c7af087c7de'\n};\n\nexport const DDropStakingAddressByChainId = {\n    [dnerojs.networks.ChainIds.Mainnet]: '0xA89c744Db76266ecA60e2b0F62Afcd1f8581b7ed',\n    [dnerojs.networks.ChainIds.Testnet]: '0xA8bfA60203E55f86Dc7013CBf3d8fF85bb1d3cC7',\n};\n\nexport const DDropAddressByChainId = {\n    [dnerojs.networks.ChainIds.Mainnet]: '0x1336739B05C7Ab8a526D40DCC0d04a826b5f8B03',\n    [dnerojs.networks.ChainIds.Testnet]: '0x08a0c0e8EFd07A98db11d79165063B6Bc2469ADF',\n};\n\nexport const StakePurposeForDDROP = 1000;\n\nexport const Urls = {\n    PreventingLostTokens: 'https://docs.dnerochain.org/docs/preventing-lost-eth-erc20-tokens'\n};\n\nexport const FaucetAvailable = false;\n\n\nexport function getMinStakeAmount(purpose){\n    if(purpose === dnerojs.constants.StakePurpose.StakeForValidator){\n        return 200000.0;\n    }\n    else if(purpose === dnerojs.constants.StakePurpose.StakeForSentry){\n        return 1000.0;\n    }\n    else if(purpose === dnerojs.constants.StakePurpose.StakeForEliteEdge){\n        return 10000.0;\n    }\n\n    //Unknown\n    return 0.0;\n}\n\nexport function getMaxStakeAmount(purpose){\n    if(purpose === dnerojs.constants.StakePurpose.StakeForEliteEdge){\n        return 500000.0;\n    }\n\n    //No max\n    return 100000000000.0;\n}\n\nexport function getMaxDelegatedStakeAmount(purpose){\n    if(purpose === dnerojs.constants.StakePurpose.StakeForSentry){\n        //No max\n        return 100000000000.0;\n    }\n\n    //Unknown\n    return 0.0;\n}\n"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,OAAZ,MAAyB,qBAAzB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,OAAO,MAAMC,uCAAuC,GAAG;EACnD,CAACF,OAAO,CAACG,QAAR,CAAiBC,QAAjB,CAA0BC,OAA3B,GAAqC,4CADc;EAEnD,CAACL,OAAO,CAACG,QAAR,CAAiBC,QAAjB,CAA0BE,OAA3B,GAAqC,4CAFc;EAGnD,CAACN,OAAO,CAACG,QAAR,CAAiBC,QAAjB,CAA0BG,UAA3B,GAAwC;AAHW,CAAhD;AAMP,OAAO,MAAMC,4BAA4B,GAAG;EACxC,CAACR,OAAO,CAACG,QAAR,CAAiBC,QAAjB,CAA0BC,OAA3B,GAAqC,4CADG;EAExC,CAACL,OAAO,CAACG,QAAR,CAAiBC,QAAjB,CAA0BE,OAA3B,GAAqC;AAFG,CAArC;AAKP,OAAO,MAAMG,qBAAqB,GAAG;EACjC,CAACT,OAAO,CAACG,QAAR,CAAiBC,QAAjB,CAA0BC,OAA3B,GAAqC,4CADJ;EAEjC,CAACL,OAAO,CAACG,QAAR,CAAiBC,QAAjB,CAA0BE,OAA3B,GAAqC;AAFJ,CAA9B;AAKP,OAAO,MAAMI,oBAAoB,GAAG,IAA7B;AAEP,OAAO,MAAMC,IAAI,GAAG;EAChBC,oBAAoB,EAAE;AADN,CAAb;AAIP,OAAO,MAAMC,eAAe,GAAG,KAAxB;AAGP,OAAO,SAASC,iBAAT,CAA2BC,OAA3B,EAAmC;EACtC,IAAGA,OAAO,KAAKf,OAAO,CAACgB,SAAR,CAAkBC,YAAlB,CAA+BC,iBAA9C,EAAgE;IAC5D,OAAO,QAAP;EACH,CAFD,MAGK,IAAGH,OAAO,KAAKf,OAAO,CAACgB,SAAR,CAAkBC,YAAlB,CAA+BE,cAA9C,EAA6D;IAC9D,OAAO,MAAP;EACH,CAFI,MAGA,IAAGJ,OAAO,KAAKf,OAAO,CAACgB,SAAR,CAAkBC,YAAlB,CAA+BG,iBAA9C,EAAgE;IACjE,OAAO,OAAP;EACH,CATqC,CAWtC;;;EACA,OAAO,GAAP;AACH;AAED,OAAO,SAASC,iBAAT,CAA2BN,OAA3B,EAAmC;EACtC,IAAGA,OAAO,KAAKf,OAAO,CAACgB,SAAR,CAAkBC,YAAlB,CAA+BG,iBAA9C,EAAgE;IAC5D,OAAO,QAAP;EACH,CAHqC,CAKtC;;;EACA,OAAO,cAAP;AACH;AAED,OAAO,SAASE,0BAAT,CAAoCP,OAApC,EAA4C;EAC/C,IAAGA,OAAO,KAAKf,OAAO,CAACgB,SAAR,CAAkBC,YAAlB,CAA+BE,cAA9C,EAA6D;IACzD;IACA,OAAO,cAAP;EACH,CAJ8C,CAM/C;;;EACA,OAAO,GAAP;AACH;;;;;;;;;;0BAzDYjB,uC;0BAMAM,4B;0BAKAC,qB;0BAKAC,oB;0BAEAC,I;0BAIAE,e;0BAGGC,iB;0BAeAO,iB;0BASAC,0B"},"metadata":{},"sourceType":"module"}