{"ast":null,"code":"const ChainIds = {\n  Mainnet: 'mainnet',\n  Testnet: 'testnet',\n  TestnetSapphire: 'testnet_sapphire',\n  Privatenet: 'privatenet',\n  EliteEdgeTestnet: 'testnet_amber'\n};\nconst Mainnet = {\n  chainId: ChainIds.Mainnet,\n  name: \"Mainnet\",\n  //rpcUrl: \"https://dnero-bridge-rpc.dnerochain.org/rpc\",\n  rpcUrl: \"http://143.198.132.249:15511/rpc\",\n  //explorerUrl: \"https://explorer.dnerochain.org\",\n  explorerUrl: \"http://164.92.81.239:5445\",\n  color: \"#1BDED0\"\n};\nconst Testnet = {\n  chainId: ChainIds.Testnet,\n  name: \"Testnet\",\n  rpcUrl: \"https://dnero-bridge-rpc-testnet.dnerochain.org/rpc\",\n  explorerUrl: \"https://beta-explorer.dnerochain.org\",\n  color: \"#FF4A8D\"\n};\nconst TestnetSapphire = {\n  chainId: ChainIds.TestnetSapphire,\n  name: \"Testnet (Sapphire)\",\n  rpcUrl: null,\n  explorerUrl: null,\n  color: \"#3199F2\"\n};\nconst Privatenet = {\n  chainId: ChainIds.Privatenet,\n  name: \"Smart Contracts Sandbox\",\n  rpcUrl: \"https://dnero-node-rpc-smart-contract-sandbox.dnerochain.org/rpc\",\n  explorerUrl: \"https://smart-contract-testnet-explorer.dnerochain.org\",\n  color: \"#7157FF\"\n};\nconst EliteEdgeTestnet = {\n  chainId: ChainIds.EliteEdgeTestnet,\n  name: \"Elite Edge Testnet\",\n  rpcUrl: \"http://35.235.73.165:16888/rpc\",\n  explorerUrl: \"https://elite-edge-testnet-explorer.dnerochain.org\",\n  color: \"#E0B421\"\n};\nconst networks = {\n  [ChainIds.Mainnet]: Mainnet,\n  [ChainIds.Testnet]: Testnet,\n  [ChainIds.TestnetSapphire]: TestnetSapphire,\n  [ChainIds.Privatenet]: Privatenet,\n  [ChainIds.EliteEdgeTestnet]: EliteEdgeTestnet\n};\n\nconst getRPCUrlForChainId = chainId => {\n  //TODO throw if unknown\n  return networks[chainId]['rpcUrl'];\n};\n\nconst getExplorerUrlForChainId = chainId => {\n  //TODO throw if unknown\n  return networks[chainId]['explorerUrl'];\n};\n\nconst getNetworkForChainId = chainId => {\n  //TODO throw if unknown\n  return networks[chainId];\n};\n\nexport { Mainnet, Testnet, TestnetSapphire, Privatenet, EliteEdgeTestnet, ChainIds, getRPCUrlForChainId, getExplorerUrlForChainId, getNetworkForChainId };","map":{"version":3,"names":["ChainIds","Mainnet","Testnet","TestnetSapphire","Privatenet","EliteEdgeTestnet","chainId","name","rpcUrl","explorerUrl","color","networks","getRPCUrlForChainId","getExplorerUrlForChainId","getNetworkForChainId"],"sources":["/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/@dnerolabs/dnero-js/src/networks/index.js"],"sourcesContent":["const ChainIds =  {\n    Mainnet: 'mainnet',\n    Testnet: 'testnet',\n    TestnetSapphire: 'testnet_sapphire',\n    Privatenet: 'privatenet',\n    EliteEdgeTestnet: 'testnet_amber'\n};\n\nconst Mainnet = {\n    chainId: ChainIds.Mainnet,\n    name: \"Mainnet\",\n    //rpcUrl: \"https://dnero-bridge-rpc.dnerochain.org/rpc\",\n\trpcUrl: \"http://143.198.132.249:15511/rpc\",\n    //explorerUrl: \"https://explorer.dnerochain.org\",\n\texplorerUrl: \"http://164.92.81.239:5445\",\n    color: \"#1BDED0\",\n};\n\nconst Testnet = {\n    chainId: ChainIds.Testnet,\n    name: \"Testnet\",\n    rpcUrl: \"https://dnero-bridge-rpc-testnet.dnerochain.org/rpc\",\n    explorerUrl: \"https://beta-explorer.dnerochain.org\",\n    color: \"#FF4A8D\",\n};\n\nconst TestnetSapphire = {\n    chainId: ChainIds.TestnetSapphire,\n    name: \"Testnet (Sapphire)\",\n    rpcUrl: null,\n    explorerUrl: null,\n    color: \"#3199F2\",\n};\n\nconst Privatenet = {\n    chainId: ChainIds.Privatenet,\n    name: \"Smart Contracts Sandbox\",\n    rpcUrl: \"https://dnero-node-rpc-smart-contract-sandbox.dnerochain.org/rpc\",\n    explorerUrl: \"https://smart-contract-testnet-explorer.dnerochain.org\",\n    color: \"#7157FF\",\n};\n\nconst EliteEdgeTestnet = {\n    chainId: ChainIds.EliteEdgeTestnet,\n    name: \"Elite Edge Testnet\",\n    rpcUrl: \"http://35.235.73.165:16888/rpc\",\n    explorerUrl: \"https://elite-edge-testnet-explorer.dnerochain.org\",\n    color: \"#E0B421\",\n};\n\nconst networks = {\n    [ChainIds.Mainnet]: Mainnet,\n    [ChainIds.Testnet]: Testnet,\n    [ChainIds.TestnetSapphire]: TestnetSapphire,\n    [ChainIds.Privatenet]: Privatenet,\n    [ChainIds.EliteEdgeTestnet]: EliteEdgeTestnet,\n}\n\nconst getRPCUrlForChainId = (chainId) => {\n    //TODO throw if unknown\n    return networks[chainId]['rpcUrl'];\n}\n\nconst getExplorerUrlForChainId = (chainId) => {\n    //TODO throw if unknown\n    return networks[chainId]['explorerUrl'];\n}\n\nconst getNetworkForChainId = (chainId) => {\n    //TODO throw if unknown\n    return networks[chainId];\n}\n\nexport {\n    Mainnet,\n    Testnet,\n    TestnetSapphire,\n    Privatenet,\n    EliteEdgeTestnet,\n\n    ChainIds,\n\n    getRPCUrlForChainId,\n    getExplorerUrlForChainId,\n    getNetworkForChainId\n};\n\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAI;EACdC,OAAO,EAAE,SADK;EAEdC,OAAO,EAAE,SAFK;EAGdC,eAAe,EAAE,kBAHH;EAIdC,UAAU,EAAE,YAJE;EAKdC,gBAAgB,EAAE;AALJ,CAAlB;AAQA,MAAMJ,OAAO,GAAG;EACZK,OAAO,EAAEN,QAAQ,CAACC,OADN;EAEZM,IAAI,EAAE,SAFM;EAGZ;EACHC,MAAM,EAAE,kCAJO;EAKZ;EACHC,WAAW,EAAE,2BANE;EAOZC,KAAK,EAAE;AAPK,CAAhB;AAUA,MAAMR,OAAO,GAAG;EACZI,OAAO,EAAEN,QAAQ,CAACE,OADN;EAEZK,IAAI,EAAE,SAFM;EAGZC,MAAM,EAAE,qDAHI;EAIZC,WAAW,EAAE,sCAJD;EAKZC,KAAK,EAAE;AALK,CAAhB;AAQA,MAAMP,eAAe,GAAG;EACpBG,OAAO,EAAEN,QAAQ,CAACG,eADE;EAEpBI,IAAI,EAAE,oBAFc;EAGpBC,MAAM,EAAE,IAHY;EAIpBC,WAAW,EAAE,IAJO;EAKpBC,KAAK,EAAE;AALa,CAAxB;AAQA,MAAMN,UAAU,GAAG;EACfE,OAAO,EAAEN,QAAQ,CAACI,UADH;EAEfG,IAAI,EAAE,yBAFS;EAGfC,MAAM,EAAE,kEAHO;EAIfC,WAAW,EAAE,wDAJE;EAKfC,KAAK,EAAE;AALQ,CAAnB;AAQA,MAAML,gBAAgB,GAAG;EACrBC,OAAO,EAAEN,QAAQ,CAACK,gBADG;EAErBE,IAAI,EAAE,oBAFe;EAGrBC,MAAM,EAAE,gCAHa;EAIrBC,WAAW,EAAE,oDAJQ;EAKrBC,KAAK,EAAE;AALc,CAAzB;AAQA,MAAMC,QAAQ,GAAG;EACb,CAACX,QAAQ,CAACC,OAAV,GAAoBA,OADP;EAEb,CAACD,QAAQ,CAACE,OAAV,GAAoBA,OAFP;EAGb,CAACF,QAAQ,CAACG,eAAV,GAA4BA,eAHf;EAIb,CAACH,QAAQ,CAACI,UAAV,GAAuBA,UAJV;EAKb,CAACJ,QAAQ,CAACK,gBAAV,GAA6BA;AALhB,CAAjB;;AAQA,MAAMO,mBAAmB,GAAIN,OAAD,IAAa;EACrC;EACA,OAAOK,QAAQ,CAACL,OAAD,CAAR,CAAkB,QAAlB,CAAP;AACH,CAHD;;AAKA,MAAMO,wBAAwB,GAAIP,OAAD,IAAa;EAC1C;EACA,OAAOK,QAAQ,CAACL,OAAD,CAAR,CAAkB,aAAlB,CAAP;AACH,CAHD;;AAKA,MAAMQ,oBAAoB,GAAIR,OAAD,IAAa;EACtC;EACA,OAAOK,QAAQ,CAACL,OAAD,CAAf;AACH,CAHD;;AAKA,SACIL,OADJ,EAEIC,OAFJ,EAGIC,eAHJ,EAIIC,UAJJ,EAKIC,gBALJ,EAOIL,QAPJ,EASIY,mBATJ,EAUIC,wBAVJ,EAWIC,oBAXJ"},"metadata":{},"sourceType":"module"}