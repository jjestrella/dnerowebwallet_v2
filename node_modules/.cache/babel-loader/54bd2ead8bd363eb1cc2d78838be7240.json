{"ast":null,"code":"var _jsxFileName = \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/components/NavBar.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport React from \"react\";\nimport './NavBar.css';\nimport Wallet from \"../services/Wallet\";\nimport { store } from '../state';\nimport { logout } from \"../state/actions/Wallet\";\nimport { copyToClipboard } from \"../utils/Utils\";\nimport Alerts from \"../services/Alerts\";\nimport { showModal } from \"../state/actions/ui\";\nimport ModalTypes from \"../constants/ModalTypes\";\nimport { getNetworkName } from \"../constants/Networks\";\nimport NetworkSelector from \"./NetworkSelector\";\n\nconst classNames = require('classnames');\n\nclass NavBar extends React.Component {\n  constructor() {\n    super();\n\n    this.onNetworkBadgeClick = () => {\n      let address = Wallet.getWalletAddress();\n\n      if (address) {\n        alert(\"You cannot change networks while a wallet is unlocked.\");\n      } else {\n        store.dispatch(showModal({\n          type: ModalTypes.NETWORK_SELECTOR\n        }));\n      }\n    };\n\n    this.logout = this.logout.bind(this);\n    this.copyAddress = this.copyAddress.bind(this);\n  }\n\n  logout() {\n    store.dispatch(logout());\n  }\n\n  copyAddress() {\n    let address = Wallet.getWalletAddress();\n    copyToClipboard(address);\n    Alerts.showSuccess(\"Your address has been copied\");\n  }\n\n  renderAccountIfNeeded() {\n    let address = Wallet.getWalletAddress();\n\n    if (address) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"NavBar__account\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"NavBar__wallet\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"NavBar__wallet-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, \"My Wallet:\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"NavBar__wallet-address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }, address), /*#__PURE__*/React.createElement(\"a\", {\n        className: \"NavBar__wallet-copy-address-icon\",\n        onClick: this.copyAddress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"/img/icons/copy@2x.png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"a\", {\n        className: \"NavBar__logout\",\n        onClick: this.logout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, \"Log out\"));\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    const {\n      network\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(\"NavBar\", {\n        'NavBar--is-centered': this.props.centered\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"NavBar__logo\",\n      src: '/img/logo/dnero_wallet_logo@2x.png',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }), !this.props.centered && /*#__PURE__*/React.createElement(NetworkSelector, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    })), this.renderAccountIfNeeded());\n  }\n\n  // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {\n    // @ts-ignore\n    this[key] = eval(code);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    network: state.wallet.network\n  };\n};\n\nconst _default = connect(mapStateToProps)(NavBar);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(NavBar, \"NavBar\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/components/NavBar.js\");\n  reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/components/NavBar.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/components/NavBar.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"names":["_","connect","React","Wallet","store","logout","copyToClipboard","Alerts","showModal","ModalTypes","getNetworkName","NetworkSelector","classNames","require","NavBar","Component","constructor","onNetworkBadgeClick","address","getWalletAddress","alert","dispatch","type","NETWORK_SELECTOR","bind","copyAddress","showSuccess","renderAccountIfNeeded","render","network","props","centered","display","flexDirection","alignItems","mapStateToProps","state","ownProps","wallet"],"sources":["/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/components/NavBar.js"],"sourcesContent":["import _ from 'lodash';\nimport {connect} from 'react-redux'\nimport React from \"react\";\nimport './NavBar.css';\nimport Wallet from \"../services/Wallet\";\nimport { store } from '../state';\nimport {logout} from \"../state/actions/Wallet\";\nimport {copyToClipboard} from \"../utils/Utils\";\nimport Alerts from \"../services/Alerts\";\nimport {showModal} from \"../state/actions/ui\";\nimport ModalTypes from \"../constants/ModalTypes\";\nimport {getNetworkName} from \"../constants/Networks\";\nimport NetworkSelector from \"./NetworkSelector\";\n\nconst classNames = require('classnames');\n\nclass NavBar extends React.Component {\n    constructor(){\n        super();\n\n        this.logout = this.logout.bind(this);\n        this.copyAddress = this.copyAddress.bind(this);\n    }\n\n    logout(){\n        store.dispatch(logout());\n    }\n\n    copyAddress(){\n        let address = Wallet.getWalletAddress();\n\n        copyToClipboard(address);\n\n        Alerts.showSuccess(\"Your address has been copied\");\n    }\n\n    onNetworkBadgeClick = () => {\n        let address = Wallet.getWalletAddress();\n\n        if(address){\n            alert(\"You cannot change networks while a wallet is unlocked.\")\n        }\n        else{\n            store.dispatch(showModal({\n                type: ModalTypes.NETWORK_SELECTOR,\n            }));\n        }\n    };\n\n    renderAccountIfNeeded(){\n        let address = Wallet.getWalletAddress();\n\n        if(address){\n            return (\n                <div className=\"NavBar__account\">\n                    <div className=\"NavBar__wallet\">\n                        <div className=\"NavBar__wallet-title\">\n                            My Wallet:\n                        </div>\n                        <div className=\"NavBar__wallet-address\">\n                            {address}\n                        </div>\n                        <a className=\"NavBar__wallet-copy-address-icon\"\n                           onClick={this.copyAddress}\n                        >\n                            <img src=\"/img/icons/copy@2x.png\"/>\n                        </a>\n                    </div>\n                    <a className=\"NavBar__logout\"\n                       onClick={this.logout}>\n                        Log out\n                    </a>\n                </div>\n            );\n        }\n        else{\n            return null;\n        }\n    }\n\n    render() {\n        const {network} = this.props;\n\n        return (\n            <div className={classNames(\"NavBar\", { 'NavBar--is-centered': this.props.centered })}>\n                <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n                    <img className=\"NavBar__logo\" src={'/img/logo/dnero_wallet_logo@2x.png'}/>\n                    {\n                        !this.props.centered &&\n                        <NetworkSelector/>\n                    }\n                </div>\n\n                { this.renderAccountIfNeeded() }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        network: state.wallet.network\n    };\n};\n\nexport default connect(mapStateToProps)(NavBar);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}