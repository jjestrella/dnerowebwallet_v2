{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.LIBUSB_ERROR_MESSAGE = exports.WEBUSB_ERROR_MESSAGE = exports.INVALID_PIN_ERROR_MESSAGE = exports.WRONG_PREVIOUS_SESSION_ERROR_MESSAGE = exports.TypedError = exports.TrezorError = exports.ERROR_CODES = void 0;\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _wrapNativeSuper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/wrapNativeSuper\"));\n\nvar ERROR_CODES = {\n  Init_NotInitialized: 'TrezorConnect not yet initialized',\n  // race condition: call on not initialized Core (usually hot-reloading)\n  Init_AlreadyInitialized: 'TrezorConnect has been already initialized',\n  // thrown by .init called multiple times\n  Init_IframeBlocked: 'Iframe blocked',\n  // iframe injection blocked (ad-blocker)\n  Init_IframeTimeout: 'Iframe timeout',\n  // iframe didn't load in specified time\n  Init_ManifestMissing: 'Manifest not set. Read more at https://github.com/trezor/connect/blob/develop/docs/index.md',\n  // manifest is not set\n  Popup_ConnectionMissing: 'Unable to establish connection with iframe',\n  // thrown by popup\n  Transport_Missing: 'Transport is missing',\n  // no transport available\n  Transport_InvalidProtobuf: '',\n  // generic error from transport layer (trezor-link)\n  Method_InvalidPackage: 'This version of trezor-connect is not suitable to work without browser. Use trezor-connect@extended package instead',\n  // thrown by node and react-native env while using regular 'web' package\n  Method_InvalidParameter: '',\n  // replaced by generic text\n  Method_NotAllowed: 'Method not allowed for this configuration',\n  // example: device management in popup mode\n  Method_PermissionsNotGranted: 'Permissions not granted',\n  // permission/confirmation not granted in popup\n  Method_Cancel: 'Cancelled',\n  // permission/confirmation not granted in popup OR .cancel() custom error\n  Method_Interrupted: 'Popup closed',\n  // interruption: popup closed\n  Method_UnknownCoin: 'Coin not found',\n  // coin definition not found\n  Method_AddressNotMatch: 'Addresses do not match',\n  // thrown by all getAddress methods with custom UI validation\n  Method_FirmwareUpdate_DownloadFailed: 'Failed to download firmware binary',\n  // thrown by FirmwareUpdate method\n  Method_CustomMessage_Callback: 'Parameter \"callback\" is not a function',\n  // thrown by CustomMessage method\n  Method_Discovery_BundleException: '',\n  // thrown by getAccountInfo method\n  Method_Override: 'override',\n  // inner \"error\", it's more like a interruption\n  Method_NoResponse: 'Call resolved without response',\n  // thrown by npm index(es), call to Core resolved without response, should not happen\n  Backend_NotSupported: 'BlockchainLink settings not found in coins.json',\n  // thrown by methods which using backends, blockchainLink not defined for this coin\n  Backend_WorkerMissing: '',\n  // thrown by BlockchainLink class, worker not specified\n  Backend_Disconnected: 'Backend disconnected',\n  // thrown by BlockchainLink class\n  Backend_Invalid: 'Invalid backend',\n  // thrown by BlockchainLink class, invalid backend (ie: backend for wrong coin set)\n  Backend_Error: '',\n  // thrown by BlockchainLink class, generic message from 'blockchain-link'\n  Runtime: '',\n  // thrown from several places, this shouldn't ever happen tho\n  Device_NotFound: 'Device not found',\n  Device_InitializeFailed: '',\n  // generic error from firmware while calling \"Initialize\" message\n  Device_FwException: '',\n  // generic FirmwareException type\n  Device_ModeException: '',\n  // generic Device.UnexpectedMode type\n  Device_Disconnected: 'Device disconnected',\n  // device disconnected during call\n  Device_UsedElsewhere: 'Device is used in another window',\n  // interruption: current session toked by other application\n  Device_InvalidState: 'Passphrase is incorrect',\n  // authorization error (device state comparison)\n  Device_CallInProgress: 'Device call in progress' // thrown when trying to make another call while current is still running\n\n};\nexports.ERROR_CODES = ERROR_CODES;\n\nvar TrezorError = /*#__PURE__*/function (_Error) {\n  (0, _inheritsLoose2[\"default\"])(TrezorError, _Error);\n\n  function TrezorError(code, message) {\n    var _this;\n\n    _this = _Error.call(this, message) || this;\n    _this.code = code;\n    _this.message = message;\n    return _this;\n  }\n\n  return TrezorError;\n}( /*#__PURE__*/(0, _wrapNativeSuper2[\"default\"])(Error));\n\nexports.TrezorError = TrezorError;\n\nvar TypedError = function TypedError(id, message) {\n  return new TrezorError(id, message || ERROR_CODES[id]);\n}; // a slight hack\n// this error string is hard-coded\n// in both bridge and extension\n\n\nexports.TypedError = TypedError;\nvar WRONG_PREVIOUS_SESSION_ERROR_MESSAGE = 'wrong previous session';\nexports.WRONG_PREVIOUS_SESSION_ERROR_MESSAGE = WRONG_PREVIOUS_SESSION_ERROR_MESSAGE;\nvar INVALID_PIN_ERROR_MESSAGE = 'PIN invalid';\nexports.INVALID_PIN_ERROR_MESSAGE = INVALID_PIN_ERROR_MESSAGE;\nvar WEBUSB_ERROR_MESSAGE = 'NetworkError: Unable to claim interface.'; // trezord error prefix.\n// user has insufficient permissions. may occur in Linux (missing udev rules), Windows and MacOS.\n\nexports.WEBUSB_ERROR_MESSAGE = WEBUSB_ERROR_MESSAGE;\nvar LIBUSB_ERROR_MESSAGE = 'LIBUSB_ERROR';\nexports.LIBUSB_ERROR_MESSAGE = LIBUSB_ERROR_MESSAGE;","map":{"version":3,"names":["_interopRequireDefault","require","exports","__esModule","LIBUSB_ERROR_MESSAGE","WEBUSB_ERROR_MESSAGE","INVALID_PIN_ERROR_MESSAGE","WRONG_PREVIOUS_SESSION_ERROR_MESSAGE","TypedError","TrezorError","ERROR_CODES","_inheritsLoose2","_wrapNativeSuper2","Init_NotInitialized","Init_AlreadyInitialized","Init_IframeBlocked","Init_IframeTimeout","Init_ManifestMissing","Popup_ConnectionMissing","Transport_Missing","Transport_InvalidProtobuf","Method_InvalidPackage","Method_InvalidParameter","Method_NotAllowed","Method_PermissionsNotGranted","Method_Cancel","Method_Interrupted","Method_UnknownCoin","Method_AddressNotMatch","Method_FirmwareUpdate_DownloadFailed","Method_CustomMessage_Callback","Method_Discovery_BundleException","Method_Override","Method_NoResponse","Backend_NotSupported","Backend_WorkerMissing","Backend_Disconnected","Backend_Invalid","Backend_Error","Runtime","Device_NotFound","Device_InitializeFailed","Device_FwException","Device_ModeException","Device_Disconnected","Device_UsedElsewhere","Device_InvalidState","Device_CallInProgress","_Error","code","message","_this","call","Error","id"],"sources":["/Users/jjestrella/DNERO_Protocol/dnerowebwallet/node_modules/trezor-connect/lib/constants/errors.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.LIBUSB_ERROR_MESSAGE = exports.WEBUSB_ERROR_MESSAGE = exports.INVALID_PIN_ERROR_MESSAGE = exports.WRONG_PREVIOUS_SESSION_ERROR_MESSAGE = exports.TypedError = exports.TrezorError = exports.ERROR_CODES = void 0;\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _wrapNativeSuper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/wrapNativeSuper\"));\n\nvar ERROR_CODES = {\n  Init_NotInitialized: 'TrezorConnect not yet initialized',\n  // race condition: call on not initialized Core (usually hot-reloading)\n  Init_AlreadyInitialized: 'TrezorConnect has been already initialized',\n  // thrown by .init called multiple times\n  Init_IframeBlocked: 'Iframe blocked',\n  // iframe injection blocked (ad-blocker)\n  Init_IframeTimeout: 'Iframe timeout',\n  // iframe didn't load in specified time\n  Init_ManifestMissing: 'Manifest not set. Read more at https://github.com/trezor/connect/blob/develop/docs/index.md',\n  // manifest is not set\n  Popup_ConnectionMissing: 'Unable to establish connection with iframe',\n  // thrown by popup\n  Transport_Missing: 'Transport is missing',\n  // no transport available\n  Transport_InvalidProtobuf: '',\n  // generic error from transport layer (trezor-link)\n  Method_InvalidPackage: 'This version of trezor-connect is not suitable to work without browser. Use trezor-connect@extended package instead',\n  // thrown by node and react-native env while using regular 'web' package\n  Method_InvalidParameter: '',\n  // replaced by generic text\n  Method_NotAllowed: 'Method not allowed for this configuration',\n  // example: device management in popup mode\n  Method_PermissionsNotGranted: 'Permissions not granted',\n  // permission/confirmation not granted in popup\n  Method_Cancel: 'Cancelled',\n  // permission/confirmation not granted in popup OR .cancel() custom error\n  Method_Interrupted: 'Popup closed',\n  // interruption: popup closed\n  Method_UnknownCoin: 'Coin not found',\n  // coin definition not found\n  Method_AddressNotMatch: 'Addresses do not match',\n  // thrown by all getAddress methods with custom UI validation\n  Method_FirmwareUpdate_DownloadFailed: 'Failed to download firmware binary',\n  // thrown by FirmwareUpdate method\n  Method_CustomMessage_Callback: 'Parameter \"callback\" is not a function',\n  // thrown by CustomMessage method\n  Method_Discovery_BundleException: '',\n  // thrown by getAccountInfo method\n  Method_Override: 'override',\n  // inner \"error\", it's more like a interruption\n  Method_NoResponse: 'Call resolved without response',\n  // thrown by npm index(es), call to Core resolved without response, should not happen\n  Backend_NotSupported: 'BlockchainLink settings not found in coins.json',\n  // thrown by methods which using backends, blockchainLink not defined for this coin\n  Backend_WorkerMissing: '',\n  // thrown by BlockchainLink class, worker not specified\n  Backend_Disconnected: 'Backend disconnected',\n  // thrown by BlockchainLink class\n  Backend_Invalid: 'Invalid backend',\n  // thrown by BlockchainLink class, invalid backend (ie: backend for wrong coin set)\n  Backend_Error: '',\n  // thrown by BlockchainLink class, generic message from 'blockchain-link'\n  Runtime: '',\n  // thrown from several places, this shouldn't ever happen tho\n  Device_NotFound: 'Device not found',\n  Device_InitializeFailed: '',\n  // generic error from firmware while calling \"Initialize\" message\n  Device_FwException: '',\n  // generic FirmwareException type\n  Device_ModeException: '',\n  // generic Device.UnexpectedMode type\n  Device_Disconnected: 'Device disconnected',\n  // device disconnected during call\n  Device_UsedElsewhere: 'Device is used in another window',\n  // interruption: current session toked by other application\n  Device_InvalidState: 'Passphrase is incorrect',\n  // authorization error (device state comparison)\n  Device_CallInProgress: 'Device call in progress' // thrown when trying to make another call while current is still running\n\n};\nexports.ERROR_CODES = ERROR_CODES;\n\nvar TrezorError = /*#__PURE__*/function (_Error) {\n  (0, _inheritsLoose2[\"default\"])(TrezorError, _Error);\n\n  function TrezorError(code, message) {\n    var _this;\n\n    _this = _Error.call(this, message) || this;\n    _this.code = code;\n    _this.message = message;\n    return _this;\n  }\n\n  return TrezorError;\n}( /*#__PURE__*/(0, _wrapNativeSuper2[\"default\"])(Error));\n\nexports.TrezorError = TrezorError;\n\nvar TypedError = function TypedError(id, message) {\n  return new TrezorError(id, message || ERROR_CODES[id]);\n}; // a slight hack\n// this error string is hard-coded\n// in both bridge and extension\n\n\nexports.TypedError = TypedError;\nvar WRONG_PREVIOUS_SESSION_ERROR_MESSAGE = 'wrong previous session';\nexports.WRONG_PREVIOUS_SESSION_ERROR_MESSAGE = WRONG_PREVIOUS_SESSION_ERROR_MESSAGE;\nvar INVALID_PIN_ERROR_MESSAGE = 'PIN invalid';\nexports.INVALID_PIN_ERROR_MESSAGE = INVALID_PIN_ERROR_MESSAGE;\nvar WEBUSB_ERROR_MESSAGE = 'NetworkError: Unable to claim interface.'; // trezord error prefix.\n// user has insufficient permissions. may occur in Linux (missing udev rules), Windows and MacOS.\n\nexports.WEBUSB_ERROR_MESSAGE = WEBUSB_ERROR_MESSAGE;\nvar LIBUSB_ERROR_MESSAGE = 'LIBUSB_ERROR';\nexports.LIBUSB_ERROR_MESSAGE = LIBUSB_ERROR_MESSAGE;"],"mappings":"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"},"metadata":{},"sourceType":"script"}