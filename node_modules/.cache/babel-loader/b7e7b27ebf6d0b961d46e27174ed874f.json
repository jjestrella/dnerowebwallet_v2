{"ast":null,"code":"import Color from 'color';\nimport React from 'react';\nimport MersenneTwister from 'mersenne-twister';\nvar WOBBLE = 30;\nvar BASE_COLORS = /*#__PURE__*/['#01888C', '#FC7500', '#034F5D', '#F73F01', '#FC1960', '#C7144C', '#F3C100', '#1598F2', '#2465E1', '#F19E02'].map(function (hex) {\n  return Color(hex);\n});\n\nvar Colors = /*#__PURE__*/function () {\n  function Colors(generator, wobble) {\n    if (wobble === void 0) {\n      wobble = WOBBLE;\n    }\n\n    this.generator = generator;\n    this.wobble = wobble; // Hue Shift\n\n    var amount = generator.random() * 30 - this.wobble / 2;\n    this.colors = BASE_COLORS.map(function (color) {\n      color.rotate(amount);\n      return color;\n    });\n  }\n\n  var _proto = Colors.prototype;\n\n  _proto.next = function next() {\n    this.generator.random(); // Apparently, to maintain compatibility with original Jazzicon\n\n    var idx = Math.floor(this.colors.length * this.generator.random());\n    return this.colors.splice(idx, 1)[0];\n  };\n\n  return Colors;\n}();\n\nvar BASE_STYLES = {\n  borderRadius: '50%',\n  overflow: 'hidden',\n  padding: 0,\n  margin: 0,\n  width: '100%',\n  height: '100%',\n  display: 'inline-block'\n};\n\nfunction Paper(props) {\n  var style = Object.assign({}, BASE_STYLES, {\n    backgroundColor: props.color.hex()\n  });\n  return React.createElement(\"div\", {\n    className: props.className\n  }, React.createElement(\"div\", {\n    style: style\n  }, props.children));\n}\n\nvar SVG_NS = 'http://www.w3.org/2000/svg';\n\nfunction Shape(props) {\n  var diameter = 100;\n  var firstRot = props.generator.random();\n  var angle = Math.PI * 2 * firstRot;\n  var velocity = diameter / props.total * props.generator.random() + props.index * diameter / props.total;\n  var tx = Math.cos(angle) * velocity;\n  var ty = Math.sin(angle) * velocity;\n  var translate = 'translate(' + tx.toFixed(3) + ' ' + ty.toFixed(3) + ')';\n  var secondRot = props.generator.random();\n  var rot = firstRot * 360 + secondRot * 180;\n  var center = diameter / 2;\n  var rotate = 'rotate(' + rot.toFixed(1) + ' ' + center + ' ' + center + ')';\n  var transform = translate + ' ' + rotate;\n  var fill = props.colors.next();\n  return React.createElement(\"rect\", {\n    xmlns: SVG_NS,\n    x: 0,\n    y: 0,\n    width: '100%',\n    height: '100%',\n    transform: transform,\n    fill: fill.hex()\n  });\n}\n\nvar DEFAULT_SHAPE_COUNT = 3;\n\nfunction times(n) {\n  return Array.from({\n    length: n\n  }, function (_, i) {\n    return i;\n  });\n}\n\nfunction Jazzicon(props) {\n  var seed = parseInt(props.address.toLowerCase().slice(2, 10), 16);\n  var generator = new MersenneTwister(seed);\n  var colors = new Colors(generator);\n  var paperColor = colors.next();\n\n  var renderShapes = function renderShapes() {\n    return times(DEFAULT_SHAPE_COUNT).map(function (i) {\n      return React.createElement(Shape, {\n        generator: generator,\n        total: DEFAULT_SHAPE_COUNT,\n        index: i,\n        key: \"shape-\" + i,\n        colors: colors\n      });\n    });\n  };\n\n  return React.createElement(Paper, {\n    color: paperColor,\n    className: props.className\n  }, React.createElement(\"svg\", {\n    x: 0,\n    y: 0,\n    xmlns: SVG_NS,\n    viewBox: '0 0 100 100'\n  }, renderShapes()));\n}\n\nexport { BASE_STYLES, Colors, Jazzicon, Paper, Shape };","map":{"version":3,"sources":["../src/colors.ts","../src/paper.component.tsx","../src/svg.ns.ts","../src/shape.component.tsx","../src/jazzicon.component.tsx"],"names":["WOBBLE","BASE_COLORS","Color","Colors","wobble","amount","generator","color","next","idx","Math","BASE_STYLES","borderRadius","overflow","padding","margin","width","height","display","Paper","props","style","backgroundColor","className","SVG_NS","Shape","diameter","firstRot","angle","velocity","tx","ty","translate","secondRot","rot","center","rotate","transform","fill","xmlns","x","y","DEFAULT_SHAPE_COUNT","length","n","Jazzicon","seed","parseInt","colors","paperColor","renderShapes","total","index","i","key","viewBox"],"mappings":"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","sourcesContent":["import Color from 'color';\nimport MersenneTwister from 'mersenne-twister';\n\nconst WOBBLE = 30;\n\nconst BASE_COLORS = [\n  '#01888C', // teal\n  '#FC7500', // bright orange\n  '#034F5D', // dark teal\n  '#F73F01', // orangered\n  '#FC1960', // magenta\n  '#C7144C', // raspberry\n  '#F3C100', // goldenrod\n  '#1598F2', // lightning blue\n  '#2465E1', // sail blue\n  '#F19E02', // gold\n].map(hex => Color(hex));\n\nexport class Colors {\n  readonly colors: Color[];\n\n  constructor(\n    private readonly generator: MersenneTwister,\n    private readonly wobble: number = WOBBLE\n  ) {\n    // Hue Shift\n    const amount = generator.random() * 30 - this.wobble / 2;\n    this.colors = BASE_COLORS.map(color => {\n      color.rotate(amount);\n      return color;\n    });\n  }\n\n  next() {\n    this.generator.random(); // Apparently, to maintain compatibility with original Jazzicon\n    const idx = Math.floor(this.colors.length * this.generator.random());\n    return this.colors.splice(idx, 1)[0];\n  }\n}\n","import React from 'react';\nimport Color from 'color';\n\nexport const BASE_STYLES = {\n  borderRadius: '50%',\n  overflow: 'hidden',\n  padding: 0,\n  margin: 0,\n  width: '100%',\n  height: '100%',\n  display: 'inline-block',\n};\n\nexport interface PaperProps {\n  color: Color;\n  className?: string;\n}\n\nexport function Paper(props: React.PropsWithChildren<PaperProps>) {\n  const style = Object.assign({}, BASE_STYLES, {\n    backgroundColor: props.color.hex(),\n  });\n\n  return (\n    <div className={props.className}>\n      <div style={style}>{props.children}</div>\n    </div>\n  );\n}\n","export const SVG_NS = 'http://www.w3.org/2000/svg';\n","import React from 'react';\nimport MersenneTwister from 'mersenne-twister';\nimport { Colors } from './colors';\nimport { SVG_NS } from './svg.ns';\n\nexport function Shape(props: {\n  generator: MersenneTwister;\n  total: number;\n  index: number;\n  colors: Colors;\n}) {\n  const diameter = 100;\n  const firstRot = props.generator.random();\n  const angle = Math.PI * 2 * firstRot;\n  const velocity =\n    (diameter / props.total) * props.generator.random() +\n    (props.index * diameter) / props.total;\n\n  const tx = Math.cos(angle) * velocity;\n  const ty = Math.sin(angle) * velocity;\n\n  const translate = 'translate(' + tx.toFixed(3) + ' ' + ty.toFixed(3) + ')';\n\n  const secondRot = props.generator.random();\n  const rot = firstRot * 360 + secondRot * 180;\n  const center = diameter / 2;\n  const rotate = 'rotate(' + rot.toFixed(1) + ' ' + center + ' ' + center + ')';\n  const transform = translate + ' ' + rotate;\n  const fill = props.colors.next();\n\n  return (\n    <rect\n      xmlns={SVG_NS}\n      x={0}\n      y={0}\n      width={'100%'}\n      height={'100%'}\n      transform={transform}\n      fill={fill.hex()}\n    />\n  );\n}\n","import React from 'react';\nimport MersenneTwister from 'mersenne-twister';\nimport { Colors } from './colors';\nimport { Paper } from './paper.component';\nimport { Shape } from './shape.component';\nimport { SVG_NS } from './svg.ns';\n\nconst DEFAULT_SHAPE_COUNT = 3;\n\nexport interface JazziconProps {\n  address: string;\n  className?: string;\n}\n\nfunction times(n: number): number[] {\n  return Array.from({ length: n }, (_, i) => i);\n}\n\nexport function Jazzicon(props: JazziconProps) {\n  const seed = parseInt(props.address.toLowerCase().slice(2, 10), 16);\n  const generator = new MersenneTwister(seed);\n  const colors = new Colors(generator);\n  const paperColor = colors.next();\n\n  const renderShapes = () => {\n    return times(DEFAULT_SHAPE_COUNT).map(i => {\n      return (\n        <Shape\n          generator={generator}\n          total={DEFAULT_SHAPE_COUNT}\n          index={i}\n          key={`shape-${i}`}\n          colors={colors}\n        />\n      );\n    });\n  };\n\n  return (\n    <Paper color={paperColor} className={props.className}>\n      <svg x={0} y={0} xmlns={SVG_NS} viewBox={'0 0 100 100'}>\n        {renderShapes()}\n      </svg>\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}