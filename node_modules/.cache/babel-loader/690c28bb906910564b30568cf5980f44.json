{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { BigNumber } from 'bignumber.js';\nimport Ethereum from \"./Ethereum\";\nimport DneroJS from '../libs/dnerojs.esm';\nimport TokenTypes from \"../constants/TokenTypes\";\nimport Config from '../Config';\nimport RLP from 'eth-lib/lib/rlp';\nimport Bytes from 'eth-lib/lib/bytes';\nimport { NetworkExplorerUrls } from '../constants/Networks';\nexport default class Dnero {\n  static setChainID(newChainID) {\n    this._chainId = newChainID;\n  }\n\n  static getChainID() {\n    return this._chainId;\n  }\n\n  static getTransactionExplorerUrl(transaction) {\n    const chainId = this.getChainID();\n    const urlBase = NetworkExplorerUrls[chainId];\n    return `${urlBase}/txs/${transaction.hash}`;\n  }\n\n  static getAccountExplorerUrl(account) {\n    const chainId = this.getChainID();\n    const urlBase = NetworkExplorerUrls[chainId];\n    return `${urlBase}/account/${account}`;\n  }\n\n  static getTransactionFee() {\n    return 0.3;\n  }\n\n  static getSmartContractGasPrice() {\n    //10^12 x 4 DTokenWei\n    return 0.000004;\n  }\n\n  static unsignedSendTx(txData, sequence) {\n    let {\n      tokenType,\n      from,\n      to,\n      amount,\n      transactionFee\n    } = txData;\n    const ten18 = new BigNumber(10).pow(18); // 10^18, 1 Dnero = 10^18 DneroWei, 1 Gamma = 10^ DTokenWei\n\n    const dneroWeiToSend = tokenType === TokenTypes.DNERO ? new BigNumber(amount).multipliedBy(ten18) : new BigNumber(0);\n    const dtokenWeiToSend = tokenType === TokenTypes.DNERO_TOKEN ? new BigNumber(amount).multipliedBy(ten18) : new BigNumber(0);\n    const feeInDTokenWei = new BigNumber(transactionFee).multipliedBy(ten18); // Any fee >= 10^12 DTokenWei should work, higher fee yields higher priority\n\n    const senderAddr = from;\n    const receiverAddr = to;\n    const senderSequence = sequence;\n    const outputs = [{\n      address: receiverAddr,\n      dneroWei: dneroWeiToSend,\n      dtokenWei: dtokenWeiToSend\n    }];\n    let tx = new DneroJS.SendTx(senderAddr, outputs, feeInDTokenWei, senderSequence);\n    return tx;\n  }\n\n  static unsignedDepositStakeTx(txData, sequence) {\n    let {\n      tokenType,\n      from,\n      holder,\n      amount,\n      transactionFee,\n      purpose\n    } = txData;\n    const ten18 = new BigNumber(10).pow(18); // 10^18, 1 Dnero = 10^18 DneroWei, 1 Gamma = 10^ DTokenWei\n\n    const amountWeiToSend = new BigNumber(amount).multipliedBy(ten18);\n    const feeInDTokenWei = new BigNumber(transactionFee).multipliedBy(ten18); // Any fee >= 10^12 DTokenWei should work, higher fee yields higher priority\n\n    const source = from;\n    const senderSequence = sequence;\n    let tx = null;\n\n    if (purpose === DneroJS.StakePurposes.StakeForValidator) {\n      tx = new DneroJS.DepositStakeTx(source, holder, amountWeiToSend, feeInDTokenWei, purpose, senderSequence);\n    } else if (purpose === DneroJS.StakePurposes.StakeForSentry) {\n      tx = new DneroJS.DepositStakeV2Tx(source, holder, amountWeiToSend, feeInDTokenWei, purpose, senderSequence);\n    } else if (purpose === DneroJS.StakePurposes.StakeForEliteEdge) {\n      tx = new DneroJS.DepositStakeV2Tx(source, holder, amountWeiToSend, feeInDTokenWei, purpose, senderSequence);\n    }\n\n    return tx;\n  }\n\n  static unsignedWithdrawStakeTx(txData, sequence) {\n    let {\n      tokenType,\n      from,\n      holder,\n      transactionFee,\n      purpose\n    } = txData;\n    const ten18 = new BigNumber(10).pow(18); // 10^18, 1 Dnero = 10^18 DneroWei, 1 Gamma = 10^ DTokenWei\n\n    const feeInDTokenWei = new BigNumber(transactionFee).multipliedBy(ten18); // Any fee >= 10^12 DTokenWei should work, higher fee yields higher priority\n\n    const source = from;\n    const senderSequence = sequence;\n    let tx = new DneroJS.WithdrawStakeTx(source, holder, feeInDTokenWei, purpose, senderSequence);\n    return tx;\n  }\n\n  static unsignedSmartContractTx(txData, sequence) {\n    let {\n      from,\n      to,\n      data,\n      value,\n      transactionFee,\n      gasLimit\n    } = txData;\n    const ten18 = new BigNumber(10).pow(18); // 10^18, 1 Dnero = 10^18 DneroWei, 1 Gamma = 10^ DTokenWei\n\n    const feeInDTokenWei = new BigNumber(transactionFee).multipliedBy(ten18); // Any fee >= 10^12 DTokenWei should work, higher fee yields higher priority\n\n    const senderSequence = sequence;\n    const gasPrice = feeInDTokenWei;\n    let tx = new DneroJS.SmartContractTx(from, to, gasLimit, gasPrice, data, value, senderSequence);\n    return tx;\n  }\n\n  static isAddress(address) {\n    return Ethereum.isAddress(address);\n  }\n\n  static isValidHolderSummary(purpose, holderSummary) {\n    return DneroJS.DepositStakeV2Tx.isValidHolderSummary(purpose, holderSummary);\n  }\n\n  static async signTransaction(unsignedTx, privateKey) {\n    let chainID = Dnero.getChainID(); // let unsignedTx = Dnero.unsignedSendTx(txData, sequence);\n\n    let signedRawTxBytes = DneroJS.TxSigner.signAndSerializeTx(chainID, unsignedTx, privateKey);\n    let signedTxRaw = signedRawTxBytes.toString('hex'); //Remove the '0x' until the RPC endpoint supports '0x' prefixes\n\n    signedTxRaw = signedTxRaw.substring(2);\n\n    if (signedTxRaw) {\n      return signedTxRaw;\n    } else {\n      throw new Error(\"Failed to sign transaction.\");\n    }\n  }\n\n  static prepareTxPayload(unsignedTx) {\n    let chainID = Dnero.getChainID();\n    let encodedChainID = RLP.encode(Bytes.fromString(chainID));\n    let encodedTxType = RLP.encode(Bytes.fromNumber(unsignedTx.getType()));\n    let encodedTx = RLP.encode(unsignedTx.rlpInput());\n    let payload = encodedChainID + encodedTxType.slice(2) + encodedTx.slice(2);\n    return payload.toString('hex');\n  }\n\n}\nDnero._chainId = Config.defaultDneroChainID;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Dnero, \"Dnero\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/services/Dnero.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"names":["BigNumber","Ethereum","DneroJS","TokenTypes","Config","RLP","Bytes","NetworkExplorerUrls","Dnero","setChainID","newChainID","_chainId","getChainID","getTransactionExplorerUrl","transaction","chainId","urlBase","hash","getAccountExplorerUrl","account","getTransactionFee","getSmartContractGasPrice","unsignedSendTx","txData","sequence","tokenType","from","to","amount","transactionFee","ten18","pow","dneroWeiToSend","DNERO","multipliedBy","dtokenWeiToSend","DNERO_TOKEN","feeInDTokenWei","senderAddr","receiverAddr","senderSequence","outputs","address","dneroWei","dtokenWei","tx","SendTx","unsignedDepositStakeTx","holder","purpose","amountWeiToSend","source","StakePurposes","StakeForValidator","DepositStakeTx","StakeForSentry","DepositStakeV2Tx","StakeForEliteEdge","unsignedWithdrawStakeTx","WithdrawStakeTx","unsignedSmartContractTx","data","value","gasLimit","gasPrice","SmartContractTx","isAddress","isValidHolderSummary","holderSummary","signTransaction","unsignedTx","privateKey","chainID","signedRawTxBytes","TxSigner","signAndSerializeTx","signedTxRaw","toString","substring","Error","prepareTxPayload","encodedChainID","encode","fromString","encodedTxType","fromNumber","getType","encodedTx","rlpInput","payload","slice","defaultDneroChainID"],"sources":["/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/services/Dnero.js"],"sourcesContent":["import {BigNumber} from 'bignumber.js';\nimport Ethereum from \"./Ethereum\";\nimport DneroJS from '../libs/dnerojs.esm';\nimport TokenTypes from \"../constants/TokenTypes\";\nimport Config from '../Config';\nimport RLP from 'eth-lib/lib/rlp';\nimport Bytes from 'eth-lib/lib/bytes';\nimport {NetworkExplorerUrls} from '../constants/Networks';\n\nexport default class Dnero {\n    static _chainId = Config.defaultDneroChainID;\n\n    static setChainID(newChainID){\n        this._chainId = newChainID;\n    }\n\n    static getChainID(){\n        return this._chainId;\n    }\n\n    static getTransactionExplorerUrl(transaction){\n        const chainId = this.getChainID();\n        const urlBase = NetworkExplorerUrls[chainId];\n\n        return`${urlBase}/txs/${transaction.hash}`;\n    }\n\n    static getAccountExplorerUrl(account){\n        const chainId = this.getChainID();\n        const urlBase = NetworkExplorerUrls[chainId];\n\n        return`${urlBase}/account/${account}`;\n    }\n\n    static getTransactionFee(){\n        return 0.3;\n    }\n\n    static getSmartContractGasPrice(){\n        //10^12 x 4 DTokenWei\n        return 0.000004;\n    }\n\n\n    static unsignedSendTx(txData, sequence) {\n        let { tokenType, from, to, amount, transactionFee} = txData;\n        const ten18 = (new BigNumber(10)).pow(18); // 10^18, 1 Dnero = 10^18 DneroWei, 1 Gamma = 10^ DTokenWei\n        const dneroWeiToSend = (tokenType === TokenTypes.DNERO ? (new BigNumber(amount)).multipliedBy(ten18) : (new BigNumber(0)));\n        const dtokenWeiToSend = (tokenType === TokenTypes.DNERO_TOKEN ? (new BigNumber(amount)).multipliedBy(ten18) : (new BigNumber(0)));\n        const feeInDTokenWei  = (new BigNumber(transactionFee)).multipliedBy(ten18); // Any fee >= 10^12 DTokenWei should work, higher fee yields higher priority\n        const senderAddr =  from;\n        const receiverAddr = to;\n        const senderSequence = sequence;\n        const outputs = [\n            {\n                address: receiverAddr,\n                dneroWei: dneroWeiToSend,\n                dtokenWei: dtokenWeiToSend,\n            }\n        ];\n\n        let tx = new DneroJS.SendTx(senderAddr, outputs, feeInDTokenWei, senderSequence);\n\n        return tx;\n    }\n\n    static unsignedDepositStakeTx(txData, sequence) {\n        let { tokenType, from, holder, amount, transactionFee, purpose} = txData;\n        const ten18 = (new BigNumber(10)).pow(18); // 10^18, 1 Dnero = 10^18 DneroWei, 1 Gamma = 10^ DTokenWei\n        const amountWeiToSend = (new BigNumber(amount)).multipliedBy(ten18);\n        const feeInDTokenWei  = (new BigNumber(transactionFee)).multipliedBy(ten18); // Any fee >= 10^12 DTokenWei should work, higher fee yields higher priority\n        const source =  from;\n        const senderSequence = sequence;\n\n        let tx = null;\n\n        if(purpose === DneroJS.StakePurposes.StakeForValidator){\n            tx = new DneroJS.DepositStakeTx(source, holder, amountWeiToSend, feeInDTokenWei, purpose, senderSequence);\n        }\n        else if(purpose === DneroJS.StakePurposes.StakeForSentry){\n            tx = new DneroJS.DepositStakeV2Tx(source, holder, amountWeiToSend, feeInDTokenWei, purpose, senderSequence);\n        }\n        else if(purpose === DneroJS.StakePurposes.StakeForEliteEdge){\n            tx = new DneroJS.DepositStakeV2Tx(source, holder, amountWeiToSend, feeInDTokenWei, purpose, senderSequence);\n        }\n\n        return tx;\n    }\n\n    static unsignedWithdrawStakeTx(txData, sequence) {\n        let { tokenType, from, holder, transactionFee, purpose} = txData;\n\n        const ten18 = (new BigNumber(10)).pow(18); // 10^18, 1 Dnero = 10^18 DneroWei, 1 Gamma = 10^ DTokenWei\n        const feeInDTokenWei  = (new BigNumber(transactionFee)).multipliedBy(ten18); // Any fee >= 10^12 DTokenWei should work, higher fee yields higher priority\n        const source =  from;\n        const senderSequence = sequence;\n\n        let tx = new DneroJS.WithdrawStakeTx(source, holder, feeInDTokenWei, purpose, senderSequence);\n\n        return tx;\n    }\n\n    static unsignedSmartContractTx(txData, sequence) {\n        let { from, to, data, value, transactionFee, gasLimit} = txData;\n\n        const ten18 = (new BigNumber(10)).pow(18); // 10^18, 1 Dnero = 10^18 DneroWei, 1 Gamma = 10^ DTokenWei\n        const feeInDTokenWei  = (new BigNumber(transactionFee)).multipliedBy(ten18); // Any fee >= 10^12 DTokenWei should work, higher fee yields higher priority\n        const senderSequence = sequence;\n        const gasPrice = feeInDTokenWei;\n\n        let tx = new DneroJS.SmartContractTx(from, to, gasLimit, gasPrice, data, value, senderSequence);\n\n        return tx;\n    }\n\n    static isAddress(address){\n        return Ethereum.isAddress(address);\n    }\n\n    static isValidHolderSummary(purpose, holderSummary){\n        return DneroJS.DepositStakeV2Tx.isValidHolderSummary(purpose, holderSummary);\n    }\n\n    static async signTransaction(unsignedTx, privateKey){\n        let chainID = Dnero.getChainID();\n        // let unsignedTx = Dnero.unsignedSendTx(txData, sequence);\n        let signedRawTxBytes = DneroJS.TxSigner.signAndSerializeTx(chainID, unsignedTx, privateKey);\n        let signedTxRaw = signedRawTxBytes.toString('hex');\n\n        //Remove the '0x' until the RPC endpoint supports '0x' prefixes\n        signedTxRaw = signedTxRaw.substring(2);\n\n        if(signedTxRaw){\n            return signedTxRaw;\n        }\n        else{\n            throw new Error(\"Failed to sign transaction.\");\n        }\n    }\n\n    static prepareTxPayload(unsignedTx){\n        let chainID = Dnero.getChainID();\n        let encodedChainID = RLP.encode(Bytes.fromString(chainID));\n        let encodedTxType = RLP.encode(Bytes.fromNumber(unsignedTx.getType()));\n        let encodedTx = RLP.encode(unsignedTx.rlpInput());\n        let payload = encodedChainID + encodedTxType.slice(2) + encodedTx.slice(2);\n        return payload.toString('hex');\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}