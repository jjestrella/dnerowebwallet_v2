{"ast":null,"code":"var _jsxFileName = \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/components/WalletTokenList.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport _ from 'lodash';\nimport React from \"react\";\nimport './WalletTokenList.css';\nimport WalletTokenListItem from './WalletTokenListItem';\nimport Dnero from '../services/Dnero';\nimport moment from \"moment\";\nimport { formatNativeTokenAmountToLargestUnit, formatDNC20TokenAmountToLargestUnit } from \"../utils/Utils\";\nimport { showModal } from \"../state/actions/ui\";\nimport ModalTypes from \"../constants/ModalTypes\";\nimport { store } from \"../state\";\n\nclass WalletTokenList extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onAddTokenClick = () => {\n      store.dispatch(showModal({\n        type: ModalTypes.TRACK_TOKEN\n      }));\n    };\n  }\n\n  render() {\n    const {\n      selectedAccount,\n      tokens,\n      assets,\n      balancesRefreshedAt\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"WalletTokenList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, selectedAccount && selectedAccount.balances && assets.map(asset => {\n      const decimals = asset.decimals;\n\n      const balanceStr = _.get(selectedAccount.balances, [asset.balanceKey], '0');\n\n      return /*#__PURE__*/React.createElement(WalletTokenListItem, {\n        key: asset.id,\n        token: asset,\n        balance: formatDNC20TokenAmountToLargestUnit(balanceStr, decimals),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }\n      });\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"AddTokenCTA\",\n      onClick: this.onAddTokenClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: 'AddTokenCTA__icon',\n      src: '/img/icons/add-token.svg',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'AddTokenCTA__name',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, \"Add Token\")), selectedAccount && _.isEmpty(selectedAccount.balances) && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"WalletTokenList__refreshed-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, \"Loading balances...\"), !_.isNil(balancesRefreshedAt) && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"WalletTokenList__refreshed-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, `Balances refreshed ${moment(balancesRefreshedAt).fromNow()}`), selectedAccount && /*#__PURE__*/React.createElement(\"a\", {\n      className: \"WalletTokenList__explorer-link\",\n      href: Dnero.getAccountExplorerUrl(selectedAccount.address),\n      target: '_blank',\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, \"View Account on Explorer\"));\n  }\n\n  // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {\n    // @ts-ignore\n    this[key] = eval(code);\n  }\n\n}\n\nconst _default = WalletTokenList;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(WalletTokenList, \"WalletTokenList\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/components/WalletTokenList.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/components/WalletTokenList.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"names":["_","React","WalletTokenListItem","Dnero","moment","formatNativeTokenAmountToLargestUnit","formatDNC20TokenAmountToLargestUnit","showModal","ModalTypes","store","WalletTokenList","Component","onAddTokenClick","dispatch","type","TRACK_TOKEN","render","selectedAccount","tokens","assets","balancesRefreshedAt","props","balances","map","asset","decimals","balanceStr","get","balanceKey","id","isEmpty","isNil","fromNow","getAccountExplorerUrl","address"],"sources":["/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/components/WalletTokenList.js"],"sourcesContent":["import _ from 'lodash';\nimport React from \"react\";\nimport './WalletTokenList.css';\nimport WalletTokenListItem from './WalletTokenListItem'\nimport Dnero from '../services/Dnero';\nimport moment from \"moment\";\nimport {formatNativeTokenAmountToLargestUnit, formatDNC20TokenAmountToLargestUnit} from \"../utils/Utils\";\nimport {showModal} from \"../state/actions/ui\";\nimport ModalTypes from \"../constants/ModalTypes\";\nimport {store} from \"../state\";\n\nclass WalletTokenList extends React.Component {\n    onAddTokenClick = () => {\n        store.dispatch(showModal({\n            type: ModalTypes.TRACK_TOKEN\n        }))\n    }\n\n    render() {\n        const {selectedAccount, tokens, assets, balancesRefreshedAt} = this.props;\n\n        return (\n            <div className=\"WalletTokenList\">\n                {\n                    selectedAccount && selectedAccount.balances &&\n                    assets.map((asset) => {\n                        const decimals = asset.decimals;\n                        const balanceStr = _.get(selectedAccount.balances, [asset.balanceKey], '0');\n\n                        return (\n                            <WalletTokenListItem key={asset.id}\n                                                 token={asset}\n                                                 balance={formatDNC20TokenAmountToLargestUnit(balanceStr, decimals)}\n                            />\n                        )\n                    })\n                }\n\n                <a className='AddTokenCTA'\n                   onClick={this.onAddTokenClick}\n                >\n                    <img className={'AddTokenCTA__icon'}\n                         src={'/img/icons/add-token.svg'}/>\n                    <div className={'AddTokenCTA__name'}>Add Token</div>\n                </a>\n\n                {\n                    selectedAccount && _.isEmpty(selectedAccount.balances) &&\n                    <div className=\"WalletTokenList__refreshed-message\">Loading balances...</div>\n                }\n\n                {\n                    !_.isNil(balancesRefreshedAt) &&\n                    <div\n                        className=\"WalletTokenList__refreshed-message\">{`Balances refreshed ${moment(balancesRefreshedAt).fromNow()}`}</div>\n                }\n\n                {\n                    selectedAccount &&\n                    <a className=\"WalletTokenList__explorer-link\"\n                       href={Dnero.getAccountExplorerUrl(selectedAccount.address)}\n                       target={'_blank'}\n                       rel='noopener noreferrer'\n                    >\n                        View Account on Explorer\n                    </a>\n                }\n            </div>\n        );\n    }\n}\n\nexport default WalletTokenList;\n"],"mappings":";;;;;;;;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,oCAAR,EAA8CC,mCAA9C,QAAwF,gBAAxF;AACA,SAAQC,SAAR,QAAwB,qBAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAAQC,KAAR,QAAoB,UAApB;;AAEA,MAAMC,eAAN,SAA8BT,KAAK,CAACU,SAApC,CAA8C;EAAA;IAAA;;IAAA,KAC1CC,eAD0C,GACxB,MAAM;MACpBH,KAAK,CAACI,QAAN,CAAeN,SAAS,CAAC;QACrBO,IAAI,EAAEN,UAAU,CAACO;MADI,CAAD,CAAxB;IAGH,CALyC;EAAA;;EAO1CC,MAAM,GAAG;IACL,MAAM;MAACC,eAAD;MAAkBC,MAAlB;MAA0BC,MAA1B;MAAkCC;IAAlC,IAAyD,KAAKC,KAApE;IAEA,oBACI;MAAK,SAAS,EAAC,iBAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAEQJ,eAAe,IAAIA,eAAe,CAACK,QAAnC,IACAH,MAAM,CAACI,GAAP,CAAYC,KAAD,IAAW;MAClB,MAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB;;MACA,MAAMC,UAAU,GAAG1B,CAAC,CAAC2B,GAAF,CAAMV,eAAe,CAACK,QAAtB,EAAgC,CAACE,KAAK,CAACI,UAAP,CAAhC,EAAoD,GAApD,CAAnB;;MAEA,oBACI,oBAAC,mBAAD;QAAqB,GAAG,EAAEJ,KAAK,CAACK,EAAhC;QACqB,KAAK,EAAEL,KAD5B;QAEqB,OAAO,EAAElB,mCAAmC,CAACoB,UAAD,EAAaD,QAAb,CAFjE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADJ;IAMH,CAVD,CAHR,eAgBI;MAAG,SAAS,EAAC,aAAb;MACG,OAAO,EAAE,KAAKb,eADjB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAGI;MAAK,SAAS,EAAE,mBAAhB;MACK,GAAG,EAAE,0BADV;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAHJ,eAKI;MAAK,SAAS,EAAE,mBAAhB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,eALJ,CAhBJ,EAyBQK,eAAe,IAAIjB,CAAC,CAAC8B,OAAF,CAAUb,eAAe,CAACK,QAA1B,CAAnB,iBACA;MAAK,SAAS,EAAC,oCAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,yBA1BR,EA8BQ,CAACtB,CAAC,CAAC+B,KAAF,CAAQX,mBAAR,CAAD,iBACA;MACI,SAAS,EAAC,oCADd;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACqD,sBAAqBhB,MAAM,CAACgB,mBAAD,CAAN,CAA4BY,OAA5B,EAAsC,EADhH,CA/BR,EAoCQf,eAAe,iBACf;MAAG,SAAS,EAAC,gCAAb;MACG,IAAI,EAAEd,KAAK,CAAC8B,qBAAN,CAA4BhB,eAAe,CAACiB,OAA5C,CADT;MAEG,MAAM,EAAE,QAFX;MAGG,GAAG,EAAC,qBAHP;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,8BArCR,CADJ;EAgDH;;EA1DyC;EAAA;IAAA;IAAA;EAAA;;AAAA;;iBA6D/BxB,e;AAAf;;;;;;;;;;0BA7DMA,e"},"metadata":{},"sourceType":"module"}