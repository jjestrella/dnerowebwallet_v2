{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nconst TokenTypes = {\n  ETHEREUM: 'ethereum',\n  ERC20_DNERO: 'erc20',\n  DNERO: 'dnero',\n  DNERO_TOKEN: 'dtoken'\n};\nexport function tokenTypeToTokenName(tokenType) {\n  if (tokenType === TokenTypes.ETHEREUM) {\n    return \"Ethereum\";\n  } else if (tokenType === TokenTypes.ERC20_DNERO) {\n    return \"ERC20 Dnero\";\n  } else if (tokenType === TokenTypes.DNERO) {\n    return \"Dnero\";\n  } else if (tokenType === TokenTypes.DNERO_TOKEN) {\n    return \"DToken\";\n  }\n}\nconst _default = TokenTypes;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(TokenTypes, \"TokenTypes\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/constants/TokenTypes.js\");\n  reactHotLoader.register(tokenTypeToTokenName, \"tokenTypeToTokenName\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/constants/TokenTypes.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/constants/TokenTypes.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"names":["TokenTypes","ETHEREUM","ERC20_DNERO","DNERO","DNERO_TOKEN","tokenTypeToTokenName","tokenType"],"sources":["/Users/jjestrella/DNERO_Protocol/dnerowebwallet/src/constants/TokenTypes.js"],"sourcesContent":["const TokenTypes = {\n    ETHEREUM: 'ethereum',\n    ERC20_DNERO: 'erc20',\n    DNERO: 'dnero',\n    DNERO_TOKEN: 'dtoken',\n};\n\n\nexport function tokenTypeToTokenName(tokenType){\n    if(tokenType === TokenTypes.ETHEREUM){\n        return \"Ethereum\";\n    }\n    else if(tokenType === TokenTypes.ERC20_DNERO){\n        return \"ERC20 Dnero\";\n    }\n    else if(tokenType === TokenTypes.DNERO){\n        return \"Dnero\";\n    }\n    else if(tokenType === TokenTypes.DNERO_TOKEN){\n        return \"DToken\";\n    }\n}\n\nexport default TokenTypes;"],"mappings":";;;;;;;;;AAAA,MAAMA,UAAU,GAAG;EACfC,QAAQ,EAAE,UADK;EAEfC,WAAW,EAAE,OAFE;EAGfC,KAAK,EAAE,OAHQ;EAIfC,WAAW,EAAE;AAJE,CAAnB;AAQA,OAAO,SAASC,oBAAT,CAA8BC,SAA9B,EAAwC;EAC3C,IAAGA,SAAS,KAAKN,UAAU,CAACC,QAA5B,EAAqC;IACjC,OAAO,UAAP;EACH,CAFD,MAGK,IAAGK,SAAS,KAAKN,UAAU,CAACE,WAA5B,EAAwC;IACzC,OAAO,aAAP;EACH,CAFI,MAGA,IAAGI,SAAS,KAAKN,UAAU,CAACG,KAA5B,EAAkC;IACnC,OAAO,OAAP;EACH,CAFI,MAGA,IAAGG,SAAS,KAAKN,UAAU,CAACI,WAA5B,EAAwC;IACzC,OAAO,QAAP;EACH;AACJ;iBAEcJ,U;AAAf;;;;;;;;;;0BAvBMA,U;0BAQUK,oB"},"metadata":{},"sourceType":"module"}